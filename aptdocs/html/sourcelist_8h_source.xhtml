<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: apt-pkg/sourcelist.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_18f22d4be2ca84c350e120b6506056ca.xhtml">apt-pkg</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">sourcelist.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// -*- mode: cpp; mode: fold -*-</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Description                                                          /*{{{*/</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/* ######################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">   SourceList - Manage a list of sources</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">   The Source List class provides access to a list of sources. It </span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">   can read them from a file and generate a list of all the distinct</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">   sources.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">   All sources have a type associated with them that defines the layout</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">   of the archive. The exact format of the file is documented in</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">   files.sgml.</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">   The types are mapped through a list of type definitions which handle</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">   the actual construction of the back end type. After loading a source </span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">   list all you have is a list of package index files that have the ability</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   to be Acquired.</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">   ##################################################################### */</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#ifndef PKGLIB_SOURCELIST_H</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#define PKGLIB_SOURCELIST_H</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/macros.h&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="pkgcache_8h.xhtml">apt-pkg/pkgcache.h</a>&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;time.h&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160; </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="keyword">class </span><a class="code" href="classFileFd.xhtml">FileFd</a>;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgTagSection.xhtml">pkgTagSection</a>;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgIndexFile.xhtml">pkgIndexFile</a>;</div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="keyword">class </span><a class="code" href="classmetaIndex.xhtml">metaIndex</a>;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">class </span><a class="code" href="classCommandLine.xhtml">CommandLine</a>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classpkgSourceList.xhtml">   42</a></span>&#160;<span class="keyword">class </span>APT_PUBLIC <a class="code" href="classpkgSourceList.xhtml">pkgSourceList</a></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;   <span class="keywordtype">void</span> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;   std::vector&lt;pkgIndexFile*&gt; VolatileFiles;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;   <span class="comment">// List of supported source list types</span></div>
<div class="line"><a name="l00049"></a><span class="lineno"><a class="line" href="classpkgSourceList_1_1Type.xhtml">   49</a></span>&#160;   <span class="keyword">class </span><a class="code" href="classpkgSourceList_1_1Type.xhtml">Type</a></div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;   {</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;      <span class="keyword">public</span>:</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;      <span class="comment">// Global list of Items supported</span></div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;      <span class="keyword">static</span> <a class="code" href="classpkgSourceList_1_1Type.xhtml">Type</a> **GlobalList;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;      <span class="keyword">static</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> GlobalListLen;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="keyword">static</span> <a class="code" href="classpkgSourceList_1_1Type.xhtml">Type</a> *GetType(<span class="keyword">const</span> <span class="keywordtype">char</span> *<a class="code" href="classpkgSourceList_1_1Type.xhtml">Type</a>) APT_PURE;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160; </div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;      <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> Name;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;      <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> Label;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160; </div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;      <span class="keywordtype">bool</span> FixupURI(std::string &amp;<a class="code" href="classURI.xhtml">URI</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">bool</span> ParseStanza(std::vector&lt;metaIndex *&gt; &amp;List,</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;                               <a class="code" href="classpkgTagSection.xhtml">pkgTagSection</a> &amp;Tags,</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;                               <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <span class="keyword">const</span> stanza_n,</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;                               <a class="code" href="classFileFd.xhtml">FileFd</a> &amp;Fd);</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">bool</span> ParseLine(std::vector&lt;metaIndex *&gt; &amp;List,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                             <span class="keyword">const</span> <span class="keywordtype">char</span> *Buffer,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;                             <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <span class="keyword">const</span> CurLine,std::string <span class="keyword">const</span> &amp;File) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;      <span class="keyword">virtual</span> <span class="keywordtype">bool</span> CreateItem(std::vector&lt;metaIndex *&gt; &amp;List,std::string <span class="keyword">const</span> &amp;<a class="code" href="classURI.xhtml">URI</a>,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;                              std::string <span class="keyword">const</span> &amp;Dist,std::string <span class="keyword">const</span> &amp;Section,</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;                              std::map&lt;std::string, std::string&gt; <span class="keyword">const</span> &amp;Options) <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;      <a class="code" href="classpkgSourceList_1_1Type.xhtml">Type</a>(<span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> Name, <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> Label);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;      <span class="keyword">virtual</span> ~<a class="code" href="classpkgSourceList_1_1Type.xhtml">Type</a>();</div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;   };</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160; </div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;   <span class="keyword">typedef</span> std::vector&lt;metaIndex *&gt;::const_iterator const_iterator;</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160; </div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160; </div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;   std::vector&lt;metaIndex *&gt; SrcList;</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;   <span class="keyword">private</span>:</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;   APT_HIDDEN <span class="keywordtype">bool</span> ParseFileDeb822(std::string <span class="keyword">const</span> &amp;File);</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;   APT_HIDDEN <span class="keywordtype">bool</span> ParseFileOldStyle(std::string <span class="keyword">const</span> &amp;File);</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160; </div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160; </div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;   <span class="keywordtype">bool</span> ReadMainList();</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;   <span class="keywordtype">bool</span> Read(std::string <span class="keyword">const</span> &amp;File);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160; </div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;   <span class="comment">// CNC:2003-03-03</span></div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;   <span class="keywordtype">void</span> Reset();</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160;   <span class="keywordtype">bool</span> ReadAppend(std::string <span class="keyword">const</span> &amp;File);</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;   <span class="keywordtype">bool</span> ReadSourceDir(std::string <span class="keyword">const</span> &amp;Dir);</div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;   </div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;   <span class="comment">// List accessors</span></div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;   <span class="keyword">inline</span> const_iterator begin()<span class="keyword"> const </span>{<span class="keywordflow">return</span> SrcList.begin();};</div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;   <span class="keyword">inline</span> const_iterator end()<span class="keyword"> const </span>{<span class="keywordflow">return</span> SrcList.end();};</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> size()<span class="keyword"> const </span>{<span class="keywordflow">return</span> SrcList.size();};</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;   <span class="keyword">inline</span> <span class="keywordtype">bool</span> empty()<span class="keyword"> const </span>{<span class="keywordflow">return</span> SrcList.empty();};</div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160; </div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;   <span class="keywordtype">bool</span> FindIndex(pkgCache::PkgFileIterator File,</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160;                  <a class="code" href="classpkgIndexFile.xhtml">pkgIndexFile</a> *&amp;Found) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;   <span class="keywordtype">bool</span> GetIndexes(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> *Owner, <span class="keywordtype">bool</span> GetAll=<span class="keyword">false</span>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;   </div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;   <span class="comment">// query last-modified time</span></div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;   time_t GetLastModifiedTime();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;   <span class="keywordtype">void</span> AddVolatileFile(<a class="code" href="classpkgIndexFile.xhtml">pkgIndexFile</a> * <span class="keyword">const</span> File);</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;   <span class="keywordtype">bool</span> AddVolatileFile(std::string <span class="keyword">const</span> &amp;File);</div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;   <span class="keywordtype">bool</span> AddVolatileFile(std::string <span class="keyword">const</span> &amp;File, std::vector&lt;std::string&gt; * <span class="keyword">const</span> VolatileCmdL);</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160;   <span class="keywordtype">void</span> AddVolatileFiles(<a class="code" href="classCommandLine.xhtml">CommandLine</a> &amp;CmdL, std::vector&lt;std::string&gt; * <span class="keyword">const</span> VolatileCmdL);</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160;   std::vector&lt;pkgIndexFile*&gt; GetVolatileFiles() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160; </div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;   <a class="code" href="classpkgSourceList.xhtml">pkgSourceList</a>();</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160;   <span class="keyword">virtual</span> ~<a class="code" href="classpkgSourceList.xhtml">pkgSourceList</a>();</div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;};</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="aclassCommandLine_xhtml"><div class="ttname"><a href="classCommandLine.xhtml">CommandLine</a></div><div class="ttdef"><b>Definition:</b> cmndline.h:52</div></div>
<div class="ttc" id="aclassFileFd_xhtml"><div class="ttname"><a href="classFileFd.xhtml">FileFd</a></div><div class="ttdef"><b>Definition:</b> fileutl.h:39</div></div>
<div class="ttc" id="aclassURI_xhtml"><div class="ttname"><a href="classURI.xhtml">URI</a></div><div class="ttdef"><b>Definition:</b> strutl.h:193</div></div>
<div class="ttc" id="aclassmetaIndex_xhtml"><div class="ttname"><a href="classmetaIndex.xhtml">metaIndex</a></div><div class="ttdef"><b>Definition:</b> metaindex.h:21</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml"><div class="ttname"><a href="classpkgAcquire.xhtml">pkgAcquire</a></div><div class="ttdoc">Represents the process by which a pkgAcquire object should retrieve a file or a collection of files.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:59</div></div>
<div class="ttc" id="aclasspkgIndexFile_xhtml"><div class="ttname"><a href="classpkgIndexFile.xhtml">pkgIndexFile</a></div><div class="ttdef"><b>Definition:</b> indexfile.h:102</div></div>
<div class="ttc" id="aclasspkgSourceList_1_1Type_xhtml"><div class="ttname"><a href="classpkgSourceList_1_1Type.xhtml">pkgSourceList::Type</a></div><div class="ttdef"><b>Definition:</b> sourcelist.h:50</div></div>
<div class="ttc" id="aclasspkgSourceList_xhtml"><div class="ttname"><a href="classpkgSourceList.xhtml">pkgSourceList</a></div><div class="ttdef"><b>Definition:</b> sourcelist.h:43</div></div>
<div class="ttc" id="aclasspkgTagSection_xhtml"><div class="ttname"><a href="classpkgTagSection.xhtml">pkgTagSection</a></div><div class="ttdef"><b>Definition:</b> tagfile.h:45</div></div>
<div class="ttc" id="apkgcache_8h_xhtml"><div class="ttname"><a href="pkgcache_8h.xhtml">pkgcache.h</a></div><div class="ttdoc">pkgCache - Structure definitions for the cache file</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
