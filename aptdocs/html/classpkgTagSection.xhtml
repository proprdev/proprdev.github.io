<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: pkgTagSection Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="classpkgTagSection-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">pkgTagSection Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a8d535d0591c1234b709f5c808fb71597"><td class="memItemLeft" align="right" valign="top"><a id="a8d535d0591c1234b709f5c808fb71597"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator==</b> (const <a class="el" href="classpkgTagSection.xhtml">pkgTagSection</a> &amp;rhs)</td></tr>
<tr class="separator:a8d535d0591c1234b709f5c808fb71597"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9b9dcf91b4b96baf25ddd2618a72fc95"><td class="memItemLeft" align="right" valign="top"><a id="a9b9dcf91b4b96baf25ddd2618a72fc95"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>operator!=</b> (const <a class="el" href="classpkgTagSection.xhtml">pkgTagSection</a> &amp;rhs)</td></tr>
<tr class="separator:a9b9dcf91b4b96baf25ddd2618a72fc95"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a929e04550f11aec12fde1d619abf71"><td class="memItemLeft" align="right" valign="top"><a id="a2a929e04550f11aec12fde1d619abf71"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>FindS</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> sv) const</td></tr>
<tr class="separator:a2a929e04550f11aec12fde1d619abf71"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a448d1b9327a08688d243176d8df61d51"><td class="memItemLeft" align="right" valign="top"><a id="a448d1b9327a08688d243176d8df61d51"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>FindRawS</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> sv) const</td></tr>
<tr class="separator:a448d1b9327a08688d243176d8df61d51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa06f795bfa1b17c5242866acee45c536"><td class="memItemLeft" align="right" valign="top"><a id="aa06f795bfa1b17c5242866acee45c536"></a>
APT_HIDDEN bool&#160;</td><td class="memItemRight" valign="bottom"><b>Find</b> (Key key, const char *&amp;Start, const char *&amp;End) const</td></tr>
<tr class="separator:aa06f795bfa1b17c5242866acee45c536"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8b537698c38869b6c2553a063eff3270"><td class="memItemLeft" align="right" valign="top"><a id="a8b537698c38869b6c2553a063eff3270"></a>
APT_HIDDEN bool&#160;</td><td class="memItemRight" valign="bottom"><b>Find</b> (Key key, unsigned int &amp;Pos) const</td></tr>
<tr class="separator:a8b537698c38869b6c2553a063eff3270"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa423d9e1076fbdfd5d8205229e74b47b"><td class="memItemLeft" align="right" valign="top"><a id="aa423d9e1076fbdfd5d8205229e74b47b"></a>
APT_HIDDEN signed int&#160;</td><td class="memItemRight" valign="bottom"><b>FindI</b> (Key key, signed long Default=0) const</td></tr>
<tr class="separator:aa423d9e1076fbdfd5d8205229e74b47b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a166ee27a137d3527245b2ff45ee0febb"><td class="memItemLeft" align="right" valign="top"><a id="a166ee27a137d3527245b2ff45ee0febb"></a>
APT_HIDDEN bool&#160;</td><td class="memItemRight" valign="bottom"><b>FindB</b> (Key key, bool Default=false) const</td></tr>
<tr class="separator:a166ee27a137d3527245b2ff45ee0febb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aeb5124b0acafd2766a4c67473232b0a7"><td class="memItemLeft" align="right" valign="top"><a id="aeb5124b0acafd2766a4c67473232b0a7"></a>
APT_HIDDEN unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><b>FindULL</b> (Key key, unsigned long long const &amp;Default=0) const</td></tr>
<tr class="separator:aeb5124b0acafd2766a4c67473232b0a7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab8a64ef47dbbc76d39931d7b5362e300"><td class="memItemLeft" align="right" valign="top"><a id="ab8a64ef47dbbc76d39931d7b5362e300"></a>
APT_HIDDEN bool&#160;</td><td class="memItemRight" valign="bottom"><b>FindFlag</b> (Key key, uint8_t &amp;Flags, uint8_t const Flag) const</td></tr>
<tr class="separator:ab8a64ef47dbbc76d39931d7b5362e300"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26c998b10649d7c6b6a8b8f26081d3c7"><td class="memItemLeft" align="right" valign="top"><a id="a26c998b10649d7c6b6a8b8f26081d3c7"></a>
APT_HIDDEN bool&#160;</td><td class="memItemRight" valign="bottom"><b>FindFlag</b> (Key key, unsigned long &amp;Flags, unsigned long Flag) const</td></tr>
<tr class="separator:a26c998b10649d7c6b6a8b8f26081d3c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a33b396e4ef9c6c12d41f4290c77d3254"><td class="memItemLeft" align="right" valign="top"><a id="a33b396e4ef9c6c12d41f4290c77d3254"></a>
APT_HIDDEN bool&#160;</td><td class="memItemRight" valign="bottom"><b>Exists</b> (Key key) const</td></tr>
<tr class="separator:a33b396e4ef9c6c12d41f4290c77d3254"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5aeeeb30a3a193127f0c680b6ca06f6"><td class="memItemLeft" align="right" valign="top"><a id="ab5aeeeb30a3a193127f0c680b6ca06f6"></a>
APT_HIDDEN <a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Find</b> (Key key) const</td></tr>
<tr class="separator:ab5aeeeb30a3a193127f0c680b6ca06f6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1d72d0081adc7bb24777ce9f1d390dc5"><td class="memItemLeft" align="right" valign="top"><a id="a1d72d0081adc7bb24777ce9f1d390dc5"></a>
APT_HIDDEN <a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>FindRaw</b> (Key key) const</td></tr>
<tr class="separator:a1d72d0081adc7bb24777ce9f1d390dc5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac931610ff1914193df37840020545f04"><td class="memItemLeft" align="right" valign="top"><a id="ac931610ff1914193df37840020545f04"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Find</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a>, const char *&amp;Start, const char *&amp;End) const</td></tr>
<tr class="separator:ac931610ff1914193df37840020545f04"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afee19e6f4a084318389e205394b51731"><td class="memItemLeft" align="right" valign="top"><a id="afee19e6f4a084318389e205394b51731"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Find</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a>, unsigned int &amp;Pos) const</td></tr>
<tr class="separator:afee19e6f4a084318389e205394b51731"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3f09f7f90408c057b2b11d80f795dca8"><td class="memItemLeft" align="right" valign="top"><a id="a3f09f7f90408c057b2b11d80f795dca8"></a>
<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Find</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a>) const</td></tr>
<tr class="separator:a3f09f7f90408c057b2b11d80f795dca8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0199d82faaa1a4686c23d4d4752e4f24"><td class="memItemLeft" align="right" valign="top"><a id="a0199d82faaa1a4686c23d4d4752e4f24"></a>
<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a>&#160;</td><td class="memItemRight" valign="bottom"><b>FindRaw</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a>) const</td></tr>
<tr class="separator:a0199d82faaa1a4686c23d4d4752e4f24"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca625cd0d73a3e530a9644744adfbba2"><td class="memItemLeft" align="right" valign="top"><a id="aca625cd0d73a3e530a9644744adfbba2"></a>
signed int&#160;</td><td class="memItemRight" valign="bottom"><b>FindI</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a>, signed long Default=0) const</td></tr>
<tr class="separator:aca625cd0d73a3e530a9644744adfbba2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2a67e2ca9f97b12dd5a0cb77edd7444a"><td class="memItemLeft" align="right" valign="top"><a id="a2a67e2ca9f97b12dd5a0cb77edd7444a"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>FindB</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a>, bool Default=false) const</td></tr>
<tr class="separator:a2a67e2ca9f97b12dd5a0cb77edd7444a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a357f0a7447bcd07599a9fb8451d6982a"><td class="memItemLeft" align="right" valign="top"><a id="a357f0a7447bcd07599a9fb8451d6982a"></a>
unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><b>FindULL</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a>, unsigned long long const &amp;Default=0) const</td></tr>
<tr class="separator:a357f0a7447bcd07599a9fb8451d6982a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa10d2ba9b443c1752764c72c6a8db4ac"><td class="memItemLeft" align="right" valign="top"><a id="aa10d2ba9b443c1752764c72c6a8db4ac"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>FindFlag</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a>, uint8_t &amp;Flags, uint8_t const Flag) const</td></tr>
<tr class="separator:aa10d2ba9b443c1752764c72c6a8db4ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac30ad03f23d28e733b8817b81ceb0c02"><td class="memItemLeft" align="right" valign="top"><a id="ac30ad03f23d28e733b8817b81ceb0c02"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>FindFlag</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a>, unsigned long &amp;Flags, unsigned long Flag) const</td></tr>
<tr class="separator:ac30ad03f23d28e733b8817b81ceb0c02"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aafaeae5975c44398d62a2e5d41fe2e9e"><td class="memItemLeft" align="right" valign="top"><a id="aafaeae5975c44398d62a2e5d41fe2e9e"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Exists</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a>) const</td></tr>
<tr class="separator:aafaeae5975c44398d62a2e5d41fe2e9e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a02471cedf567200afc2c057718fc752a"><td class="memItemLeft" align="right" valign="top">APT_MUSTCHECK bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgTagSection.xhtml#a02471cedf567200afc2c057718fc752a">Scan</a> (const char *Start, unsigned long MaxLength, bool const Restart=true)</td></tr>
<tr class="memdesc:a02471cedf567200afc2c057718fc752a"><td class="mdescLeft">&#160;</td><td class="mdescRight">searches the boundaries of the current section  <a href="classpkgTagSection.xhtml#a02471cedf567200afc2c057718fc752a">More...</a><br /></td></tr>
<tr class="separator:a02471cedf567200afc2c057718fc752a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af22b5286aa0191a7087a205f6d04b032"><td class="memItemLeft" align="right" valign="top"><a id="af22b5286aa0191a7087a205f6d04b032"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>size</b> () const</td></tr>
<tr class="separator:af22b5286aa0191a7087a205f6d04b032"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adac3ee4a7c5329167ec378709314a4e3"><td class="memItemLeft" align="right" valign="top"><a id="adac3ee4a7c5329167ec378709314a4e3"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Trim</b> ()</td></tr>
<tr class="separator:adac3ee4a7c5329167ec378709314a4e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98566412c061bc3b5b2a8f3470ac6df6"><td class="memItemLeft" align="right" valign="top"><a id="a98566412c061bc3b5b2a8f3470ac6df6"></a>
virtual void&#160;</td><td class="memItemRight" valign="bottom"><b>TrimRecord</b> (bool BeforeRecord, const char *&amp;End)</td></tr>
<tr class="separator:a98566412c061bc3b5b2a8f3470ac6df6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5e103cd6cfc37abd35b285a8c48a812e"><td class="memItemLeft" align="right" valign="top">unsigned int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgTagSection.xhtml#a5e103cd6cfc37abd35b285a8c48a812e">Count</a> () const</td></tr>
<tr class="memdesc:a5e103cd6cfc37abd35b285a8c48a812e"><td class="mdescLeft">&#160;</td><td class="mdescRight">amount of Tags in the current section  <a href="classpkgTagSection.xhtml#a5e103cd6cfc37abd35b285a8c48a812e">More...</a><br /></td></tr>
<tr class="separator:a5e103cd6cfc37abd35b285a8c48a812e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8bffea32010d8e816b6a60ee88fa9879"><td class="memItemLeft" align="right" valign="top"><a id="a8bffea32010d8e816b6a60ee88fa9879"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Get</b> (const char *&amp;Start, const char *&amp;Stop, unsigned int I) const</td></tr>
<tr class="separator:a8bffea32010d8e816b6a60ee88fa9879"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0f4ba47e1f330dc9c242db9387cd90d0"><td class="memItemLeft" align="right" valign="top"><a id="a0f4ba47e1f330dc9c242db9387cd90d0"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>GetSection</b> (const char *&amp;Start, const char *&amp;Stop) const</td></tr>
<tr class="separator:a0f4ba47e1f330dc9c242db9387cd90d0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d83a246100a2f662e45df5cda6e686e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgTagSection.xhtml#a3d83a246100a2f662e45df5cda6e686e">Write</a> (<a class="el" href="classFileFd.xhtml">FileFd</a> &amp;File, char const *const *const Order=NULL, std::vector&lt; <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a> &gt; const &amp;Rewrite=std::vector&lt; <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a> &gt;()) const</td></tr>
<tr class="separator:a3d83a246100a2f662e45df5cda6e686e"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a04b6d4cb4b4a9726a1acaa70ae528df5"><td class="memItemLeft" align="right" valign="top"><a id="a04b6d4cb4b4a9726a1acaa70ae528df5"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>FindFlag</b> (uint8_t &amp;Flags, uint8_t const Flag, const char *const Start, const char *const Stop)</td></tr>
<tr class="separator:a04b6d4cb4b4a9726a1acaa70ae528df5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8065c5eaf021ecbdce1b1e8fea97d412"><td class="memItemLeft" align="right" valign="top"><a id="a8065c5eaf021ecbdce1b1e8fea97d412"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>FindFlag</b> (unsigned long &amp;Flags, unsigned long Flag, const char *Start, const char *Stop)</td></tr>
<tr class="separator:a8065c5eaf021ecbdce1b1e8fea97d412"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a3ea16eea806200f4a86b79bb81fc66cc"><td class="memItemLeft" align="right" valign="top"><a id="a3ea16eea806200f4a86b79bb81fc66cc"></a>
const char *&#160;</td><td class="memItemRight" valign="bottom"><b>Stop</b></td></tr>
<tr class="separator:a3ea16eea806200f4a86b79bb81fc66cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<div class="textblock"><p>single deb822 stanza and provides various Find methods to extract the included values. It can also be used to modify and write a valid deb822 stanza optionally (re)ordering the fields inside the stanza.</p>
<p>Beware: This class does <b>NOT</b> support (#-)comments in in- or output! If the input contains comments they have to be stripped first like <a class="el" href="classpkgTagFile.xhtml">pkgTagFile</a> does with SUPPORT_COMMENTS flag set. </p>
</div><h2 class="groupheader">Member Function Documentation</h2>
<a id="a5e103cd6cfc37abd35b285a8c48a812e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5e103cd6cfc37abd35b285a8c48a812e">&#9670;&nbsp;</a></span>Count()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">APT_PURE unsigned int Count </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>amount of Tags in the current section </p>
<p>Note: if a <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a> is mentioned repeatedly it will be counted multiple times, but only the last occurrence is available via Find methods. </p>

<p class="reference">Referenced by <a class="el" href="edsp_8h.xhtml#a09e6a4e219c1ae943e206589a7b73184">EDSP::ReadResponse()</a>.</p>

</div>
</div>
<a id="a02471cedf567200afc2c057718fc752a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a02471cedf567200afc2c057718fc752a">&#9670;&nbsp;</a></span>Scan()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Scan </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Start</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>MaxLength</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool const&#160;</td>
          <td class="paramname"><em>Restart</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>searches the boundaries of the current section </p>
<p>While parameter Start marks the beginning of the section, this method will search for the first double newline in the data stream which marks the end of the section. It also does a first pass over the content of the section parsing it as encountered for processing later on by Find</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Start</td><td>is the beginning of the section </td></tr>
    <tr><td class="paramname">MaxLength</td><td>is the size of valid data in the stream pointed to by Start </td></tr>
    <tr><td class="paramname">Restart</td><td>if enabled internal state will be cleared, otherwise it is assumed that now more data is available in the stream and the parsing will start were it encountered insufficient data the last time.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>true</b> if section end was found, <b>false</b> otherwise. Beware that internal state will be inconsistent if <b>false</b> is returned! </dd></dl>

</div>
</div>
<a id="a3d83a246100a2f662e45df5cda6e686e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d83a246100a2f662e45df5cda6e686e">&#9670;&nbsp;</a></span>Write()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Write </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classFileFd.xhtml">FileFd</a> &amp;&#160;</td>
          <td class="paramname"><em>File</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">char const *const *const&#160;</td>
          <td class="paramname"><em>Order</em> = <code>NULL</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::vector&lt; <a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a> &gt; const &amp;&#160;</td>
          <td class="paramname"><em>Rewrite</em> = <code>std::vector&lt;<a class="el" href="structpkgTagSection_1_1Tag.xhtml">Tag</a>&gt;()</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td> const</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Write this section (with optional rewrites) to a file</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">File</td><td>to write the section to </td></tr>
    <tr><td class="paramname">Order</td><td>in which tags should appear in the file </td></tr>
    <tr><td class="paramname">Rewrite</td><td>is a set of tags to be renamed, rewritten and/or removed </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>true</b> if successful, otherwise <b>false</b> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>apt-pkg/<a class="el" href="tagfile_8h_source.xhtml">tagfile.h</a></li>
<li>apt-pkg/tagfile.cc</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
