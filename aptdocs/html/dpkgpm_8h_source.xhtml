<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: apt-pkg/deb/dpkgpm.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_18f22d4be2ca84c350e120b6506056ca.xhtml">apt-pkg</a></li><li class="navelem"><a class="el" href="dir_b856b2b7784a7c6bda5cb12e6897d9ab.xhtml">deb</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">dpkgpm.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// -*- mode: cpp; mode: fold -*-</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Description                                                          /*{{{*/</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/* ######################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">   DPKG Package Manager - Provide an interface to dpkg</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment">   </span></div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">   ##################################################################### */</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#ifndef PKGLIB_DPKGPM_H</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="preprocessor">#define PKGLIB_DPKGPM_H</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/macros.h&gt;</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/packagemanager.h&gt;</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="pkgcache_8h.xhtml">apt-pkg/pkgcache.h</a>&gt;</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160; </div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160; </div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a>;</div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="keyword">namespace </span>APT { <span class="keyword">namespace </span>Progress { <span class="keyword">class </span>PackageManager; } }</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160; </div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160; </div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgDPkgPMPrivate.xhtml">pkgDPkgPMPrivate</a>;</div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160; </div>
<div class="line"><a name="l00029"></a><span class="lineno"><a class="line" href="classpkgDPkgPM.xhtml">   29</a></span>&#160;<span class="keyword">class </span>APT_PUBLIC <a class="code" href="classpkgDPkgPM.xhtml">pkgDPkgPM</a> : <span class="keyword">public</span> <a class="code" href="classpkgPackageManager.xhtml">pkgPackageManager</a></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;{</div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;   <span class="keyword">private</span>:</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;   <a class="code" href="classpkgDPkgPMPrivate.xhtml">pkgDPkgPMPrivate</a> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> handleDisappearAction(std::string <span class="keyword">const</span> &amp;pkgname);</div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> handleCrossUpgradeAction(std::string <span class="keyword">const</span> &amp;pkgname);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160; </div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;   <span class="keywordtype">int</span> pkgFailures;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160; </div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;   <span class="comment">// progress reporting</span></div>
<div class="line"><a name="l00054"></a><span class="lineno"><a class="line" href="structpkgDPkgPM_1_1DpkgState.xhtml">   54</a></span>&#160;   <span class="keyword">struct </span><a class="code" href="structpkgDPkgPM_1_1DpkgState.xhtml">DpkgState</a> </div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;   {</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">char</span> *state;     <span class="comment">// the dpkg state (e.g. &quot;unpack&quot;)</span></div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;      <span class="keyword">const</span> <span class="keywordtype">char</span> *str;       <span class="comment">// the human readable translation of the state</span></div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;   };</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;   <span class="comment">// the dpkg states that the pkg will run through, the string is </span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;   <span class="comment">// the package, the vector contains the dpkg states that the package</span></div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;   <span class="comment">// will go through</span></div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;   std::map&lt;std::string,std::vector&lt;struct DpkgState&gt; &gt; PackageOps;</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;   <span class="comment">// the dpkg states that are already done; the string is the package</span></div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;   <span class="comment">// the int is the state that is already done (e.g. a package that is</span></div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;   <span class="comment">// going to be install is already in state &quot;half-installed&quot;)</span></div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;   std::map&lt;std::string,unsigned int&gt; PackageOpsDone;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;   <span class="comment">// progress reporting</span></div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> PackagesDone;</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> PackagesTotal;</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160; </div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00074"></a><span class="lineno"><a class="line" href="structpkgDPkgPM_1_1Item.xhtml">   74</a></span>&#160;   <span class="keyword">struct </span><a class="code" href="structpkgDPkgPM_1_1Item.xhtml">Item</a></div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;   {</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160;      <span class="keyword">enum</span> Ops {Install, Configure, Remove, Purge, ConfigurePending, TriggersPending,</div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;         RemovePending, PurgePending } Op;</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160;      std::string File;</div>
<div class="line"><a name="l00079"></a><span class="lineno">   79</span>&#160;      PkgIterator Pkg;</div>
<div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;      <a class="code" href="structpkgDPkgPM_1_1Item.xhtml">Item</a>(Ops Op,PkgIterator Pkg,std::string File = <span class="stringliteral">&quot;&quot;</span>) : Op(Op),</div>
<div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;            File(File), Pkg(Pkg) {};</div>
<div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;      <a class="code" href="structpkgDPkgPM_1_1Item.xhtml">Item</a>() {};</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;   };</div>
<div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00085"></a><span class="lineno">   85</span>&#160;   std::vector&lt;Item&gt; List;</div>
<div class="line"><a name="l00086"></a><span class="lineno">   86</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno">   87</span>&#160;   <span class="comment">// Helpers</span></div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;   <span class="keywordtype">bool</span> RunScriptsWithPkgs(<span class="keyword">const</span> <span class="keywordtype">char</span> *Cnf);</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160;   <span class="keywordtype">bool</span> SendPkgsInfo(FILE * <span class="keyword">const</span> F, <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <span class="keyword">const</span> &amp;<a class="code" href="structpkgCache_1_1Version.xhtml">Version</a>);</div>
<div class="line"><a name="l00090"></a><span class="lineno">   90</span>&#160;   <span class="keywordtype">void</span> WriteHistoryTag(std::string <span class="keyword">const</span> &amp;tag, std::string value);</div>
<div class="line"><a name="l00091"></a><span class="lineno">   91</span>&#160;   std::string ExpandShortPackageName(<a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;Cache,</div>
<div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;                                      <span class="keyword">const</span> std::string &amp;short_pkgname);</div>
<div class="line"><a name="l00093"></a><span class="lineno">   93</span>&#160; </div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160;   <span class="comment">// Terminal progress </span></div>
<div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;   <span class="keywordtype">void</span> SendTerminalProgress(<span class="keywordtype">float</span> percentage);</div>
<div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160; </div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;   <span class="comment">// apport integration</span></div>
<div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;   <span class="keywordtype">void</span> WriteApportReport(<span class="keyword">const</span> <span class="keywordtype">char</span> *pkgpath, <span class="keyword">const</span> <span class="keywordtype">char</span> *errormsg);</div>
<div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160; </div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;   <span class="comment">// dpkg log</span></div>
<div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;   <span class="keywordtype">bool</span> OpenLog();</div>
<div class="line"><a name="l00102"></a><span class="lineno">  102</span>&#160;   <span class="keywordtype">bool</span> CloseLog();</div>
<div class="line"><a name="l00103"></a><span class="lineno">  103</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno">  104</span>&#160;   <span class="comment">// helper</span></div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160;   <span class="keywordtype">void</span> BuildPackagesProgressMap();</div>
<div class="line"><a name="l00106"></a><span class="lineno">  106</span>&#160;   <span class="keywordtype">void</span> StartPtyMagic();</div>
<div class="line"><a name="l00107"></a><span class="lineno">  107</span>&#160;   <span class="keywordtype">void</span> SetupSlavePtyMagic();</div>
<div class="line"><a name="l00108"></a><span class="lineno">  108</span>&#160;   <span class="keywordtype">void</span> StopPtyMagic();</div>
<div class="line"><a name="l00109"></a><span class="lineno">  109</span>&#160;   </div>
<div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;   <span class="comment">// input processing</span></div>
<div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;   <span class="keywordtype">void</span> DoStdin(<span class="keywordtype">int</span> master);</div>
<div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;   <span class="keywordtype">void</span> DoTerminalPty(<span class="keywordtype">int</span> master);</div>
<div class="line"><a name="l00113"></a><span class="lineno">  113</span>&#160;   <span class="keywordtype">void</span> DoDpkgStatusFd(<span class="keywordtype">int</span> statusfd);</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;   <span class="keywordtype">void</span> ProcessDpkgStatusLine(<span class="keywordtype">char</span> *line);</div>
<div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160; </div>
<div class="line"><a name="l00116"></a><span class="lineno">  116</span>&#160;   <span class="comment">// The Actual installation implementation</span></div>
<div class="line"><a name="l00117"></a><span class="lineno">  117</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Install(PkgIterator Pkg,std::string File) APT_OVERRIDE;</div>
<div class="line"><a name="l00118"></a><span class="lineno">  118</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Configure(PkgIterator Pkg) APT_OVERRIDE;</div>
<div class="line"><a name="l00119"></a><span class="lineno">  119</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Remove(PkgIterator Pkg,<span class="keywordtype">bool</span> Purge = <span class="keyword">false</span>) APT_OVERRIDE;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;   virtual <span class="keywordtype">bool</span> Go(APT::Progress::PackageManager *progress) APT_OVERRIDE;</div>
<div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160; </div>
<div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;   virtual <span class="keywordtype">void</span> Reset() APT_OVERRIDE;</div>
<div class="line"><a name="l00124"></a><span class="lineno">  124</span>&#160;   </div>
<div class="line"><a name="l00125"></a><span class="lineno">  125</span>&#160;   public:</div>
<div class="line"><a name="l00126"></a><span class="lineno">  126</span>&#160; </div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160;   explicit <a class="code" href="classpkgDPkgPM.xhtml">pkgDPkgPM</a>(<a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> *Cache);</div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;   virtual ~<a class="code" href="classpkgDPkgPM.xhtml">pkgDPkgPM</a>();</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;   APT_HIDDEN static <span class="keywordtype">bool</span> ExpandPendingCalls(std::vector&lt;<a class="code" href="structpkgDPkgPM_1_1Item.xhtml">Item</a>&gt; &amp;List, <a class="code" href="classpkgDepCache.xhtml">pkgDepCache</a> &amp;Cache);</div>
<div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;};</div>
<div class="line"><a name="l00132"></a><span class="lineno">  132</span>&#160; </div>
<div class="line"><a name="l00133"></a><span class="lineno">  133</span>&#160;<span class="keywordtype">void</span> SigINT(<span class="keywordtype">int</span> sig);</div>
<div class="line"><a name="l00134"></a><span class="lineno">  134</span>&#160; </div>
<div class="line"><a name="l00135"></a><span class="lineno">  135</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="aclasspkgDPkgPMPrivate_xhtml"><div class="ttname"><a href="classpkgDPkgPMPrivate.xhtml">pkgDPkgPMPrivate</a></div><div class="ttdef"><b>Definition:</b> dpkgpm.cc:103</div></div>
<div class="ttc" id="aclasspkgDPkgPM_xhtml"><div class="ttname"><a href="classpkgDPkgPM.xhtml">pkgDPkgPM</a></div><div class="ttdef"><b>Definition:</b> dpkgpm.h:30</div></div>
<div class="ttc" id="aclasspkgDepCache_xhtml"><div class="ttname"><a href="classpkgDepCache.xhtml">pkgDepCache</a></div><div class="ttdef"><b>Definition:</b> depcache.h:62</div></div>
<div class="ttc" id="aclasspkgPackageManager_xhtml"><div class="ttname"><a href="classpkgPackageManager.xhtml">pkgPackageManager</a></div><div class="ttdef"><b>Definition:</b> packagemanager.h:48</div></div>
<div class="ttc" id="apkgcache_8h_xhtml"><div class="ttname"><a href="pkgcache_8h.xhtml">pkgcache.h</a></div><div class="ttdoc">pkgCache - Structure definitions for the cache file</div></div>
<div class="ttc" id="astructpkgCache_1_1Version_xhtml"><div class="ttname"><a href="structpkgCache_1_1Version.xhtml">pkgCache::Version</a></div><div class="ttdoc">information for a single version of a package</div><div class="ttdef"><b>Definition:</b> pkgcache.h:625</div></div>
<div class="ttc" id="astructpkgDPkgPM_1_1DpkgState_xhtml"><div class="ttname"><a href="structpkgDPkgPM_1_1DpkgState.xhtml">pkgDPkgPM::DpkgState</a></div><div class="ttdef"><b>Definition:</b> dpkgpm.h:55</div></div>
<div class="ttc" id="astructpkgDPkgPM_1_1Item_xhtml"><div class="ttname"><a href="structpkgDPkgPM_1_1Item.xhtml">pkgDPkgPM::Item</a></div><div class="ttdef"><b>Definition:</b> dpkgpm.h:75</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
