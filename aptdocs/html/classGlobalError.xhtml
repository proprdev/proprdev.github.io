<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: GlobalError Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classGlobalError-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">GlobalError Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a2ea0bb09adcce7f655e8f8ee8d30561b"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> { <br />
&#160;&#160;<a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba651d8a47a6976d6fe05c0e03fb4cd2d0">FATAL</a> = 40
, <a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba2fd6f336d08340583bd620a7f5694c90">ERROR</a> = 30
, <a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">WARNING</a> = 20
, <a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561baed8762ff982b982ce3d67f81ab34f1d4">NOTICE</a> = 10
, <br />
&#160;&#160;<a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba0593585da9181e972974c1274d8f2b4f">DEBUG</a> = 0
<br />
 }</td></tr>
<tr class="memdesc:a2ea0bb09adcce7f655e8f8ee8d30561b"><td class="mdescLeft">&#160;</td><td class="mdescRight">a message can have one of following severity  <a href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">More...</a><br /></td></tr>
<tr class="separator:a2ea0bb09adcce7f655e8f8ee8d30561b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:aad9dbd341423bd851460b3758639237e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#aad9dbd341423bd851460b3758639237e">FatalE</a> (const char *Function, const char *Description,...) APT_PRINTF(3) APT_COLD</td></tr>
<tr class="memdesc:aad9dbd341423bd851460b3758639237e"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a fatal error message with errno to the list  <a href="classGlobalError.xhtml#aad9dbd341423bd851460b3758639237e">More...</a><br /></td></tr>
<tr class="separator:aad9dbd341423bd851460b3758639237e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5fae022d83601f40fde149ebafd1cce"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#af5fae022d83601f40fde149ebafd1cce">Errno</a> (const char *Function, const char *Description,...) APT_PRINTF(3) APT_COLD</td></tr>
<tr class="memdesc:af5fae022d83601f40fde149ebafd1cce"><td class="mdescLeft">&#160;</td><td class="mdescRight">add an Error message with errno to the list  <a href="classGlobalError.xhtml#af5fae022d83601f40fde149ebafd1cce">More...</a><br /></td></tr>
<tr class="separator:af5fae022d83601f40fde149ebafd1cce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aad6b628986a4a856e289477bde506744"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#aad6b628986a4a856e289477bde506744">WarningE</a> (const char *Function, const char *Description,...) APT_PRINTF(3) APT_COLD</td></tr>
<tr class="memdesc:aad6b628986a4a856e289477bde506744"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a warning message with errno to the list  <a href="classGlobalError.xhtml#aad6b628986a4a856e289477bde506744">More...</a><br /></td></tr>
<tr class="separator:aad6b628986a4a856e289477bde506744"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae354ceb52b63c8e30d17caaca6159dd7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#ae354ceb52b63c8e30d17caaca6159dd7">NoticeE</a> (const char *Function, const char *Description,...) APT_PRINTF(3) APT_COLD</td></tr>
<tr class="memdesc:ae354ceb52b63c8e30d17caaca6159dd7"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a notice message with errno to the list  <a href="classGlobalError.xhtml#ae354ceb52b63c8e30d17caaca6159dd7">More...</a><br /></td></tr>
<tr class="separator:ae354ceb52b63c8e30d17caaca6159dd7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a93b848d9522749268832bafa64f6a5c2"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a93b848d9522749268832bafa64f6a5c2">DebugE</a> (const char *Function, const char *Description,...) APT_PRINTF(3) APT_COLD</td></tr>
<tr class="memdesc:a93b848d9522749268832bafa64f6a5c2"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a debug message with errno to the list  <a href="classGlobalError.xhtml#a93b848d9522749268832bafa64f6a5c2">More...</a><br /></td></tr>
<tr class="separator:a93b848d9522749268832bafa64f6a5c2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a00e3b810d806f9d632844f1fdab275e3"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a00e3b810d806f9d632844f1fdab275e3">InsertErrno</a> (<a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;type, const char *Function, const char *Description,...) APT_PRINTF(4) APT_COLD</td></tr>
<tr class="memdesc:a00e3b810d806f9d632844f1fdab275e3"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds an errno message with the given type  <a href="classGlobalError.xhtml#a00e3b810d806f9d632844f1fdab275e3">More...</a><br /></td></tr>
<tr class="separator:a00e3b810d806f9d632844f1fdab275e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a570f477196cf31d3d3675d71e14ff3ad"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a570f477196cf31d3d3675d71e14ff3ad">InsertErrno</a> (<a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> type, const char *Function, const char *Description, va_list &amp;args, int const errsv, size_t &amp;msgSize) APT_COLD</td></tr>
<tr class="memdesc:a570f477196cf31d3d3675d71e14ff3ad"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds an errno message with the given type  <a href="classGlobalError.xhtml#a570f477196cf31d3d3675d71e14ff3ad">More...</a><br /></td></tr>
<tr class="separator:a570f477196cf31d3d3675d71e14ff3ad"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7cacbea0f1054d0aef0b5b4505a559e7"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a7cacbea0f1054d0aef0b5b4505a559e7">Fatal</a> (const char *Description,...) APT_PRINTF(2) APT_COLD</td></tr>
<tr class="memdesc:a7cacbea0f1054d0aef0b5b4505a559e7"><td class="mdescLeft">&#160;</td><td class="mdescRight">add an fatal error message to the list  <a href="classGlobalError.xhtml#a7cacbea0f1054d0aef0b5b4505a559e7">More...</a><br /></td></tr>
<tr class="separator:a7cacbea0f1054d0aef0b5b4505a559e7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a94e3c521c32a44fd786b9f22f153b85d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a94e3c521c32a44fd786b9f22f153b85d">Error</a> (const char *Description,...) APT_PRINTF(2) APT_COLD</td></tr>
<tr class="memdesc:a94e3c521c32a44fd786b9f22f153b85d"><td class="mdescLeft">&#160;</td><td class="mdescRight">add an Error message to the list  <a href="classGlobalError.xhtml#a94e3c521c32a44fd786b9f22f153b85d">More...</a><br /></td></tr>
<tr class="separator:a94e3c521c32a44fd786b9f22f153b85d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ada014c1d78ce219fc8657bd0d6b33c17"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#ada014c1d78ce219fc8657bd0d6b33c17">Warning</a> (const char *Description,...) APT_PRINTF(2) APT_COLD</td></tr>
<tr class="memdesc:ada014c1d78ce219fc8657bd0d6b33c17"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a warning message to the list  <a href="classGlobalError.xhtml#ada014c1d78ce219fc8657bd0d6b33c17">More...</a><br /></td></tr>
<tr class="separator:ada014c1d78ce219fc8657bd0d6b33c17"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c06d18a7c1fbf94f3e5622d5c40cd9a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a8c06d18a7c1fbf94f3e5622d5c40cd9a">Notice</a> (const char *Description,...) APT_PRINTF(2) APT_COLD</td></tr>
<tr class="memdesc:a8c06d18a7c1fbf94f3e5622d5c40cd9a"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a notice message to the list  <a href="classGlobalError.xhtml#a8c06d18a7c1fbf94f3e5622d5c40cd9a">More...</a><br /></td></tr>
<tr class="separator:a8c06d18a7c1fbf94f3e5622d5c40cd9a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae297fbea06bddac8ae8dac88e76f5cb0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#ae297fbea06bddac8ae8dac88e76f5cb0">Debug</a> (const char *Description,...) APT_PRINTF(2) APT_COLD</td></tr>
<tr class="memdesc:ae297fbea06bddac8ae8dac88e76f5cb0"><td class="mdescLeft">&#160;</td><td class="mdescRight">add a debug message to the list  <a href="classGlobalError.xhtml#ae297fbea06bddac8ae8dac88e76f5cb0">More...</a><br /></td></tr>
<tr class="separator:ae297fbea06bddac8ae8dac88e76f5cb0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a077d42684d901b09856da43ba4300090"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a077d42684d901b09856da43ba4300090">Insert</a> (<a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;type, const char *Description,...) APT_PRINTF(3) APT_COLD</td></tr>
<tr class="memdesc:a077d42684d901b09856da43ba4300090"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds an error message with the given type  <a href="classGlobalError.xhtml#a077d42684d901b09856da43ba4300090">More...</a><br /></td></tr>
<tr class="separator:a077d42684d901b09856da43ba4300090"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af1ea179e74cedcebfe14bd3d61fdc6de"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#af1ea179e74cedcebfe14bd3d61fdc6de">Insert</a> (<a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> type, const char *Description, va_list &amp;args, size_t &amp;msgSize) APT_COLD</td></tr>
<tr class="memdesc:af1ea179e74cedcebfe14bd3d61fdc6de"><td class="mdescLeft">&#160;</td><td class="mdescRight">adds an error message with the given type  <a href="classGlobalError.xhtml#af1ea179e74cedcebfe14bd3d61fdc6de">More...</a><br /></td></tr>
<tr class="separator:af1ea179e74cedcebfe14bd3d61fdc6de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a17591c060e662603e5d6c2e14c35500a"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a17591c060e662603e5d6c2e14c35500a">PendingError</a> () const APT_PURE</td></tr>
<tr class="memdesc:a17591c060e662603e5d6c2e14c35500a"><td class="mdescLeft">&#160;</td><td class="mdescRight">is an error in the list?  <a href="classGlobalError.xhtml#a17591c060e662603e5d6c2e14c35500a">More...</a><br /></td></tr>
<tr class="separator:a17591c060e662603e5d6c2e14c35500a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2506440cb23e7863b6bed4916dafbaec"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a2506440cb23e7863b6bed4916dafbaec">empty</a> (<a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;threshold=<a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">WARNING</a>) const APT_PURE</td></tr>
<tr class="memdesc:a2506440cb23e7863b6bed4916dafbaec"><td class="mdescLeft">&#160;</td><td class="mdescRight">is the list empty?  <a href="classGlobalError.xhtml#a2506440cb23e7863b6bed4916dafbaec">More...</a><br /></td></tr>
<tr class="separator:a2506440cb23e7863b6bed4916dafbaec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a74cc65f991d28b468016924af691f8c0"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a74cc65f991d28b468016924af691f8c0">PopMessage</a> (std::string &amp;Text)</td></tr>
<tr class="memdesc:a74cc65f991d28b468016924af691f8c0"><td class="mdescLeft">&#160;</td><td class="mdescRight">returns and removes the first (or last) message in the list  <a href="classGlobalError.xhtml#a74cc65f991d28b468016924af691f8c0">More...</a><br /></td></tr>
<tr class="separator:a74cc65f991d28b468016924af691f8c0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41190a6896a09de84c7b7aa32a9573ba"><td class="memItemLeft" align="right" valign="top"><a id="a41190a6896a09de84c7b7aa32a9573ba"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a41190a6896a09de84c7b7aa32a9573ba">Discard</a> ()</td></tr>
<tr class="memdesc:a41190a6896a09de84c7b7aa32a9573ba"><td class="mdescLeft">&#160;</td><td class="mdescRight">clears the list of messages <br /></td></tr>
<tr class="separator:a41190a6896a09de84c7b7aa32a9573ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48d82d44e64c773efe753735c61768a6"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a48d82d44e64c773efe753735c61768a6">DumpErrors</a> (std::ostream &amp;out, <a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;threshold=<a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">WARNING</a>, bool const &amp;mergeStack=true)</td></tr>
<tr class="memdesc:a48d82d44e64c773efe753735c61768a6"><td class="mdescLeft">&#160;</td><td class="mdescRight">outputs the list of messages to the given stream  <a href="classGlobalError.xhtml#a48d82d44e64c773efe753735c61768a6">More...</a><br /></td></tr>
<tr class="separator:a48d82d44e64c773efe753735c61768a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92db7530702b6110f3727ac3404543bd"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a92db7530702b6110f3727ac3404543bd">DumpErrors</a> (<a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;threshold)</td></tr>
<tr class="memdesc:a92db7530702b6110f3727ac3404543bd"><td class="mdescLeft">&#160;</td><td class="mdescRight">dumps the list of messages to std::cerr  <a href="classGlobalError.xhtml#a92db7530702b6110f3727ac3404543bd">More...</a><br /></td></tr>
<tr class="separator:a92db7530702b6110f3727ac3404543bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a81be42602b9ad2301c54674471818908"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a81be42602b9ad2301c54674471818908">DumpErrors</a> ()</td></tr>
<tr class="memdesc:a81be42602b9ad2301c54674471818908"><td class="mdescLeft">&#160;</td><td class="mdescRight">dumps the messages of type WARNING or higher to std::cerr  <a href="classGlobalError.xhtml#a81be42602b9ad2301c54674471818908">More...</a><br /></td></tr>
<tr class="separator:a81be42602b9ad2301c54674471818908"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a45bab2f436ea354b8e642d7f16fffb00"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a45bab2f436ea354b8e642d7f16fffb00">PushToStack</a> ()</td></tr>
<tr class="memdesc:a45bab2f436ea354b8e642d7f16fffb00"><td class="mdescLeft">&#160;</td><td class="mdescRight">put the current Messages into the stack  <a href="classGlobalError.xhtml#a45bab2f436ea354b8e642d7f16fffb00">More...</a><br /></td></tr>
<tr class="separator:a45bab2f436ea354b8e642d7f16fffb00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a545a1a225fd4c4cf0ba9b3778c7ba974"><td class="memItemLeft" align="right" valign="top"><a id="a545a1a225fd4c4cf0ba9b3778c7ba974"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a545a1a225fd4c4cf0ba9b3778c7ba974">RevertToStack</a> ()</td></tr>
<tr class="memdesc:a545a1a225fd4c4cf0ba9b3778c7ba974"><td class="mdescLeft">&#160;</td><td class="mdescRight">throw away all current messages <br /></td></tr>
<tr class="separator:a545a1a225fd4c4cf0ba9b3778c7ba974"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad673c5ed8a108766a94f4d50d663c57c"><td class="memItemLeft" align="right" valign="top"><a id="ad673c5ed8a108766a94f4d50d663c57c"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#ad673c5ed8a108766a94f4d50d663c57c">MergeWithStack</a> ()</td></tr>
<tr class="memdesc:ad673c5ed8a108766a94f4d50d663c57c"><td class="mdescLeft">&#160;</td><td class="mdescRight">merge current and stack together <br /></td></tr>
<tr class="separator:ad673c5ed8a108766a94f4d50d663c57c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4524748d3e229651211c74135a59ff0b"><td class="memItemLeft" align="right" valign="top"><a id="a4524748d3e229651211c74135a59ff0b"></a>
size_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classGlobalError.xhtml#a4524748d3e229651211c74135a59ff0b">StackCount</a> () const APT_PURE</td></tr>
<tr class="memdesc:a4524748d3e229651211c74135a59ff0b"><td class="mdescLeft">&#160;</td><td class="mdescRight">return the deep of the stack <br /></td></tr>
<tr class="separator:a4524748d3e229651211c74135a59ff0b"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a5645547f85698f171ff51aed9a0b05b3"><td class="memItemLeft" align="right" valign="top"><a id="a5645547f85698f171ff51aed9a0b05b3"></a>
APT_HIDDEN friend std::ostream &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator&lt;&lt;</b> (std::ostream &amp;out, Item i)</td></tr>
<tr class="separator:a5645547f85698f171ff51aed9a0b05b3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Enumeration Documentation</h2>
<a id="a2ea0bb09adcce7f655e8f8ee8d30561b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2ea0bb09adcce7f655e8f8ee8d30561b">&#9670;&nbsp;</a></span>MsgType</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>a message can have one of following severity </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a id="a2ea0bb09adcce7f655e8f8ee8d30561ba651d8a47a6976d6fe05c0e03fb4cd2d0"></a>FATAL&#160;</td><td class="fielddoc"><p>Message will be printed instantly as it is likely that this error will lead to a complete crash. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2ea0bb09adcce7f655e8f8ee8d30561ba2fd6f336d08340583bd620a7f5694c90"></a>ERROR&#160;</td><td class="fielddoc"><p>An error does hinder the correct execution and should be corrected. </p>
</td></tr>
<tr><td class="fieldname"><a id="a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81"></a>WARNING&#160;</td><td class="fielddoc"><p>indicates problem that can lead to errors later on </p>
</td></tr>
<tr><td class="fieldname"><a id="a2ea0bb09adcce7f655e8f8ee8d30561baed8762ff982b982ce3d67f81ab34f1d4"></a>NOTICE&#160;</td><td class="fielddoc"><p>deprecation warnings, old fallback behavior, … </p>
</td></tr>
<tr><td class="fieldname"><a id="a2ea0bb09adcce7f655e8f8ee8d30561ba0593585da9181e972974c1274d8f2b4f"></a>DEBUG&#160;</td><td class="fielddoc"><p>for developers only in areas it is hard to print something directly </p>
</td></tr>
</table>

</div>
</div>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ae297fbea06bddac8ae8dac88e76f5cb0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae297fbea06bddac8ae8dac88e76f5cb0">&#9670;&nbsp;</a></span>Debug()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Debug </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add a debug message to the list </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Description</td><td>Format string for the message</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>false</b> </dd></dl>

</div>
</div>
<a id="a93b848d9522749268832bafa64f6a5c2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a93b848d9522749268832bafa64f6a5c2">&#9670;&nbsp;</a></span>DebugE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool DebugE </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add a debug message with errno to the list </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Function</td><td>name of the function generating the error </td></tr>
    <tr><td class="paramname">Description</td><td>format string for the error message</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>false</b> </dd></dl>

</div>
</div>
<a id="a81be42602b9ad2301c54674471818908"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a81be42602b9ad2301c54674471818908">&#9670;&nbsp;</a></span>DumpErrors() <span class="overload">[1/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DumpErrors </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>dumps the messages of type WARNING or higher to std::cerr </p>
<p>Note that all messages are discarded, displayed or not. </p>

</div>
</div>
<a id="a92db7530702b6110f3727ac3404543bd"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a92db7530702b6110f3727ac3404543bd">&#9670;&nbsp;</a></span>DumpErrors() <span class="overload">[2/3]</span></h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">void DumpErrors </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;&#160;</td>
          <td class="paramname"><em>threshold</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>dumps the list of messages to std::cerr </p>
<p>Note that all messages are discarded, also the notices displayed or not.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">threshold</td><td>minimum level printed </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a48d82d44e64c773efe753735c61768a6"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a48d82d44e64c773efe753735c61768a6">&#9670;&nbsp;</a></span>DumpErrors() <span class="overload">[3/3]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void DumpErrors </td>
          <td>(</td>
          <td class="paramtype">std::ostream &amp;&#160;</td>
          <td class="paramname"><em>out</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;&#160;</td>
          <td class="paramname"><em>threshold</em> = <code><a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">WARNING</a></code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool const &amp;&#160;</td>
          <td class="paramname"><em>mergeStack</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>outputs the list of messages to the given stream </p>
<p>Note that all messages are discarded, even undisplayed ones.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">out</td><td>output stream to write the messages in </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">threshold</td><td>minimum level considered </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">mergeStack</td><td>if true recursively dumps the entire stack </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="classGlobalError.xhtml#a41190a6896a09de84c7b7aa32a9573ba">Discard()</a>.</p>

</div>
</div>
<a id="a2506440cb23e7863b6bed4916dafbaec"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a2506440cb23e7863b6bed4916dafbaec">&#9670;&nbsp;</a></span>empty()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool empty </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;&#160;</td>
          <td class="paramname"><em>threshold</em> = <code><a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba984de77c680eaff141ec910e25568a81">WARNING</a></code></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>is the list empty? </p>
<p>Can be used to check if the current stack level doesn't include anything equal or more severe than a given threshold, defaulting to warning level for historic reasons.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">threshold</td><td>minimum level considered</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>true</b> if the list is empty, <b>false</b> otherwise </dd></dl>

</div>
</div>
<a id="af5fae022d83601f40fde149ebafd1cce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af5fae022d83601f40fde149ebafd1cce">&#9670;&nbsp;</a></span>Errno()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Errno </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add an Error message with errno to the list </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Function</td><td>name of the function generating the error </td></tr>
    <tr><td class="paramname">Description</td><td>format string for the error message</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>false</b> </dd></dl>

</div>
</div>
<a id="a94e3c521c32a44fd786b9f22f153b85d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a94e3c521c32a44fd786b9f22f153b85d">&#9670;&nbsp;</a></span>Error()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Error </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add an Error message to the list </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Description</td><td>Format string for the error message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>false</b> </dd></dl>

</div>
</div>
<a id="a7cacbea0f1054d0aef0b5b4505a559e7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a7cacbea0f1054d0aef0b5b4505a559e7">&#9670;&nbsp;</a></span>Fatal()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Fatal </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add an fatal error message to the list </p>
<p>Most of the stuff we consider as "error" is also "fatal" for the user as the application will not have the expected result, but a fatal message here means that it gets printed directly to stderr in addition to adding it to the list as the error leads sometimes to crashes and a maybe duplicated message is better than "Segfault" as the only displayed text</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Description</td><td>Format string for the fatal error message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>false</b> </dd></dl>

</div>
</div>
<a id="aad9dbd341423bd851460b3758639237e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad9dbd341423bd851460b3758639237e">&#9670;&nbsp;</a></span>FatalE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool FatalE </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add a fatal error message with errno to the list </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Function</td><td>name of the function generating the error </td></tr>
    <tr><td class="paramname">Description</td><td>format string for the error message</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>false</b> </dd></dl>

</div>
</div>
<a id="a077d42684d901b09856da43ba4300090"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a077d42684d901b09856da43ba4300090">&#9670;&nbsp;</a></span>Insert() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds an error message with the given type </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>of the error message </td></tr>
    <tr><td class="paramname">Description</td><td>of the error </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">Referenced by <a class="el" href="classGlobalError.xhtml#a570f477196cf31d3d3675d71e14ff3ad">InsertErrno()</a>.</p>

</div>
</div>
<a id="af1ea179e74cedcebfe14bd3d61fdc6de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af1ea179e74cedcebfe14bd3d61fdc6de">&#9670;&nbsp;</a></span>Insert() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Insert </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t &amp;&#160;</td>
          <td class="paramname"><em>msgSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds an error message with the given type </p>
<p>args needs to be initialized with va_start and terminated with va_end by the caller. msgSize is also an out-parameter in case the msgSize was not enough to store the complete message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>of the error message </td></tr>
    <tr><td class="paramname">Description</td><td>is the format string for args </td></tr>
    <tr><td class="paramname">args</td><td>list from a printf-like function </td></tr>
    <tr><td class="paramname">msgSize</td><td>is the size of the char[] used to store message </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the message was added, false if not - the caller should call this method again in that case </dd></dl>

<p class="reference">References <a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba0593585da9181e972974c1274d8f2b4f">DEBUG</a>, <a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba2fd6f336d08340583bd620a7f5694c90">ERROR</a>, and <a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba651d8a47a6976d6fe05c0e03fb4cd2d0">FATAL</a>.</p>

</div>
</div>
<a id="a00e3b810d806f9d632844f1fdab275e3"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a00e3b810d806f9d632844f1fdab275e3">&#9670;&nbsp;</a></span>InsertErrno() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool InsertErrno </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a> const &amp;&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds an errno message with the given type </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>of the error message </td></tr>
    <tr><td class="paramname">Function</td><td>which failed </td></tr>
    <tr><td class="paramname">Description</td><td>of the error </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a570f477196cf31d3d3675d71e14ff3ad"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a570f477196cf31d3d3675d71e14ff3ad">&#9670;&nbsp;</a></span>InsertErrno() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool InsertErrno </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561b">MsgType</a>&#160;</td>
          <td class="paramname"><em>type</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">va_list &amp;&#160;</td>
          <td class="paramname"><em>args</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int const&#160;</td>
          <td class="paramname"><em>errsv</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t &amp;&#160;</td>
          <td class="paramname"><em>msgSize</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>adds an errno message with the given type </p>
<p>args needs to be initialized with va_start and terminated with va_end by the caller. msgSize is also an out-parameter in case the msgSize was not enough to store the complete message.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">type</td><td>of the error message </td></tr>
    <tr><td class="paramname">Function</td><td>which failed </td></tr>
    <tr><td class="paramname">Description</td><td>is the format string for args </td></tr>
    <tr><td class="paramname">args</td><td>list from a printf-like function </td></tr>
    <tr><td class="paramname">errsv</td><td>is the errno the error is for </td></tr>
    <tr><td class="paramname">msgSize</td><td>is the size of the char[] used to store message </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>true if the message was added, false if not - the caller should call this method again in that case </dd></dl>

<p class="reference">References <a class="el" href="classGlobalError.xhtml#a077d42684d901b09856da43ba4300090">Insert()</a>.</p>

</div>
</div>
<a id="a8c06d18a7c1fbf94f3e5622d5c40cd9a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8c06d18a7c1fbf94f3e5622d5c40cd9a">&#9670;&nbsp;</a></span>Notice()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Notice </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add a notice message to the list </p>
<p>A notice should be considered less severe than an error or a warning and can be ignored by the client without further problems for some times, but he should consider fixing the problem. This error type can be used for e.g. deprecation warnings of options.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Description</td><td>Format string for the message</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>false</b> </dd></dl>

</div>
</div>
<a id="ae354ceb52b63c8e30d17caaca6159dd7"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ae354ceb52b63c8e30d17caaca6159dd7">&#9670;&nbsp;</a></span>NoticeE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool NoticeE </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add a notice message with errno to the list </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Function</td><td>name of the function generating the error </td></tr>
    <tr><td class="paramname">Description</td><td>format string for the error message</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>false</b> </dd></dl>

</div>
</div>
<a id="a17591c060e662603e5d6c2e14c35500a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a17591c060e662603e5d6c2e14c35500a">&#9670;&nbsp;</a></span>PendingError()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool PendingError </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td> const</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">inline</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">

<p>is an error in the list? </p>
<dl class="section return"><dt>Returns</dt><dd><b>true</b> if an error is included in the list, <b>false</b> otherwise </dd></dl>

</div>
</div>
<a id="a74cc65f991d28b468016924af691f8c0"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a74cc65f991d28b468016924af691f8c0">&#9670;&nbsp;</a></span>PopMessage()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool PopMessage </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>Text</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>returns and removes the first (or last) message in the list </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir">[out]</td><td class="paramname">Text</td><td>message of the first/last item</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>true</b> if the message was an error, <b>false</b> otherwise </dd></dl>

<p class="reference">References <a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba2fd6f336d08340583bd620a7f5694c90">ERROR</a>, and <a class="el" href="classGlobalError.xhtml#a2ea0bb09adcce7f655e8f8ee8d30561ba651d8a47a6976d6fe05c0e03fb4cd2d0">FATAL</a>.</p>

</div>
</div>
<a id="a45bab2f436ea354b8e642d7f16fffb00"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a45bab2f436ea354b8e642d7f16fffb00">&#9670;&nbsp;</a></span>PushToStack()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void PushToStack </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>put the current Messages into the stack </p>
<p>All "old" messages will be pushed into a stack to them later back, but for now the Message query will be empty and performs as no messages were present before.</p>
<p>The stack can be as deep as you want - all stack operations will only operate on the last element in the stack. </p>

<p class="reference">References <a class="el" href="classGlobalError.xhtml#a41190a6896a09de84c7b7aa32a9573ba">Discard()</a>.</p>

</div>
</div>
<a id="ada014c1d78ce219fc8657bd0d6b33c17"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ada014c1d78ce219fc8657bd0d6b33c17">&#9670;&nbsp;</a></span>Warning()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Warning </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add a warning message to the list </p>
<p>A warning should be considered less severe than an error and may be ignored by the client.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Description</td><td>Format string for the message</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>false</b> </dd></dl>

</div>
</div>
<a id="aad6b628986a4a856e289477bde506744"></a>
<h2 class="memtitle"><span class="permalink"><a href="#aad6b628986a4a856e289477bde506744">&#9670;&nbsp;</a></span>WarningE()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool WarningE </td>
          <td>(</td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Function</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>Description</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">&#160;</td>
          <td class="paramname"><em>...</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>add a warning message with errno to the list </p>
<p>A warning should be considered less severe than an error and may be ignored by the client.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Function</td><td>Name of the function generates the warning. </td></tr>
    <tr><td class="paramname">Description</td><td>Format string for the warning message.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>false</b> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>apt-pkg/contrib/<a class="el" href="error_8h_source.xhtml">error.h</a></li>
<li>apt-pkg/contrib/error.cc</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
