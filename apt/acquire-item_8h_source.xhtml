<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: apt-pkg/acquire-item.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_18f22d4be2ca84c350e120b6506056ca.xhtml">apt-pkg</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">acquire-item.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="acquire-item_8h.xhtml">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// -*- mode: cpp; mode: fold -*-</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Description                                                          /*{{{*/</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/* ######################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">   Acquire Item - Item to acquire</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">   When an item is instantiated it will add it self to the local list in</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">   the Owner Acquire class. Derived classes will then call QueueURI to</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment">   register all the URI&#39;s they wish to fetch at the initial moment.</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">   Three item classes are provided to provide functionality for</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">   downloading of Index, Translation and Packages files.</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">   A Archive class is provided for downloading .deb files. It does Hash</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">   checking and source location as well as a retry algorithm.</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment">   ##################################################################### */</span></div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="preprocessor">#ifndef PKGLIB_ACQUIRE_ITEM_H</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#define PKGLIB_ACQUIRE_ITEM_H</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160; </div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="acquire_8h.xhtml">apt-pkg/acquire.h</a>&gt;</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/hashes.h&gt;</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/indexfile.h&gt;</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="pkgcache_8h.xhtml">apt-pkg/pkgcache.h</a>&gt;</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/weakptr.h&gt;</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160; </div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">#include &lt;unordered_map&gt;</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160; </div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160; </div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgRecords.xhtml">pkgRecords</a>;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgSourceList.xhtml">pkgSourceList</a>;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a>;</div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgAcqIndexMergeDiffs.xhtml">pkgAcqIndexMergeDiffs</a>;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="keyword">class </span><a class="code" href="classmetaIndex.xhtml">metaIndex</a>;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml">   46</a></span>&#160;<span class="keyword">class </span>APT_PUBLIC <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::Item : <span class="keyword">public</span> <a class="code" href="classWeakPointable.xhtml">WeakPointable</a>                                <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;{</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9">   63</a></span>&#160;   <span class="keyword">enum</span> <a class="code" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9">ItemState</a></div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;     {</div>
<div class="line"><a name="l00066"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9aafe4203baf90d29ba26cdca204795329">   66</a></span>&#160;       <a class="code" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9aafe4203baf90d29ba26cdca204795329">StatIdle</a>,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160; </div>
<div class="line"><a name="l00069"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a2438768d0d80b2bcbf37ffa6bae5d445">   69</a></span>&#160;       <a class="code" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a2438768d0d80b2bcbf37ffa6bae5d445">StatFetching</a>,</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a875850b5de48d7a0ae71c47fbbef4832">   72</a></span>&#160;       <a class="code" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a875850b5de48d7a0ae71c47fbbef4832">StatDone</a>,</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a8523989e15c68262bb5469f61fbe72ba">   77</a></span>&#160;       <a class="code" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a8523989e15c68262bb5469f61fbe72ba">StatError</a>,</div>
<div class="line"><a name="l00078"></a><span class="lineno">   78</span>&#160; </div>
<div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a19728efb594f55c57218604ad77b25db">   82</a></span>&#160;       <a class="code" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a19728efb594f55c57218604ad77b25db">StatAuthError</a>,</div>
<div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160; </div>
<div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a29a70e77eba9ee9773d3e6ac26348820">   87</a></span>&#160;       <a class="code" href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a29a70e77eba9ee9773d3e6ac26348820">StatTransientNetworkError</a>,</div>
<div class="line"><a name="l00088"></a><span class="lineno">   88</span>&#160;     } Status;</div>
<div class="line"><a name="l00089"></a><span class="lineno">   89</span>&#160; </div>
<div class="line"><a name="l00093"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#ab2638de684977037618d65aa009384b1">   93</a></span>&#160;   std::string <a class="code" href="classpkgAcquire.xhtml#ab2638de684977037618d65aa009384b1">ErrorText</a>;</div>
<div class="line"><a name="l00094"></a><span class="lineno">   94</span>&#160; </div>
<div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a8798fd49b6306cde3810ff5744d8bfc2">   96</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> <a class="code" href="classpkgAcquire.xhtml#a8798fd49b6306cde3810ff5744d8bfc2">FileSize</a>;</div>
<div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160; </div>
<div class="line"><a name="l00099"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a2b86900df4f7c4f7fc44f4c2bc888827">   99</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> <a class="code" href="classpkgAcquire.xhtml#a2b86900df4f7c4f7fc44f4c2bc888827">PartialSize</a>;</div>
<div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160; </div>
<div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a634f2accefd6f56896af45cedbebb08d">  104</a></span>&#160;   std::string <a class="code" href="classpkgAcquire.xhtml#a634f2accefd6f56896af45cedbebb08d">ActiveSubprocess</a>;</div>
<div class="line"><a name="l00105"></a><span class="lineno">  105</span>&#160; </div>
<div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a7fc877a36248a6101304994352d1ad87">  113</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <a class="code" href="classpkgAcquire.xhtml#a7fc877a36248a6101304994352d1ad87">ID</a>;</div>
<div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160; </div>
<div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a886f6c17d366793eb6202ba2482372f5">  119</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classpkgAcquire.xhtml#a886f6c17d366793eb6202ba2482372f5">Complete</a>;</div>
<div class="line"><a name="l00120"></a><span class="lineno">  120</span>&#160; </div>
<div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a98d3c89be817752144bb35823e365fec">  126</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classpkgAcquire.xhtml#a98d3c89be817752144bb35823e365fec">Local</a>;</div>
<div class="line"><a name="l00127"></a><span class="lineno">  127</span>&#160; </div>
<div class="line"><a name="l00128"></a><span class="lineno">  128</span>&#160;   std::string UsedMirror;</div>
<div class="line"><a name="l00129"></a><span class="lineno">  129</span>&#160; </div>
<div class="line"><a name="l00138"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a1d1d5538b9875279b01b81e1ef494601">  138</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classpkgAcquire.xhtml#a1d1d5538b9875279b01b81e1ef494601">QueueCounter</a>;</div>
<div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160; </div>
<div class="line"><a name="l00148"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a4bef8db29346252205b0a9be3c530739">  148</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classpkgAcquire.xhtml#a4bef8db29346252205b0a9be3c530739">ExpectedAdditionalItems</a>;</div>
<div class="line"><a name="l00149"></a><span class="lineno">  149</span>&#160; </div>
<div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#ab4b5e2afff64c51303682cea9243f098">  153</a></span>&#160;   std::string <a class="code" href="classpkgAcquire.xhtml#ab4b5e2afff64c51303682cea9243f098">DestFile</a>;</div>
<div class="line"><a name="l00154"></a><span class="lineno">  154</span>&#160; </div>
<div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a2cf4b8b42d2691df4d19f456bad87327">  156</a></span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> <a class="code" href="classpkgAcquire.xhtml#a2cf4b8b42d2691df4d19f456bad87327">Retries</a>;</div>
<div class="line"><a name="l00157"></a><span class="lineno">  157</span>&#160; </div>
<div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a8798e6e4055734c7f1e234ef4acd9371">  171</a></span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classpkgAcquire.xhtml#a8798e6e4055734c7f1e234ef4acd9371">Failed</a>(std::string <span class="keyword">const</span> &amp;Message,<a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf);</div>
<div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> FailMessage(std::string <span class="keyword">const</span> &amp;Message);</div>
<div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160; </div>
<div class="line"><a name="l00193"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a16cbb205286be182faec2cbc0434eef2">  193</a></span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classpkgAcquire.xhtml#a16cbb205286be182faec2cbc0434eef2">VerifyDone</a>(std::string <span class="keyword">const</span> &amp;Message,</div>
<div class="line"><a name="l00194"></a><span class="lineno">  194</span>&#160;         <a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf);</div>
<div class="line"><a name="l00195"></a><span class="lineno">  195</span>&#160; </div>
<div class="line"><a name="l00214"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a17d459e7612a763c8eb2aa4aae9a6418">  214</a></span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classpkgAcquire.xhtml#a17d459e7612a763c8eb2aa4aae9a6418">Done</a>(std::string <span class="keyword">const</span> &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> <span class="keyword">const</span> &amp;<a class="code" href="classHashes.xhtml">Hashes</a>,</div>
<div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;                     <a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf);</div>
<div class="line"><a name="l00216"></a><span class="lineno">  216</span>&#160; </div>
<div class="line"><a name="l00226"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a3bd3f16c6fa3134500f50f0bf8fd4ecd">  226</a></span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classpkgAcquire.xhtml#a3bd3f16c6fa3134500f50f0bf8fd4ecd">Start</a>(std::string <span class="keyword">const</span> &amp;Message, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> <span class="keyword">const</span> Size);</div>
<div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160; </div>
<div class="line"><a name="l00236"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a65c34bf145cef32f615c0fd7be757a36">  236</a></span>&#160;   <span class="keyword">virtual</span> std::string <a class="code" href="classpkgAcquire.xhtml#a65c34bf145cef32f615c0fd7be757a36">Custom600Headers</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;   <span class="comment">// this is more a hack than a proper external interface, hence hidden</span></div>
<div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;   APT_HIDDEN std::unordered_map&lt;std::string, std::string&gt; &amp;ModifyCustomFields();</div>
<div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;   <span class="comment">// this isn&#39;t the super nicest interface either…</span></div>
<div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;   APT_HIDDEN <span class="keywordtype">bool</span> PopAlternativeURI(std::string &amp;NewURI);</div>
<div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;   APT_HIDDEN <span class="keywordtype">bool</span> IsGoodAlternativeURI(std::string <span class="keyword">const</span> &amp;AltUri) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> PushAlternativeURI(std::string &amp;&amp;NewURI, std::unordered_map&lt;std::string, std::string&gt; &amp;&amp;fields, <span class="keywordtype">bool</span> <span class="keyword">const</span> at_the_back);</div>
<div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> RemoveAlternativeSite(std::string &amp;&amp;OldSite);</div>
<div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160; </div>
<div class="line"><a name="l00249"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#ad340ff53c2faad023e3f11627e91c5b6">  249</a></span>&#160;   <span class="keyword">virtual</span> std::string <a class="code" href="classpkgAcquire.xhtml#ad340ff53c2faad023e3f11627e91c5b6">DescURI</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00254"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a89dc1a987d2902d03b28100d3427d129">  254</a></span>&#160;   <span class="keyword">virtual</span> std::string <a class="code" href="classpkgAcquire.xhtml#a89dc1a987d2902d03b28100d3427d129">ShortDesc</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160; </div>
<div class="line"><a name="l00257"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a2977f974805071d438df8dd73292fe72">  257</a></span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> <a class="code" href="classpkgAcquire.xhtml#a2977f974805071d438df8dd73292fe72">Finished</a>();</div>
<div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160; </div>
<div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a908a8a85047dd5a135a84be0f3bc1baa">  260</a></span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classHashStringList.xhtml">HashStringList</a> <a class="code" href="classpkgAcquire.xhtml#a908a8a85047dd5a135a84be0f3bc1baa">GetExpectedHashes</a>() <span class="keyword">const</span> = 0;</div>
<div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a237fd00f8b6cfdd3cdcf1815846149e0">  262</a></span>&#160;   std::string <a class="code" href="classpkgAcquire.xhtml#a237fd00f8b6cfdd3cdcf1815846149e0">HashSum</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160; </div>
<div class="line"><a name="l00270"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a1136af95870160bb254473a2f7e59a86">  270</a></span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classpkgAcquire.xhtml#a1136af95870160bb254473a2f7e59a86">HashesRequired</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">true</span>; }</div>
<div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160; </div>
<div class="line"><a name="l00273"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#af5b29a075a3faef3bc2b34663801a256">  273</a></span>&#160;   <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> *<a class="code" href="classpkgAcquire.xhtml#af5b29a075a3faef3bc2b34663801a256">GetOwner</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;   pkgAcquire::ItemDesc &amp;GetItemDesc();</div>
<div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160; </div>
<div class="line"><a name="l00277"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#abbd5b67ba93cd4d1d0d19ad5a37704a5">  277</a></span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classpkgAcquire.xhtml#abbd5b67ba93cd4d1d0d19ad5a37704a5">IsTrusted</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160; </div>
<div class="line"><a name="l00283"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#aeeb2ad33090ed27447bfe86ff8d9d883">  283</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="classpkgAcquire.xhtml#aeeb2ad33090ed27447bfe86ff8d9d883">SetActiveSubprocess</a>(std::string <span class="keyword">const</span> &amp;subprocess);</div>
<div class="line"><a name="l00284"></a><span class="lineno">  284</span>&#160; </div>
<div class="line"><a name="l00293"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#aa391d1c541349a2c9d0968ef8660b45e">  293</a></span>&#160;   <span class="keyword">explicit</span> <a class="code" href="classpkgAcquire.xhtml#aa391d1c541349a2c9d0968ef8660b45e">Item</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * <span class="keyword">const</span> Owner);</div>
<div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160; </div>
<div class="line"><a name="l00298"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a73dc08e4fcad28172942d233f825e391">  298</a></span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classpkgAcquire.xhtml#a73dc08e4fcad28172942d233f825e391">~Item</a>();</div>
<div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160; </div>
<div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;   <span class="keywordtype">bool</span> APT_HIDDEN IsRedirectionLoop(std::string <span class="keyword">const</span> &amp;NewURI);</div>
<div class="line"><a name="l00302"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a14b95e9dfd9a18f94878cdf849c60053">  302</a></span>&#160;   <span class="keywordtype">int</span> APT_HIDDEN <a class="code" href="classpkgAcquire.xhtml#a14b95e9dfd9a18f94878cdf849c60053">Priority</a>();</div>
<div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160; </div>
<div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00306"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#ac0b2d9156c461297e38e9f3fdf2771b3">  306</a></span>&#160;   <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * <span class="keyword">const</span> <a class="code" href="classpkgAcquire.xhtml#ac0b2d9156c461297e38e9f3fdf2771b3">Owner</a>;</div>
<div class="line"><a name="l00307"></a><span class="lineno">  307</span>&#160; </div>
<div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a63a8c90526aa28ea8a9c2458a53846bc">  309</a></span>&#160;   pkgAcquire::ItemDesc <a class="code" href="classpkgAcquire.xhtml#a63a8c90526aa28ea8a9c2458a53846bc">Desc</a>;</div>
<div class="line"><a name="l00310"></a><span class="lineno">  310</span>&#160; </div>
<div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;   <span class="keyword">enum</span> RenameOnErrorState {</div>
<div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;      HashSumMismatch,</div>
<div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;      SizeMismatch,</div>
<div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;      InvalidFormat,</div>
<div class="line"><a name="l00315"></a><span class="lineno">  315</span>&#160;      SignatureError,</div>
<div class="line"><a name="l00316"></a><span class="lineno">  316</span>&#160;      NotClearsigned,</div>
<div class="line"><a name="l00317"></a><span class="lineno">  317</span>&#160;      MaximumSizeExceeded,</div>
<div class="line"><a name="l00318"></a><span class="lineno">  318</span>&#160;      PDiffError,</div>
<div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;   };</div>
<div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160; </div>
<div class="line"><a name="l00325"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a140b713d7815b8dd427cc87c2df56585">  325</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classpkgAcquire.xhtml#a140b713d7815b8dd427cc87c2df56585">RenameOnError</a>(RenameOnErrorState <span class="keyword">const</span> state);</div>
<div class="line"><a name="l00326"></a><span class="lineno">  326</span>&#160; </div>
<div class="line"><a name="l00337"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a3796f802e2bbb94ea4d215acb092e1de">  337</a></span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classpkgAcquire.xhtml#a3796f802e2bbb94ea4d215acb092e1de">QueueURI</a>(ItemDesc &amp;Item);</div>
<div class="line"><a name="l00338"></a><span class="lineno">  338</span>&#160; </div>
<div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a717924cd0aecc1908058a6ed7ffd31f3">  340</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="classpkgAcquire.xhtml#a717924cd0aecc1908058a6ed7ffd31f3">Dequeue</a>();</div>
<div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160; </div>
<div class="line"><a name="l00351"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a7787c3dcef8c503fb513569a9fdec68d">  351</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classpkgAcquire.xhtml#a7787c3dcef8c503fb513569a9fdec68d">Rename</a>(std::string <span class="keyword">const</span> &amp;From, std::string <span class="keyword">const</span> &amp;To);</div>
<div class="line"><a name="l00352"></a><span class="lineno">  352</span>&#160; </div>
<div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="classpkgAcquire.xhtml#a9ed94159619166b2e0aed2d88be5c875">  354</a></span>&#160;   <span class="keyword">virtual</span> std::string <a class="code" href="classpkgAcquire.xhtml#a9ed94159619166b2e0aed2d88be5c875">GetFinalFilename</a>() <span class="keyword">const</span>;</div>
<div class="line"><a name="l00355"></a><span class="lineno">  355</span>&#160; </div>
<div class="line"><a name="l00356"></a><span class="lineno">  356</span>&#160;   <span class="keyword">private</span>:</div>
<div class="line"><a name="l00357"></a><span class="lineno">  357</span>&#160;   <span class="keyword">class </span>Private;</div>
<div class="line"><a name="l00358"></a><span class="lineno">  358</span>&#160;   Private * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00359"></a><span class="lineno">  359</span>&#160; </div>
<div class="line"><a name="l00360"></a><span class="lineno">  360</span>&#160;   <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classpkgAcqMetaBase.xhtml">pkgAcqMetaBase</a>;</div>
<div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;   <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a>;</div>
<div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;};</div>
<div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00364"></a><span class="lineno"><a class="line" href="classpkgAcqTransactionItem.xhtml">  364</a></span>&#160;<span class="keyword">class </span>APT_HIDDEN <a class="code" href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a>: <span class="keyword">public</span> pkgAcquire::Item         <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l00366"></a><span class="lineno">  366</span>&#160;{</div>
<div class="line"><a name="l00367"></a><span class="lineno">  367</span>&#160;   <span class="keywordtype">void</span> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00368"></a><span class="lineno">  368</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00369"></a><span class="lineno">  369</span>&#160;   <a class="code" href="classHashStringList.xhtml">HashStringList</a> GetExpectedHashesFor(std::string <span class="keyword">const</span> &amp;MetaKey) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00370"></a><span class="lineno">  370</span>&#160; </div>
<div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;   <span class="keywordtype">bool</span> QueueURI(pkgAcquire::ItemDesc &amp;Item) APT_OVERRIDE;</div>
<div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160; </div>
<div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;   <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> <span class="keyword">const</span> Target;</div>
<div class="line"><a name="l00375"></a><span class="lineno">  375</span>&#160; </div>
<div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="classpkgAcqTransactionItem.xhtml#ac344f6df305106606f3dff2c9231bb6a">  377</a></span>&#160;   std::string <a class="code" href="classpkgAcqTransactionItem.xhtml#ac344f6df305106606f3dff2c9231bb6a">PartialFile</a>;</div>
<div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160; </div>
<div class="line"><a name="l00380"></a><span class="lineno"><a class="line" href="classpkgAcqTransactionItem.xhtml#a485640aedbea8b648c06cdb378e3aa1f">  380</a></span>&#160;   <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a> * <span class="keyword">const</span> <a class="code" href="classpkgAcqTransactionItem.xhtml#a485640aedbea8b648c06cdb378e3aa1f">TransactionManager</a>;</div>
<div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160; </div>
<div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;   <span class="keyword">enum</span> TransactionStates {</div>
<div class="line"><a name="l00383"></a><span class="lineno">  383</span>&#160;      TransactionStarted,</div>
<div class="line"><a name="l00384"></a><span class="lineno">  384</span>&#160;      TransactionCommit,</div>
<div class="line"><a name="l00385"></a><span class="lineno">  385</span>&#160;      TransactionAbort,</div>
<div class="line"><a name="l00386"></a><span class="lineno">  386</span>&#160;   };</div>
<div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> TransactionState(TransactionStates <span class="keyword">const</span> state);</div>
<div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160; </div>
<div class="line"><a name="l00389"></a><span class="lineno">  389</span>&#160;   <span class="keyword">virtual</span> std::string DescURI() const APT_OVERRIDE { <span class="keywordflow">return</span> Target.<a class="code" href="classIndexTarget.xhtml#aaf8eea5037c53d12d3f31ab9e032712c">URI</a>; }</div>
<div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classHashStringList.xhtml">HashStringList</a> GetExpectedHashes() const APT_OVERRIDE;</div>
<div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;   virtual std::<span class="keywordtype">string</span> GetMetaKey() const;</div>
<div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;   virtual <span class="keywordtype">bool</span> HashesRequired() const APT_OVERRIDE;</div>
<div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;   virtual <span class="keywordtype">bool</span> AcquireByHash() const;</div>
<div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160; </div>
<div class="line"><a name="l00395"></a><span class="lineno">  395</span>&#160;   <a class="code" href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * const Owner, <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a> * const TransactionManager, <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> const &amp;Target) APT_NONNULL(2, 3);</div>
<div class="line"><a name="l00396"></a><span class="lineno">  396</span>&#160;   virtual ~<a class="code" href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a>();</div>
<div class="line"><a name="l00397"></a><span class="lineno">  397</span>&#160; </div>
<div class="line"><a name="l00398"></a><span class="lineno">  398</span>&#160;   friend class <a class="code" href="classpkgAcqMetaBase.xhtml">pkgAcqMetaBase</a>;</div>
<div class="line"><a name="l00399"></a><span class="lineno">  399</span>&#160;   friend class <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a>;</div>
<div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;};</div>
<div class="line"><a name="l00401"></a><span class="lineno">  401</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00402"></a><span class="lineno"><a class="line" href="classpkgAcqMetaBase.xhtml">  402</a></span>&#160;class APT_HIDDEN <a class="code" href="classpkgAcqMetaBase.xhtml">pkgAcqMetaBase</a> : public <a class="code" href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a>          <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l00404"></a><span class="lineno">  404</span>&#160;{</div>
<div class="line"><a name="l00405"></a><span class="lineno">  405</span>&#160;   <span class="keywordtype">void</span> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00406"></a><span class="lineno">  406</span>&#160; <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00407"></a><span class="lineno">  407</span>&#160;   std::vector&lt;pkgAcqTransactionItem*&gt; Transaction;</div>
<div class="line"><a name="l00408"></a><span class="lineno">  408</span>&#160; </div>
<div class="line"><a name="l00411"></a><span class="lineno"><a class="line" href="classpkgAcqMetaBase.xhtml#a443405c4d5dd2d2473f185ee7d6a838b">  411</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classpkgAcqMetaBase.xhtml#a443405c4d5dd2d2473f185ee7d6a838b">AuthPass</a>;</div>
<div class="line"><a name="l00412"></a><span class="lineno">  412</span>&#160; </div>
<div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;   <span class="keywordtype">bool</span> CheckDownloadDone(<a class="code" href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a> * <span class="keyword">const</span> I, <span class="keyword">const</span> std::string &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> <span class="keyword">const</span> &amp;<a class="code" href="classHashes.xhtml">Hashes</a>) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00423"></a><span class="lineno">  423</span>&#160; </div>
<div class="line"><a name="l00425"></a><span class="lineno">  425</span>&#160;   <span class="keywordtype">void</span> QueueForSignatureVerify(<a class="code" href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a> * <span class="keyword">const</span> I, std::string <span class="keyword">const</span> &amp;File, std::string <span class="keyword">const</span> &amp;Signature);</div>
<div class="line"><a name="l00426"></a><span class="lineno">  426</span>&#160; </div>
<div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;   <span class="keyword">virtual</span> std::string Custom600Headers() const APT_OVERRIDE;</div>
<div class="line"><a name="l00428"></a><span class="lineno">  428</span>&#160; </div>
<div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;   <span class="keywordtype">bool</span> CheckAuthDone(std::<span class="keywordtype">string</span> const &amp;Message, <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const *const Cnf);</div>
<div class="line"><a name="l00440"></a><span class="lineno">  440</span>&#160; </div>
<div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;   <span class="keywordtype">bool</span> CheckStopAuthentication(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::Item * const I, const std::<span class="keywordtype">string</span> &amp;Message);</div>
<div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160; </div>
<div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;   <span class="keywordtype">bool</span> VerifyVendor(std::<span class="keywordtype">string</span> const &amp;Message);</div>
<div class="line"><a name="l00450"></a><span class="lineno">  450</span>&#160; </div>
<div class="line"><a name="l00451"></a><span class="lineno">  451</span>&#160;   virtual <span class="keywordtype">bool</span> TransactionState(TransactionStates const state) APT_OVERRIDE;</div>
<div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160; </div>
<div class="line"><a name="l00453"></a><span class="lineno">  453</span>&#160; public:</div>
<div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;   <span class="comment">// This refers more to the Transaction-Manager than the actual file</span></div>
<div class="line"><a name="l00455"></a><span class="lineno">  455</span>&#160;   <span class="keywordtype">bool</span> IMSHit;</div>
<div class="line"><a name="l00456"></a><span class="lineno">  456</span>&#160;   TransactionStates State;</div>
<div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;   std::<span class="keywordtype">string</span> BaseURI;</div>
<div class="line"><a name="l00458"></a><span class="lineno">  458</span>&#160; </div>
<div class="line"><a name="l00459"></a><span class="lineno">  459</span>&#160;   virtual <span class="keywordtype">bool</span> QueueURI(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::ItemDesc &amp;Item) APT_OVERRIDE;</div>
<div class="line"><a name="l00460"></a><span class="lineno">  460</span>&#160;   virtual <a class="code" href="classHashStringList.xhtml">HashStringList</a> GetExpectedHashes() const APT_OVERRIDE;</div>
<div class="line"><a name="l00461"></a><span class="lineno">  461</span>&#160;   virtual <span class="keywordtype">bool</span> HashesRequired() const APT_OVERRIDE;</div>
<div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160; </div>
<div class="line"><a name="l00463"></a><span class="lineno">  463</span>&#160;   <span class="comment">// transaction code</span></div>
<div class="line"><a name="l00464"></a><span class="lineno">  464</span>&#160;   <span class="keywordtype">void</span> Add(<a class="code" href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a> * const I);</div>
<div class="line"><a name="l00465"></a><span class="lineno">  465</span>&#160;   <span class="keywordtype">void</span> AbortTransaction();</div>
<div class="line"><a name="l00466"></a><span class="lineno">  466</span>&#160;   <span class="keywordtype">bool</span> TransactionHasError() const;</div>
<div class="line"><a name="l00467"></a><span class="lineno">  467</span>&#160;   <span class="keywordtype">void</span> CommitTransaction();</div>
<div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160; </div>
<div class="line"><a name="l00471"></a><span class="lineno">  471</span>&#160;   <span class="keywordtype">void</span> TransactionStageCopy(<a class="code" href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a> * const I,</div>
<div class="line"><a name="l00472"></a><span class="lineno">  472</span>&#160;                             const std::<span class="keywordtype">string</span> &amp;From,</div>
<div class="line"><a name="l00473"></a><span class="lineno">  473</span>&#160;                             const std::<span class="keywordtype">string</span> &amp;To);</div>
<div class="line"><a name="l00476"></a><span class="lineno">  476</span>&#160;   <span class="keywordtype">void</span> TransactionStageRemoval(<a class="code" href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a> * const I, const std::<span class="keywordtype">string</span> &amp;FinalFile);</div>
<div class="line"><a name="l00477"></a><span class="lineno">  477</span>&#160; </div>
<div class="line"><a name="l00479"></a><span class="lineno">  479</span>&#160;   virtual std::<span class="keywordtype">string</span> GetFinalFilename() const APT_OVERRIDE;</div>
<div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160; </div>
<div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;   <a class="code" href="classpkgAcqMetaBase.xhtml">pkgAcqMetaBase</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * const Owner, <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a> * const TransactionManager,</div>
<div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;                  <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> const &amp;DataTarget) APT_NONNULL(2, 3);</div>
<div class="line"><a name="l00483"></a><span class="lineno">  483</span>&#160;   virtual ~<a class="code" href="classpkgAcqMetaBase.xhtml">pkgAcqMetaBase</a>();</div>
<div class="line"><a name="l00484"></a><span class="lineno">  484</span>&#160;};</div>
<div class="line"><a name="l00485"></a><span class="lineno">  485</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00496"></a><span class="lineno"><a class="line" href="classpkgAcqMetaIndex.xhtml">  496</a></span>&#160;class APT_HIDDEN <a class="code" href="classpkgAcqMetaIndex.xhtml">pkgAcqMetaIndex</a> : public <a class="code" href="classpkgAcqMetaBase.xhtml">pkgAcqMetaBase</a></div>
<div class="line"><a name="l00497"></a><span class="lineno">  497</span>&#160;{</div>
<div class="line"><a name="l00498"></a><span class="lineno">  498</span>&#160;   <span class="keywordtype">void</span> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00499"></a><span class="lineno">  499</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;   <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> <span class="keyword">const</span> DetachedSigTarget;</div>
<div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160; </div>
<div class="line"><a name="l00503"></a><span class="lineno"><a class="line" href="classpkgAcqMetaIndex.xhtml#a7400ba10f25420ecbc3cae71f9f12047">  503</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="classpkgAcqMetaIndex.xhtml#a7400ba10f25420ecbc3cae71f9f12047">Init</a>(std::string <span class="keyword">const</span> &amp;URIDesc, std::string <span class="keyword">const</span> &amp;ShortDesc);</div>
<div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160; </div>
<div class="line"><a name="l00505"></a><span class="lineno">  505</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00506"></a><span class="lineno">  506</span>&#160;   <span class="keyword">virtual</span> std::string DescURI() const APT_OVERRIDE;</div>
<div class="line"><a name="l00507"></a><span class="lineno">  507</span>&#160; </div>
<div class="line"><a name="l00508"></a><span class="lineno">  508</span>&#160;   <span class="comment">// Specialized action members</span></div>
<div class="line"><a name="l00509"></a><span class="lineno">  509</span>&#160;   virtual <span class="keywordtype">void</span> Failed(std::<span class="keywordtype">string</span> const &amp;Message,<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const * const Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00510"></a><span class="lineno">  510</span>&#160;   virtual <span class="keywordtype">void</span> Done(std::<span class="keywordtype">string</span> const &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> const &amp;<a class="code" href="classHashes.xhtml">Hashes</a>,</div>
<div class="line"><a name="l00511"></a><span class="lineno">  511</span>&#160;                     <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const * const Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00512"></a><span class="lineno">  512</span>&#160; </div>
<div class="line"><a name="l00514"></a><span class="lineno">  514</span>&#160;   <a class="code" href="classpkgAcqMetaIndex.xhtml">pkgAcqMetaIndex</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * const Owner, <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a> * const TransactionManager,</div>
<div class="line"><a name="l00515"></a><span class="lineno">  515</span>&#160;                   <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> const &amp;DataTarget, <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> const &amp;DetachedSigTarget) APT_NONNULL(2, 3);</div>
<div class="line"><a name="l00516"></a><span class="lineno">  516</span>&#160;   virtual ~<a class="code" href="classpkgAcqMetaIndex.xhtml">pkgAcqMetaIndex</a>();</div>
<div class="line"><a name="l00517"></a><span class="lineno">  517</span>&#160; </div>
<div class="line"><a name="l00518"></a><span class="lineno">  518</span>&#160;   friend class <a class="code" href="classpkgAcqMetaSig.xhtml">pkgAcqMetaSig</a>;</div>
<div class="line"><a name="l00519"></a><span class="lineno">  519</span>&#160;};</div>
<div class="line"><a name="l00520"></a><span class="lineno">  520</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00529"></a><span class="lineno"><a class="line" href="classpkgAcqMetaSig.xhtml">  529</a></span>&#160;class APT_HIDDEN <a class="code" href="classpkgAcqMetaSig.xhtml">pkgAcqMetaSig</a> : public <a class="code" href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a></div>
<div class="line"><a name="l00530"></a><span class="lineno">  530</span>&#160;{</div>
<div class="line"><a name="l00531"></a><span class="lineno">  531</span>&#160;   <span class="keywordtype">void</span> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00532"></a><span class="lineno">  532</span>&#160; </div>
<div class="line"><a name="l00533"></a><span class="lineno">  533</span>&#160;   <a class="code" href="classpkgAcqMetaIndex.xhtml">pkgAcqMetaIndex</a> * <span class="keyword">const</span> MetaIndex;</div>
<div class="line"><a name="l00534"></a><span class="lineno">  534</span>&#160; </div>
<div class="line"><a name="l00536"></a><span class="lineno">  536</span>&#160;   std::string MetaIndexFileSignature;</div>
<div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160; </div>
<div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160; </div>
<div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;   <span class="keyword">virtual</span> std::string GetFinalFilename() <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160; </div>
<div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> HashesRequired() <span class="keyword">const</span> APT_OVERRIDE { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l00545"></a><span class="lineno">  545</span>&#160; </div>
<div class="line"><a name="l00546"></a><span class="lineno">  546</span>&#160;   <span class="comment">// Specialized action members</span></div>
<div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Failed(std::string <span class="keyword">const</span> &amp;Message,<a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Done(std::string <span class="keyword">const</span> &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> <span class="keyword">const</span> &amp;<a class="code" href="classHashes.xhtml">Hashes</a>,</div>
<div class="line"><a name="l00549"></a><span class="lineno">  549</span>&#160;                     <a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;   <span class="keyword">virtual</span> std::string Custom600Headers() <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160; </div>
<div class="line"><a name="l00553"></a><span class="lineno">  553</span>&#160;   <a class="code" href="classpkgAcqMetaSig.xhtml">pkgAcqMetaSig</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * <span class="keyword">const</span> Owner, <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a> * <span class="keyword">const</span> TransactionManager,</div>
<div class="line"><a name="l00554"></a><span class="lineno">  554</span>&#160;         <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> <span class="keyword">const</span> &amp;Target, <a class="code" href="classpkgAcqMetaIndex.xhtml">pkgAcqMetaIndex</a> * <span class="keyword">const</span> MetaIndex) APT_NONNULL(2, 3, 5);</div>
<div class="line"><a name="l00555"></a><span class="lineno">  555</span>&#160;   <span class="keyword">virtual</span> ~<a class="code" href="classpkgAcqMetaSig.xhtml">pkgAcqMetaSig</a>();</div>
<div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;};</div>
<div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00559"></a><span class="lineno"><a class="line" href="classpkgAcqMetaClearSig.xhtml">  559</a></span>&#160;<span class="keyword">class </span>APT_HIDDEN <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a> : <span class="keyword">public</span> <a class="code" href="classpkgAcqMetaIndex.xhtml">pkgAcqMetaIndex</a></div>
<div class="line"><a name="l00560"></a><span class="lineno">  560</span>&#160;{</div>
<div class="line"><a name="l00561"></a><span class="lineno">  561</span>&#160;   <span class="keywordtype">void</span> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00562"></a><span class="lineno">  562</span>&#160;   <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> <span class="keyword">const</span> DetachedDataTarget;</div>
<div class="line"><a name="l00563"></a><span class="lineno">  563</span>&#160; </div>
<div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00566"></a><span class="lineno"><a class="line" href="classpkgAcqMetaClearSig.xhtml#a55cc31522b67f17e71ffbb97b984c563">  566</a></span>&#160;   <a class="code" href="classmetaIndex.xhtml">metaIndex</a> *<a class="code" href="classpkgAcqMetaClearSig.xhtml#a55cc31522b67f17e71ffbb97b984c563">MetaIndexParser</a>;</div>
<div class="line"><a name="l00567"></a><span class="lineno">  567</span>&#160;   <a class="code" href="classmetaIndex.xhtml">metaIndex</a> *LastMetaIndexParser;</div>
<div class="line"><a name="l00568"></a><span class="lineno">  568</span>&#160; </div>
<div class="line"><a name="l00569"></a><span class="lineno">  569</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Failed(std::string <span class="keyword">const</span> &amp;Message,<a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00570"></a><span class="lineno">  570</span>&#160;   <span class="keyword">virtual</span> std::string Custom600Headers() const APT_OVERRIDE;</div>
<div class="line"><a name="l00571"></a><span class="lineno">  571</span>&#160;   virtual <span class="keywordtype">bool</span> VerifyDone(std::<span class="keywordtype">string</span> const &amp;Message, <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const * const Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00572"></a><span class="lineno">  572</span>&#160;   virtual <span class="keywordtype">void</span> Done(std::<span class="keywordtype">string</span> const &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> const &amp;<a class="code" href="classHashes.xhtml">Hashes</a>,</div>
<div class="line"><a name="l00573"></a><span class="lineno">  573</span>&#160;                     <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const * const Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00574"></a><span class="lineno">  574</span>&#160;   virtual <span class="keywordtype">void</span> Finished() APT_OVERRIDE;</div>
<div class="line"><a name="l00575"></a><span class="lineno">  575</span>&#160; </div>
<div class="line"><a name="l00584"></a><span class="lineno">  584</span>&#160;   <span class="keywordtype">void</span> QueueIndexes(<span class="keywordtype">bool</span> const verify);</div>
<div class="line"><a name="l00585"></a><span class="lineno">  585</span>&#160; </div>
<div class="line"><a name="l00587"></a><span class="lineno">  587</span>&#160;   <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * const Owner,</div>
<div class="line"><a name="l00588"></a><span class="lineno">  588</span>&#160;                <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> const &amp;ClearsignedTarget,</div>
<div class="line"><a name="l00589"></a><span class="lineno">  589</span>&#160;                <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> const &amp;DetachedDataTarget,</div>
<div class="line"><a name="l00590"></a><span class="lineno">  590</span>&#160;                <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> const &amp;DetachedSigTarget,</div>
<div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;                <a class="code" href="classmetaIndex.xhtml">metaIndex</a> * const MetaIndexParser);</div>
<div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;   virtual ~<a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a>();</div>
<div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;};</div>
<div class="line"><a name="l00594"></a><span class="lineno">  594</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00596"></a><span class="lineno"><a class="line" href="classpkgAcqBaseIndex.xhtml">  596</a></span>&#160;class APT_HIDDEN <a class="code" href="classpkgAcqBaseIndex.xhtml">pkgAcqBaseIndex</a> : public <a class="code" href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a></div>
<div class="line"><a name="l00597"></a><span class="lineno">  597</span>&#160;{</div>
<div class="line"><a name="l00598"></a><span class="lineno">  598</span>&#160;   <span class="keywordtype">void</span> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00599"></a><span class="lineno">  599</span>&#160; </div>
<div class="line"><a name="l00600"></a><span class="lineno">  600</span>&#160; <span class="keyword">public</span>:</div>
<div class="line"><a name="l00602"></a><span class="lineno">  602</span>&#160;   <span class="keyword">virtual</span> std::string GetFinalFilename() <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l00603"></a><span class="lineno">  603</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Failed(std::string <span class="keyword">const</span> &amp;Message,<a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00604"></a><span class="lineno">  604</span>&#160; </div>
<div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;   <a class="code" href="classpkgAcqBaseIndex.xhtml">pkgAcqBaseIndex</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * <span class="keyword">const</span> Owner, <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a> * <span class="keyword">const</span> TransactionManager,</div>
<div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;                   <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> <span class="keyword">const</span> &amp;Target) APT_NONNULL(2, 3);</div>
<div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;   <span class="keyword">virtual</span> ~<a class="code" href="classpkgAcqBaseIndex.xhtml">pkgAcqBaseIndex</a>();</div>
<div class="line"><a name="l00608"></a><span class="lineno">  608</span>&#160;};</div>
<div class="line"><a name="l00609"></a><span class="lineno">  609</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00617"></a><span class="lineno"><a class="line" href="classpkgAcqIndex.xhtml">  617</a></span>&#160;<span class="keyword">class </span>APT_HIDDEN <a class="code" href="classpkgAcqIndex.xhtml">pkgAcqIndex</a> : <span class="keyword">public</span> <a class="code" href="classpkgAcqBaseIndex.xhtml">pkgAcqBaseIndex</a></div>
<div class="line"><a name="l00618"></a><span class="lineno">  618</span>&#160;{</div>
<div class="line"><a name="l00619"></a><span class="lineno">  619</span>&#160;   <span class="keywordtype">void</span> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00620"></a><span class="lineno">  620</span>&#160; </div>
<div class="line"><a name="l00621"></a><span class="lineno">  621</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00622"></a><span class="lineno">  622</span>&#160; </div>
<div class="line"><a name="l00628"></a><span class="lineno"><a class="line" href="classpkgAcqIndex.xhtml#a7951e6695ecd10e5210b0afd0844b91e">  628</a></span>&#160;   <span class="keyword">enum</span> <a class="code" href="classpkgAcqIndex.xhtml#a7951e6695ecd10e5210b0afd0844b91e">AllStages</a> {</div>
<div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;      STAGE_DOWNLOAD,</div>
<div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;      STAGE_DECOMPRESS_AND_VERIFY,</div>
<div class="line"><a name="l00631"></a><span class="lineno">  631</span>&#160;   };</div>
<div class="line"><a name="l00632"></a><span class="lineno">  632</span>&#160;   AllStages Stage;</div>
<div class="line"><a name="l00633"></a><span class="lineno">  633</span>&#160; </div>
<div class="line"><a name="l00635"></a><span class="lineno">  635</span>&#160;   <span class="keywordtype">void</span> StageDownloadDone(std::string <span class="keyword">const</span> &amp;Message);</div>
<div class="line"><a name="l00636"></a><span class="lineno">  636</span>&#160; </div>
<div class="line"><a name="l00640"></a><span class="lineno">  640</span>&#160;   <span class="keywordtype">void</span> StageDecompressDone();</div>
<div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160; </div>
<div class="line"><a name="l00645"></a><span class="lineno"><a class="line" href="classpkgAcqIndex.xhtml#ad80ed9a66c7fda95887cdf6274d35f9c">  645</a></span>&#160;   std::string <a class="code" href="classpkgAcqIndex.xhtml#ad80ed9a66c7fda95887cdf6274d35f9c">EraseFileName</a>;</div>
<div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160; </div>
<div class="line"><a name="l00650"></a><span class="lineno"><a class="line" href="classpkgAcqIndex.xhtml#a1c12d98c41d5085614aeedf706f56252">  650</a></span>&#160;   std::string <a class="code" href="classpkgAcqIndex.xhtml#a1c12d98c41d5085614aeedf706f56252">CompressionExtensions</a>;</div>
<div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160; </div>
<div class="line"><a name="l00653"></a><span class="lineno"><a class="line" href="classpkgAcqIndex.xhtml#a7265e165b5a13836e2c1ee3aca2e1ace">  653</a></span>&#160;   std::string <a class="code" href="classpkgAcqIndex.xhtml#a7265e165b5a13836e2c1ee3aca2e1ace">CurrentCompressionExtension</a>;</div>
<div class="line"><a name="l00654"></a><span class="lineno">  654</span>&#160; </div>
<div class="line"><a name="l00656"></a><span class="lineno"><a class="line" href="classpkgAcqIndex.xhtml#a44a93ecc4c1d0d8cd86f7b27b0eab978">  656</a></span>&#160;   <span class="keywordtype">void</span> <a class="code" href="classpkgAcqIndex.xhtml#a44a93ecc4c1d0d8cd86f7b27b0eab978">InitByHashIfNeeded</a>();</div>
<div class="line"><a name="l00657"></a><span class="lineno">  657</span>&#160; </div>
<div class="line"><a name="l00659"></a><span class="lineno">  659</span>&#160;   <span class="keyword">virtual</span> std::string GetFinalFilename() const APT_OVERRIDE;</div>
<div class="line"><a name="l00660"></a><span class="lineno">  660</span>&#160; </div>
<div class="line"><a name="l00661"></a><span class="lineno">  661</span>&#160;   virtual <span class="keywordtype">bool</span> TransactionState(TransactionStates const state) APT_OVERRIDE;</div>
<div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160; </div>
<div class="line"><a name="l00663"></a><span class="lineno">  663</span>&#160;   public:</div>
<div class="line"><a name="l00664"></a><span class="lineno">  664</span>&#160;   <span class="comment">// Specialized action members</span></div>
<div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;   virtual <span class="keywordtype">void</span> Failed(std::<span class="keywordtype">string</span> const &amp;Message,<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const * const Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00666"></a><span class="lineno">  666</span>&#160;   virtual <span class="keywordtype">void</span> Done(std::<span class="keywordtype">string</span> const &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> const &amp;<a class="code" href="classHashes.xhtml">Hashes</a>,</div>
<div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;                     <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const * const Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;   virtual std::<span class="keywordtype">string</span> Custom600Headers() const APT_OVERRIDE;</div>
<div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;   virtual std::<span class="keywordtype">string</span> DescURI() const APT_OVERRIDE {<span class="keywordflow">return</span> Desc.URI;};</div>
<div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;   <span class="keyword">virtual</span> std::string GetMetaKey() const APT_OVERRIDE;</div>
<div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160; </div>
<div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;   <a class="code" href="classpkgAcqIndex.xhtml">pkgAcqIndex</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * const Owner, <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a> * const TransactionManager,</div>
<div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;               <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> const &amp;Target, <span class="keywordtype">bool</span> const Derived = false) APT_NONNULL(2, 3);</div>
<div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;   virtual ~<a class="code" href="classpkgAcqIndex.xhtml">pkgAcqIndex</a>();</div>
<div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160; </div>
<div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;   protected:</div>
<div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> Init(std::<span class="keywordtype">string</span> const &amp;<a class="code" href="classURI.xhtml">URI</a>, std::<span class="keywordtype">string</span> const &amp;URIDesc,</div>
<div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;             std::<span class="keywordtype">string</span> const &amp;ShortDesc);</div>
<div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;   APT_HIDDEN <span class="keywordtype">bool</span> CommonFailed(std::<span class="keywordtype">string</span> const &amp;TargetURI,</div>
<div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;                                std::<span class="keywordtype">string</span> const &amp;Message, <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const *const Cnf);</div>
<div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;};</div>
<div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00683"></a><span class="lineno"><a class="line" href="structDiffInfo.xhtml">  683</a></span>&#160;struct APT_HIDDEN <a class="code" href="structDiffInfo.xhtml">DiffInfo</a> {                                            <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l00685"></a><span class="lineno"><a class="line" href="structDiffInfo.xhtml#aefc35c7944eed319c89bc1b399f0eb67">  685</a></span>&#160;   std::string <a class="code" href="structDiffInfo.xhtml#aefc35c7944eed319c89bc1b399f0eb67">file</a>;</div>
<div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160; </div>
<div class="line"><a name="l00688"></a><span class="lineno"><a class="line" href="structDiffInfo.xhtml#ac1eb3374af4b79a77973d029cb72064c">  688</a></span>&#160;   <a class="code" href="classHashStringList.xhtml">HashStringList</a> <a class="code" href="structDiffInfo.xhtml#ac1eb3374af4b79a77973d029cb72064c">result_hashes</a>;</div>
<div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160; </div>
<div class="line"><a name="l00691"></a><span class="lineno"><a class="line" href="structDiffInfo.xhtml#a7c9600a12cf494a1aee76dbb2145bf2a">  691</a></span>&#160;   <a class="code" href="classHashStringList.xhtml">HashStringList</a> <a class="code" href="structDiffInfo.xhtml#a7c9600a12cf494a1aee76dbb2145bf2a">patch_hashes</a>;</div>
<div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160; </div>
<div class="line"><a name="l00694"></a><span class="lineno"><a class="line" href="structDiffInfo.xhtml#ac861382f56ae24a448cb50c62c688844">  694</a></span>&#160;   <a class="code" href="classHashStringList.xhtml">HashStringList</a> <a class="code" href="structDiffInfo.xhtml#ac861382f56ae24a448cb50c62c688844">download_hashes</a>;</div>
<div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;};</div>
<div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00706"></a><span class="lineno"><a class="line" href="classpkgAcqDiffIndex.xhtml">  706</a></span>&#160;<span class="keyword">class </span>APT_HIDDEN <a class="code" href="classpkgAcqDiffIndex.xhtml">pkgAcqDiffIndex</a> : <span class="keyword">public</span> <a class="code" href="classpkgAcqIndex.xhtml">pkgAcqIndex</a></div>
<div class="line"><a name="l00707"></a><span class="lineno">  707</span>&#160;{</div>
<div class="line"><a name="l00708"></a><span class="lineno">  708</span>&#160;   <span class="keywordtype">void</span> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00709"></a><span class="lineno">  709</span>&#160;   std::vector&lt;pkgAcqIndexMergeDiffs*&gt; * diffs;</div>
<div class="line"><a name="l00710"></a><span class="lineno">  710</span>&#160;   std::vector&lt;DiffInfo&gt; available_patches;</div>
<div class="line"><a name="l00711"></a><span class="lineno">  711</span>&#160;   <span class="keywordtype">bool</span> pdiff_merge;</div>
<div class="line"><a name="l00712"></a><span class="lineno">  712</span>&#160; </div>
<div class="line"><a name="l00713"></a><span class="lineno">  713</span>&#160; <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00715"></a><span class="lineno"><a class="line" href="classpkgAcqDiffIndex.xhtml#acdf3472c9b75f32dae88032d42d1cb6c">  715</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classpkgAcqDiffIndex.xhtml#acdf3472c9b75f32dae88032d42d1cb6c">Debug</a>;</div>
<div class="line"><a name="l00716"></a><span class="lineno">  716</span>&#160; </div>
<div class="line"><a name="l00718"></a><span class="lineno">  718</span>&#160;   <span class="keyword">virtual</span> std::string GetFinalFilename() const APT_OVERRIDE;</div>
<div class="line"><a name="l00719"></a><span class="lineno">  719</span>&#160; </div>
<div class="line"><a name="l00720"></a><span class="lineno">  720</span>&#160;   virtual <span class="keywordtype">bool</span> QueueURI(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::ItemDesc &amp;Item) APT_OVERRIDE;</div>
<div class="line"><a name="l00721"></a><span class="lineno">  721</span>&#160; </div>
<div class="line"><a name="l00722"></a><span class="lineno">  722</span>&#160;   virtual <span class="keywordtype">bool</span> TransactionState(TransactionStates const state) APT_OVERRIDE;</div>
<div class="line"><a name="l00723"></a><span class="lineno">  723</span>&#160; public:</div>
<div class="line"><a name="l00724"></a><span class="lineno">  724</span>&#160;   <span class="comment">// Specialized action members</span></div>
<div class="line"><a name="l00725"></a><span class="lineno">  725</span>&#160;   virtual <span class="keywordtype">void</span> Failed(std::<span class="keywordtype">string</span> const &amp;Message, <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const * const Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00726"></a><span class="lineno">  726</span>&#160;   virtual <span class="keywordtype">bool</span> VerifyDone(std::<span class="keywordtype">string</span> const &amp;Message, <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const * const Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00727"></a><span class="lineno">  727</span>&#160;   virtual <span class="keywordtype">void</span> Done(std::<span class="keywordtype">string</span> const &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> const &amp;<a class="code" href="classHashes.xhtml">Hashes</a>,</div>
<div class="line"><a name="l00728"></a><span class="lineno">  728</span>&#160;                     <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const * const Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00729"></a><span class="lineno">  729</span>&#160;   virtual std::<span class="keywordtype">string</span> DescURI() const APT_OVERRIDE {<span class="keywordflow">return</span> Target.<a class="code" href="classIndexTarget.xhtml#aaf8eea5037c53d12d3f31ab9e032712c">URI</a> + <span class="stringliteral">&quot;Index&quot;</span>;};</div>
<div class="line"><a name="l00730"></a><span class="lineno">  730</span>&#160;   <span class="keyword">virtual</span> std::string GetMetaKey() const APT_OVERRIDE;</div>
<div class="line"><a name="l00731"></a><span class="lineno">  731</span>&#160; </div>
<div class="line"><a name="l00742"></a><span class="lineno">  742</span>&#160;   <span class="keywordtype">bool</span> ParseDiffIndex(std::<span class="keywordtype">string</span> const &amp;IndexDiffFile);</div>
<div class="line"><a name="l00743"></a><span class="lineno">  743</span>&#160; </div>
<div class="line"><a name="l00754"></a><span class="lineno">  754</span>&#160;   <a class="code" href="classpkgAcqDiffIndex.xhtml">pkgAcqDiffIndex</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * const Owner, <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a> * const TransactionManager,</div>
<div class="line"><a name="l00755"></a><span class="lineno">  755</span>&#160;                   <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> const &amp;Target) APT_NONNULL(2, 3);</div>
<div class="line"><a name="l00756"></a><span class="lineno">  756</span>&#160;   virtual ~<a class="code" href="classpkgAcqDiffIndex.xhtml">pkgAcqDiffIndex</a>();</div>
<div class="line"><a name="l00757"></a><span class="lineno">  757</span>&#160; private:</div>
<div class="line"><a name="l00758"></a><span class="lineno">  758</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> QueueOnIMSHit() const;</div>
<div class="line"><a name="l00759"></a><span class="lineno">  759</span>&#160;};</div>
<div class="line"><a name="l00760"></a><span class="lineno">  760</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00772"></a><span class="lineno"><a class="line" href="classpkgAcqIndexMergeDiffs.xhtml">  772</a></span>&#160;class APT_HIDDEN <a class="code" href="classpkgAcqIndexMergeDiffs.xhtml">pkgAcqIndexMergeDiffs</a> : public <a class="code" href="classpkgAcqBaseIndex.xhtml">pkgAcqBaseIndex</a></div>
<div class="line"><a name="l00773"></a><span class="lineno">  773</span>&#160;{</div>
<div class="line"><a name="l00774"></a><span class="lineno">  774</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00775"></a><span class="lineno">  775</span>&#160; </div>
<div class="line"><a name="l00779"></a><span class="lineno"><a class="line" href="classpkgAcqIndexMergeDiffs.xhtml#acdf3472c9b75f32dae88032d42d1cb6c">  779</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classpkgAcqIndexMergeDiffs.xhtml#acdf3472c9b75f32dae88032d42d1cb6c">Debug</a>;</div>
<div class="line"><a name="l00780"></a><span class="lineno">  780</span>&#160; </div>
<div class="line"><a name="l00782"></a><span class="lineno">  782</span>&#160;   <span class="keyword">struct </span><a class="code" href="structDiffInfo.xhtml">DiffInfo</a> const patch;</div>
<div class="line"><a name="l00783"></a><span class="lineno">  783</span>&#160; </div>
<div class="line"><a name="l00785"></a><span class="lineno"><a class="line" href="classpkgAcqIndexMergeDiffs.xhtml#a43e66dcd95669139a8d0c05d42397c81">  785</a></span>&#160;   std::vector&lt;pkgAcqIndexMergeDiffs*&gt; <span class="keyword">const</span> * <span class="keyword">const</span> <a class="code" href="classpkgAcqIndexMergeDiffs.xhtml#a43e66dcd95669139a8d0c05d42397c81">allPatches</a>;</div>
<div class="line"><a name="l00786"></a><span class="lineno">  786</span>&#160; </div>
<div class="line"><a name="l00788"></a><span class="lineno"><a class="line" href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edf">  788</a></span>&#160;   <span class="keyword">enum</span> <a class="code" href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edf">DiffState</a></div>
<div class="line"><a name="l00789"></a><span class="lineno">  789</span>&#160;   {</div>
<div class="line"><a name="l00791"></a><span class="lineno"><a class="line" href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfaec3dbb53054bff15ce3c49882de26f84">  791</a></span>&#160;      <a class="code" href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfaec3dbb53054bff15ce3c49882de26f84">StateFetchDiff</a>,</div>
<div class="line"><a name="l00792"></a><span class="lineno">  792</span>&#160; </div>
<div class="line"><a name="l00794"></a><span class="lineno"><a class="line" href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfa85e95bc535755d0bcc1421d7daa90f0e">  794</a></span>&#160;      <a class="code" href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfa85e95bc535755d0bcc1421d7daa90f0e">StateApplyDiff</a>,</div>
<div class="line"><a name="l00795"></a><span class="lineno">  795</span>&#160; </div>
<div class="line"><a name="l00797"></a><span class="lineno"><a class="line" href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfaf07070e01a800f071bf4ed1ca3a1de4b">  797</a></span>&#160;      <a class="code" href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfaf07070e01a800f071bf4ed1ca3a1de4b">StateDoneDiff</a>,</div>
<div class="line"><a name="l00798"></a><span class="lineno">  798</span>&#160; </div>
<div class="line"><a name="l00800"></a><span class="lineno">  800</span>&#160;      StateErrorDiff</div>
<div class="line"><a name="l00801"></a><span class="lineno"><a class="line" href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfa7572a18639eec0dabf54802da60902fc">  801</a></span>&#160;   } State;</div>
<div class="line"><a name="l00802"></a><span class="lineno">  802</span>&#160; </div>
<div class="line"><a name="l00803"></a><span class="lineno">  803</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00809"></a><span class="lineno">  809</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Failed(std::string <span class="keyword">const</span> &amp;Message,<a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00810"></a><span class="lineno">  810</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Done(std::string <span class="keyword">const</span> &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> <span class="keyword">const</span> &amp;<a class="code" href="classHashes.xhtml">Hashes</a>,</div>
<div class="line"><a name="l00811"></a><span class="lineno">  811</span>&#160;         <a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00812"></a><span class="lineno">  812</span>&#160;   <span class="keyword">virtual</span> std::string Custom600Headers() const APT_OVERRIDE;</div>
<div class="line"><a name="l00813"></a><span class="lineno">  813</span>&#160;   virtual std::<span class="keywordtype">string</span> DescURI() const APT_OVERRIDE {<span class="keywordflow">return</span> Target.<a class="code" href="classIndexTarget.xhtml#aaf8eea5037c53d12d3f31ab9e032712c">URI</a> + <span class="stringliteral">&quot;Index&quot;</span>;};</div>
<div class="line"><a name="l00814"></a><span class="lineno">  814</span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classHashStringList.xhtml">HashStringList</a> GetExpectedHashes() const APT_OVERRIDE;</div>
<div class="line"><a name="l00815"></a><span class="lineno">  815</span>&#160;   virtual <span class="keywordtype">bool</span> HashesRequired() const APT_OVERRIDE;</div>
<div class="line"><a name="l00816"></a><span class="lineno">  816</span>&#160;   virtual <span class="keywordtype">bool</span> AcquireByHash() const APT_OVERRIDE;</div>
<div class="line"><a name="l00817"></a><span class="lineno">  817</span>&#160; </div>
<div class="line"><a name="l00830"></a><span class="lineno">  830</span>&#160;   <a class="code" href="classpkgAcqIndexMergeDiffs.xhtml">pkgAcqIndexMergeDiffs</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> *const Owner, <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a> *const TransactionManager,</div>
<div class="line"><a name="l00831"></a><span class="lineno">  831</span>&#160;                         <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> const &amp;Target, <a class="code" href="structDiffInfo.xhtml">DiffInfo</a> const &amp;patch,</div>
<div class="line"><a name="l00832"></a><span class="lineno">  832</span>&#160;                         std::vector&lt;<a class="code" href="classpkgAcqIndexMergeDiffs.xhtml">pkgAcqIndexMergeDiffs</a> *&gt; const *const allPatches) APT_NONNULL(2, 3, 6);</div>
<div class="line"><a name="l00833"></a><span class="lineno">  833</span>&#160;   virtual ~<a class="code" href="classpkgAcqIndexMergeDiffs.xhtml">pkgAcqIndexMergeDiffs</a>();</div>
<div class="line"><a name="l00834"></a><span class="lineno">  834</span>&#160;};</div>
<div class="line"><a name="l00835"></a><span class="lineno">  835</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00847"></a><span class="lineno"><a class="line" href="classpkgAcqIndexDiffs.xhtml">  847</a></span>&#160;class APT_HIDDEN <a class="code" href="classpkgAcqIndexDiffs.xhtml">pkgAcqIndexDiffs</a> : public <a class="code" href="classpkgAcqBaseIndex.xhtml">pkgAcqBaseIndex</a></div>
<div class="line"><a name="l00848"></a><span class="lineno">  848</span>&#160;{</div>
<div class="line"><a name="l00849"></a><span class="lineno">  849</span>&#160;   <span class="keyword">private</span>:</div>
<div class="line"><a name="l00850"></a><span class="lineno">  850</span>&#160; </div>
<div class="line"><a name="l00860"></a><span class="lineno">  860</span>&#160;   APT_HIDDEN <span class="keywordtype">bool</span> QueueNextDiff();</div>
<div class="line"><a name="l00861"></a><span class="lineno">  861</span>&#160; </div>
<div class="line"><a name="l00873"></a><span class="lineno">  873</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> Finish(<span class="keywordtype">bool</span> <span class="keyword">const</span> allDone=<span class="keyword">false</span>);</div>
<div class="line"><a name="l00874"></a><span class="lineno">  874</span>&#160; </div>
<div class="line"><a name="l00875"></a><span class="lineno">  875</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00876"></a><span class="lineno">  876</span>&#160; </div>
<div class="line"><a name="l00880"></a><span class="lineno"><a class="line" href="classpkgAcqIndexDiffs.xhtml#acdf3472c9b75f32dae88032d42d1cb6c">  880</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classpkgAcqIndexDiffs.xhtml#acdf3472c9b75f32dae88032d42d1cb6c">Debug</a>;</div>
<div class="line"><a name="l00881"></a><span class="lineno">  881</span>&#160; </div>
<div class="line"><a name="l00890"></a><span class="lineno"><a class="line" href="classpkgAcqIndexDiffs.xhtml#a6822b4355d68d4683938302c3c4bee8b">  890</a></span>&#160;   std::vector&lt;DiffInfo&gt; <a class="code" href="classpkgAcqIndexDiffs.xhtml#a6822b4355d68d4683938302c3c4bee8b">available_patches</a>;</div>
<div class="line"><a name="l00891"></a><span class="lineno">  891</span>&#160; </div>
<div class="line"><a name="l00893"></a><span class="lineno"><a class="line" href="classpkgAcqIndexDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edf">  893</a></span>&#160;   <span class="keyword">enum</span> <a class="code" href="classpkgAcqIndexDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edf">DiffState</a></div>
<div class="line"><a name="l00894"></a><span class="lineno">  894</span>&#160;   {</div>
<div class="line"><a name="l00896"></a><span class="lineno"><a class="line" href="classpkgAcqIndexDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfaec3dbb53054bff15ce3c49882de26f84">  896</a></span>&#160;         <a class="code" href="classpkgAcqIndexDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfaec3dbb53054bff15ce3c49882de26f84">StateFetchDiff</a>,</div>
<div class="line"><a name="l00897"></a><span class="lineno">  897</span>&#160; </div>
<div class="line"><a name="l00899"></a><span class="lineno">  899</span>&#160;         StateApplyDiff</div>
<div class="line"><a name="l00900"></a><span class="lineno"><a class="line" href="classpkgAcqIndexDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfa85e95bc535755d0bcc1421d7daa90f0e">  900</a></span>&#160;   } State;</div>
<div class="line"><a name="l00901"></a><span class="lineno">  901</span>&#160; </div>
<div class="line"><a name="l00902"></a><span class="lineno">  902</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00903"></a><span class="lineno">  903</span>&#160; </div>
<div class="line"><a name="l00909"></a><span class="lineno">  909</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Failed(std::string <span class="keyword">const</span> &amp;Message,<a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00910"></a><span class="lineno">  910</span>&#160; </div>
<div class="line"><a name="l00911"></a><span class="lineno">  911</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Done(std::string <span class="keyword">const</span> &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> <span class="keyword">const</span> &amp;<a class="code" href="classHashes.xhtml">Hashes</a>,</div>
<div class="line"><a name="l00912"></a><span class="lineno">  912</span>&#160;                     <a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00913"></a><span class="lineno">  913</span>&#160;   <span class="keyword">virtual</span> std::string Custom600Headers() const APT_OVERRIDE;</div>
<div class="line"><a name="l00914"></a><span class="lineno">  914</span>&#160;   virtual std::<span class="keywordtype">string</span> DescURI() const APT_OVERRIDE {<span class="keywordflow">return</span> Target.URI + <span class="stringliteral">&quot;IndexDiffs&quot;</span>;};</div>
<div class="line"><a name="l00915"></a><span class="lineno">  915</span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classHashStringList.xhtml">HashStringList</a> GetExpectedHashes() const APT_OVERRIDE;</div>
<div class="line"><a name="l00916"></a><span class="lineno">  916</span>&#160;   virtual <span class="keywordtype">bool</span> HashesRequired() const APT_OVERRIDE;</div>
<div class="line"><a name="l00917"></a><span class="lineno">  917</span>&#160;   virtual <span class="keywordtype">bool</span> AcquireByHash() const APT_OVERRIDE;</div>
<div class="line"><a name="l00918"></a><span class="lineno">  918</span>&#160; </div>
<div class="line"><a name="l00932"></a><span class="lineno">  932</span>&#160;   <a class="code" href="classpkgAcqIndexDiffs.xhtml">pkgAcqIndexDiffs</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> *const Owner, <a class="code" href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a> *const TransactionManager,</div>
<div class="line"><a name="l00933"></a><span class="lineno">  933</span>&#160;                    <a class="code" href="classIndexTarget.xhtml">IndexTarget</a> const &amp;Target,</div>
<div class="line"><a name="l00934"></a><span class="lineno">  934</span>&#160;                    std::vector&lt;<a class="code" href="structDiffInfo.xhtml">DiffInfo</a>&gt; const &amp;diffs = std::vector&lt;<a class="code" href="structDiffInfo.xhtml">DiffInfo</a>&gt;()) APT_NONNULL(2, 3);</div>
<div class="line"><a name="l00935"></a><span class="lineno">  935</span>&#160;   virtual ~<a class="code" href="classpkgAcqIndexDiffs.xhtml">pkgAcqIndexDiffs</a>();</div>
<div class="line"><a name="l00936"></a><span class="lineno">  936</span>&#160;};</div>
<div class="line"><a name="l00937"></a><span class="lineno">  937</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00943"></a><span class="lineno"><a class="line" href="classpkgAcqArchive.xhtml">  943</a></span>&#160;class APT_PUBLIC <a class="code" href="classpkgAcqArchive.xhtml">pkgAcqArchive</a> : public <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::Item</div>
<div class="line"><a name="l00944"></a><span class="lineno">  944</span>&#160;{</div>
<div class="line"><a name="l00945"></a><span class="lineno">  945</span>&#160;   <span class="keywordtype">void</span> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00946"></a><span class="lineno">  946</span>&#160; </div>
<div class="line"><a name="l00947"></a><span class="lineno">  947</span>&#160;   <span class="keywordtype">bool</span> LocalSource;</div>
<div class="line"><a name="l00948"></a><span class="lineno">  948</span>&#160;   <a class="code" href="classHashStringList.xhtml">HashStringList</a> ExpectedHashes;</div>
<div class="line"><a name="l00949"></a><span class="lineno">  949</span>&#160; </div>
<div class="line"><a name="l00950"></a><span class="lineno">  950</span>&#160;   <span class="keyword">protected</span>:</div>
<div class="line"><a name="l00952"></a><span class="lineno"><a class="line" href="classpkgAcqArchive.xhtml#a0975e7488587b7ba9f8a7a92d2c7ef58">  952</a></span>&#160;   pkgCache::VerIterator <a class="code" href="classpkgAcqArchive.xhtml#a0975e7488587b7ba9f8a7a92d2c7ef58">Version</a>;</div>
<div class="line"><a name="l00953"></a><span class="lineno">  953</span>&#160; </div>
<div class="line"><a name="l00957"></a><span class="lineno"><a class="line" href="classpkgAcqArchive.xhtml#ae1a860799a1e38f21c90468010b59106">  957</a></span>&#160;   <a class="code" href="classpkgSourceList.xhtml">pkgSourceList</a> *<a class="code" href="classpkgAcqArchive.xhtml#ae1a860799a1e38f21c90468010b59106">Sources</a>;</div>
<div class="line"><a name="l00958"></a><span class="lineno">  958</span>&#160; </div>
<div class="line"><a name="l00962"></a><span class="lineno"><a class="line" href="classpkgAcqArchive.xhtml#a048ee963fb5e948ec3599f22f6ad53ec">  962</a></span>&#160;   <a class="code" href="classpkgRecords.xhtml">pkgRecords</a> *<a class="code" href="classpkgAcqArchive.xhtml#a048ee963fb5e948ec3599f22f6ad53ec">Recs</a>;</div>
<div class="line"><a name="l00963"></a><span class="lineno">  963</span>&#160; </div>
<div class="line"><a name="l00967"></a><span class="lineno"><a class="line" href="classpkgAcqArchive.xhtml#a661aca9bffbae2b69b13c0d87e6150bc">  967</a></span>&#160;   std::string &amp;<a class="code" href="classpkgAcqArchive.xhtml#a661aca9bffbae2b69b13c0d87e6150bc">StoreFilename</a>;</div>
<div class="line"><a name="l00968"></a><span class="lineno">  968</span>&#160; </div>
<div class="line"><a name="l00972"></a><span class="lineno"><a class="line" href="classpkgAcqArchive.xhtml#a224b67941df4d54b46be8dd05390428f">  972</a></span>&#160;   <span class="keywordtype">bool</span> <a class="code" href="classpkgAcqArchive.xhtml#a224b67941df4d54b46be8dd05390428f">Trusted</a>;</div>
<div class="line"><a name="l00973"></a><span class="lineno">  973</span>&#160; </div>
<div class="line"><a name="l00975"></a><span class="lineno">  975</span>&#160;   <span class="keywordtype">bool</span> QueueNext();</div>
<div class="line"><a name="l00976"></a><span class="lineno">  976</span>&#160; </div>
<div class="line"><a name="l00978"></a><span class="lineno">  978</span>&#160;   <span class="keyword">virtual</span> std::string GetFinalFilename() const APT_OVERRIDE;</div>
<div class="line"><a name="l00979"></a><span class="lineno">  979</span>&#160; </div>
<div class="line"><a name="l00980"></a><span class="lineno">  980</span>&#160;   public:</div>
<div class="line"><a name="l00981"></a><span class="lineno">  981</span>&#160; </div>
<div class="line"><a name="l00982"></a><span class="lineno">  982</span>&#160;   virtual <span class="keywordtype">void</span> Failed(std::<span class="keywordtype">string</span> const &amp;Message,<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const * const Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00983"></a><span class="lineno">  983</span>&#160;   virtual <span class="keywordtype">void</span> Done(std::<span class="keywordtype">string</span> const &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> const &amp;<a class="code" href="classHashes.xhtml">Hashes</a>,</div>
<div class="line"><a name="l00984"></a><span class="lineno">  984</span>&#160;                     <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::MethodConfig const * const Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l00985"></a><span class="lineno">  985</span>&#160;   virtual std::<span class="keywordtype">string</span> DescURI() const APT_OVERRIDE;</div>
<div class="line"><a name="l00986"></a><span class="lineno">  986</span>&#160;   virtual std::<span class="keywordtype">string</span> ShortDesc() const APT_OVERRIDE;</div>
<div class="line"><a name="l00987"></a><span class="lineno">  987</span>&#160;   virtual <span class="keywordtype">void</span> Finished() APT_OVERRIDE;</div>
<div class="line"><a name="l00988"></a><span class="lineno">  988</span>&#160;   virtual <span class="keywordtype">bool</span> IsTrusted() const APT_OVERRIDE;</div>
<div class="line"><a name="l00989"></a><span class="lineno">  989</span>&#160;   virtual <a class="code" href="classHashStringList.xhtml">HashStringList</a> GetExpectedHashes() const APT_OVERRIDE;</div>
<div class="line"><a name="l00990"></a><span class="lineno">  990</span>&#160;   virtual <span class="keywordtype">bool</span> HashesRequired() const APT_OVERRIDE;</div>
<div class="line"><a name="l00991"></a><span class="lineno">  991</span>&#160; </div>
<div class="line"><a name="l01010"></a><span class="lineno"> 1010</span>&#160;   <a class="code" href="classpkgAcqArchive.xhtml">pkgAcqArchive</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * const Owner,<a class="code" href="classpkgSourceList.xhtml">pkgSourceList</a> * const Sources,</div>
<div class="line"><a name="l01011"></a><span class="lineno"> 1011</span>&#160;                 <a class="code" href="classpkgRecords.xhtml">pkgRecords</a> * const Recs,<a class="code" href="classpkgCache.xhtml">pkgCache</a>::VerIterator const &amp;Version,</div>
<div class="line"><a name="l01012"></a><span class="lineno"> 1012</span>&#160;                 std::<span class="keywordtype">string</span> &amp;StoreFilename);</div>
<div class="line"><a name="l01013"></a><span class="lineno"> 1013</span>&#160;   virtual ~<a class="code" href="classpkgAcqArchive.xhtml">pkgAcqArchive</a>();</div>
<div class="line"><a name="l01014"></a><span class="lineno"> 1014</span>&#160;};</div>
<div class="line"><a name="l01015"></a><span class="lineno"> 1015</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l01021"></a><span class="lineno"><a class="line" href="classpkgAcqChangelog.xhtml"> 1021</a></span>&#160;class APT_PUBLIC <a class="code" href="classpkgAcqChangelog.xhtml">pkgAcqChangelog</a> : public <a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>::Item</div>
<div class="line"><a name="l01022"></a><span class="lineno"> 1022</span>&#160;{</div>
<div class="line"><a name="l01023"></a><span class="lineno"> 1023</span>&#160;   <span class="keyword">class </span><a class="code" href="classpkgAcqChangelog_1_1Private.xhtml">Private</a>;</div>
<div class="line"><a name="l01024"></a><span class="lineno"> 1024</span>&#160;   <a class="code" href="classpkgAcqChangelog_1_1Private.xhtml">Private</a> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l01025"></a><span class="lineno"> 1025</span>&#160;   std::string TemporaryDirectory;</div>
<div class="line"><a name="l01026"></a><span class="lineno"> 1026</span>&#160;   std::string <span class="keyword">const</span> SrcName;</div>
<div class="line"><a name="l01027"></a><span class="lineno"> 1027</span>&#160;   std::string <span class="keyword">const</span> SrcVersion;</div>
<div class="line"><a name="l01028"></a><span class="lineno"> 1028</span>&#160; </div>
<div class="line"><a name="l01029"></a><span class="lineno"> 1029</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l01030"></a><span class="lineno"> 1030</span>&#160;   <span class="comment">// we will never have hashes for changelogs.</span></div>
<div class="line"><a name="l01031"></a><span class="lineno"> 1031</span>&#160;   <span class="comment">// If you need verified ones, download the deb and extract the changelog.</span></div>
<div class="line"><a name="l01032"></a><span class="lineno"> 1032</span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classHashStringList.xhtml">HashStringList</a> GetExpectedHashes() <span class="keyword">const</span> APT_OVERRIDE { <span class="keywordflow">return</span> <a class="code" href="classHashStringList.xhtml">HashStringList</a>(); }</div>
<div class="line"><a name="l01033"></a><span class="lineno"> 1033</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> HashesRequired() <span class="keyword">const</span> APT_OVERRIDE { <span class="keywordflow">return</span> <span class="keyword">false</span>; }</div>
<div class="line"><a name="l01034"></a><span class="lineno"> 1034</span>&#160; </div>
<div class="line"><a name="l01035"></a><span class="lineno"> 1035</span>&#160;   <span class="comment">// Specialized action members</span></div>
<div class="line"><a name="l01036"></a><span class="lineno"> 1036</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Failed(std::string <span class="keyword">const</span> &amp;Message,<a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l01037"></a><span class="lineno"> 1037</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Done(std::string <span class="keyword">const</span> &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> <span class="keyword">const</span> &amp;CalcHashes,</div>
<div class="line"><a name="l01038"></a><span class="lineno"> 1038</span>&#160;                     <a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l01039"></a><span class="lineno"> 1039</span>&#160;   <span class="keyword">virtual</span> std::string DescURI() <span class="keyword">const</span> APT_OVERRIDE {<span class="keywordflow">return</span> Desc.URI;};</div>
<div class="line"><a name="l01040"></a><span class="lineno"> 1040</span>&#160; </div>
<div class="line"><a name="l01046"></a><span class="lineno"> 1046</span>&#160;   <span class="keyword">static</span> std::string <a class="code" href="classURI.xhtml">URI</a>(pkgCache::VerIterator <span class="keyword">const</span> &amp;Ver);</div>
<div class="line"><a name="l01047"></a><span class="lineno"> 1047</span>&#160; </div>
<div class="line"><a name="l01056"></a><span class="lineno"> 1056</span>&#160;   <span class="keyword">static</span> std::string <a class="code" href="classURI.xhtml">URI</a>(pkgCache::RlsFileIterator <span class="keyword">const</span> &amp;Rls,</div>
<div class="line"><a name="l01057"></a><span class="lineno"> 1057</span>&#160;         <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> Component, <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> SrcName,</div>
<div class="line"><a name="l01058"></a><span class="lineno"> 1058</span>&#160;         <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> SrcVersion);</div>
<div class="line"><a name="l01059"></a><span class="lineno"> 1059</span>&#160; </div>
<div class="line"><a name="l01068"></a><span class="lineno"> 1068</span>&#160;   <span class="keyword">static</span> std::string <a class="code" href="classURI.xhtml">URI</a>(std::string <span class="keyword">const</span> &amp;Template,</div>
<div class="line"><a name="l01069"></a><span class="lineno"> 1069</span>&#160;         <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> Component, <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> SrcName,</div>
<div class="line"><a name="l01070"></a><span class="lineno"> 1070</span>&#160;         <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> SrcVersion);</div>
<div class="line"><a name="l01071"></a><span class="lineno"> 1071</span>&#160; </div>
<div class="line"><a name="l01077"></a><span class="lineno"> 1077</span>&#160;   <span class="keyword">static</span> std::string URITemplate(pkgCache::RlsFileIterator <span class="keyword">const</span> &amp;Rls);</div>
<div class="line"><a name="l01078"></a><span class="lineno"> 1078</span>&#160; </div>
<div class="line"><a name="l01089"></a><span class="lineno"> 1089</span>&#160;   <a class="code" href="classpkgAcqChangelog.xhtml">pkgAcqChangelog</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * <span class="keyword">const</span> Owner, pkgCache::VerIterator <span class="keyword">const</span> &amp;Ver,</div>
<div class="line"><a name="l01090"></a><span class="lineno"> 1090</span>&#160;         std::string <span class="keyword">const</span> &amp;DestDir=<span class="stringliteral">&quot;&quot;</span>, std::string <span class="keyword">const</span> &amp;DestFilename=<span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l01091"></a><span class="lineno"> 1091</span>&#160; </div>
<div class="line"><a name="l01105"></a><span class="lineno"> 1105</span>&#160;   <a class="code" href="classpkgAcqChangelog.xhtml">pkgAcqChangelog</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * <span class="keyword">const</span> Owner, pkgCache::RlsFileIterator <span class="keyword">const</span> &amp;Rls,</div>
<div class="line"><a name="l01106"></a><span class="lineno"> 1106</span>&#160;         <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> Component, <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> SrcName, <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> SrcVersion,</div>
<div class="line"><a name="l01107"></a><span class="lineno"> 1107</span>&#160;         std::string <span class="keyword">const</span> &amp;DestDir=<span class="stringliteral">&quot;&quot;</span>, std::string <span class="keyword">const</span> &amp;DestFilename=<span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l01108"></a><span class="lineno"> 1108</span>&#160; </div>
<div class="line"><a name="l01121"></a><span class="lineno"> 1121</span>&#160;   <a class="code" href="classpkgAcqChangelog.xhtml">pkgAcqChangelog</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * <span class="keyword">const</span> Owner, std::string <span class="keyword">const</span> &amp;<a class="code" href="classURI.xhtml">URI</a>,</div>
<div class="line"><a name="l01122"></a><span class="lineno"> 1122</span>&#160;         <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> SrcName, <span class="keywordtype">char</span> <span class="keyword">const</span> * <span class="keyword">const</span> SrcVersion,</div>
<div class="line"><a name="l01123"></a><span class="lineno"> 1123</span>&#160;         std::string <span class="keyword">const</span> &amp;DestDir=<span class="stringliteral">&quot;&quot;</span>, std::string <span class="keyword">const</span> &amp;DestFilename=<span class="stringliteral">&quot;&quot;</span>);</div>
<div class="line"><a name="l01124"></a><span class="lineno"> 1124</span>&#160; </div>
<div class="line"><a name="l01125"></a><span class="lineno"> 1125</span>&#160;   <span class="keyword">virtual</span> ~<a class="code" href="classpkgAcqChangelog.xhtml">pkgAcqChangelog</a>();</div>
<div class="line"><a name="l01126"></a><span class="lineno"> 1126</span>&#160; </div>
<div class="line"><a name="l01127"></a><span class="lineno"> 1127</span>&#160;<span class="keyword">private</span>:</div>
<div class="line"><a name="l01128"></a><span class="lineno"> 1128</span>&#160;   APT_HIDDEN <span class="keywordtype">void</span> Init(std::string <span class="keyword">const</span> &amp;DestDir, std::string <span class="keyword">const</span> &amp;DestFilename);</div>
<div class="line"><a name="l01129"></a><span class="lineno"> 1129</span>&#160;};</div>
<div class="line"><a name="l01130"></a><span class="lineno"> 1130</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l01137"></a><span class="lineno"><a class="line" href="classpkgAcqFile.xhtml"> 1137</a></span>&#160;<span class="keyword">class </span>APT_PUBLIC <a class="code" href="classpkgAcqFile.xhtml">pkgAcqFile</a> : <span class="keyword">public</span> pkgAcquire::Item</div>
<div class="line"><a name="l01138"></a><span class="lineno"> 1138</span>&#160;{</div>
<div class="line"><a name="l01139"></a><span class="lineno"> 1139</span>&#160;   <span class="keywordtype">void</span> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l01140"></a><span class="lineno"> 1140</span>&#160; </div>
<div class="line"><a name="l01142"></a><span class="lineno"> 1142</span>&#160;   <span class="keywordtype">bool</span> IsIndexFile;</div>
<div class="line"><a name="l01143"></a><span class="lineno"> 1143</span>&#160; </div>
<div class="line"><a name="l01144"></a><span class="lineno"> 1144</span>&#160;   <a class="code" href="classHashStringList.xhtml">HashStringList</a> <span class="keyword">const</span> ExpectedHashes;</div>
<div class="line"><a name="l01145"></a><span class="lineno"> 1145</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l01146"></a><span class="lineno"> 1146</span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classHashStringList.xhtml">HashStringList</a> GetExpectedHashes() <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l01147"></a><span class="lineno"> 1147</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> HashesRequired() <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l01148"></a><span class="lineno"> 1148</span>&#160; </div>
<div class="line"><a name="l01149"></a><span class="lineno"> 1149</span>&#160;   <span class="comment">// Specialized action members</span></div>
<div class="line"><a name="l01150"></a><span class="lineno"> 1150</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Done(std::string <span class="keyword">const</span> &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> <span class="keyword">const</span> &amp;CalcHashes,</div>
<div class="line"><a name="l01151"></a><span class="lineno"> 1151</span>&#160;                     <a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> * <span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l01152"></a><span class="lineno"> 1152</span>&#160;   <span class="keyword">virtual</span> std::string DescURI() <span class="keyword">const</span> APT_OVERRIDE {<span class="keywordflow">return</span> Desc.URI;};</div>
<div class="line"><a name="l01153"></a><span class="lineno"> 1153</span>&#160;   <span class="keyword">virtual</span> std::string Custom600Headers() <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l01154"></a><span class="lineno"> 1154</span>&#160; </div>
<div class="line"><a name="l01186"></a><span class="lineno"> 1186</span>&#160;   <a class="code" href="classpkgAcqFile.xhtml">pkgAcqFile</a>(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> * <span class="keyword">const</span> Owner, std::string <span class="keyword">const</span> &amp;<a class="code" href="classURI.xhtml">URI</a>, <a class="code" href="classHashStringList.xhtml">HashStringList</a> <span class="keyword">const</span> &amp;<a class="code" href="classHashes.xhtml">Hashes</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> <span class="keyword">const</span> Size,</div>
<div class="line"><a name="l01187"></a><span class="lineno"> 1187</span>&#160;              std::string <span class="keyword">const</span> &amp;Desc, std::string <span class="keyword">const</span> &amp;ShortDesc,</div>
<div class="line"><a name="l01188"></a><span class="lineno"> 1188</span>&#160;              std::string <span class="keyword">const</span> &amp;DestDir=<span class="stringliteral">&quot;&quot;</span>, std::string <span class="keyword">const</span> &amp;DestFilename=<span class="stringliteral">&quot;&quot;</span>,</div>
<div class="line"><a name="l01189"></a><span class="lineno"> 1189</span>&#160;              <span class="keywordtype">bool</span> <span class="keyword">const</span> IsIndexFile=<span class="keyword">false</span>);</div>
<div class="line"><a name="l01190"></a><span class="lineno"> 1190</span>&#160;   <span class="keyword">virtual</span> ~<a class="code" href="classpkgAcqFile.xhtml">pkgAcqFile</a>();</div>
<div class="line"><a name="l01191"></a><span class="lineno"> 1191</span>&#160;};</div>
<div class="line"><a name="l01192"></a><span class="lineno"> 1192</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l01193"></a><span class="lineno"><a class="line" href="classpkgAcqAuxFile.xhtml"> 1193</a></span>&#160;<span class="keyword">class </span>APT_HIDDEN <a class="code" href="classpkgAcqAuxFile.xhtml">pkgAcqAuxFile</a> : <span class="keyword">public</span> <a class="code" href="classpkgAcqFile.xhtml">pkgAcqFile</a> <span class="comment">/*{{{*/</span></div>
<div class="line"><a name="l01194"></a><span class="lineno"> 1194</span>&#160;{</div>
<div class="line"><a name="l01195"></a><span class="lineno"> 1195</span>&#160;   pkgAcquire::Item *<span class="keyword">const</span> Owner;</div>
<div class="line"><a name="l01196"></a><span class="lineno"> 1196</span>&#160;   <a class="code" href="classpkgAcquire.xhtml#ac0cf8a483d82d1372c6f7d499937860c">pkgAcquire::Worker</a> *<span class="keyword">const</span> Worker;</div>
<div class="line"><a name="l01197"></a><span class="lineno"> 1197</span>&#160;   <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> MaximumSize;</div>
<div class="line"><a name="l01198"></a><span class="lineno"> 1198</span>&#160; </div>
<div class="line"><a name="l01199"></a><span class="lineno"> 1199</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l01200"></a><span class="lineno"> 1200</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Failed(std::string <span class="keyword">const</span> &amp;Message, <a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> *<span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l01201"></a><span class="lineno"> 1201</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Done(std::string <span class="keyword">const</span> &amp;Message, <a class="code" href="classHashStringList.xhtml">HashStringList</a> <span class="keyword">const</span> &amp;CalcHashes,</div>
<div class="line"><a name="l01202"></a><span class="lineno"> 1202</span>&#160;                     <a class="code" href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a> <span class="keyword">const</span> *<span class="keyword">const</span> Cnf) APT_OVERRIDE;</div>
<div class="line"><a name="l01203"></a><span class="lineno"> 1203</span>&#160;   <span class="keyword">virtual</span> std::string Custom600Headers() <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l01204"></a><span class="lineno"> 1204</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">void</span> Finished() APT_OVERRIDE;</div>
<div class="line"><a name="l01205"></a><span class="lineno"> 1205</span>&#160; </div>
<div class="line"><a name="l01206"></a><span class="lineno"> 1206</span>&#160;   <a class="code" href="classpkgAcqAuxFile.xhtml">pkgAcqAuxFile</a>(pkgAcquire::Item *<span class="keyword">const</span> Owner, <a class="code" href="classpkgAcquire.xhtml#ac0cf8a483d82d1372c6f7d499937860c">pkgAcquire::Worker</a> *<span class="keyword">const</span> Worker,</div>
<div class="line"><a name="l01207"></a><span class="lineno"> 1207</span>&#160;                 std::string <span class="keyword">const</span> &amp;ShortDesc, std::string <span class="keyword">const</span> &amp;Desc, std::string <span class="keyword">const</span> &amp;<a class="code" href="classURI.xhtml">URI</a>,</div>
<div class="line"><a name="l01208"></a><span class="lineno"> 1208</span>&#160;                 <a class="code" href="classHashStringList.xhtml">HashStringList</a> <span class="keyword">const</span> &amp;<a class="code" href="classHashes.xhtml">Hashes</a>, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> <span class="keyword">const</span> MaximumSize);</div>
<div class="line"><a name="l01209"></a><span class="lineno"> 1209</span>&#160;   <span class="keyword">virtual</span> ~<a class="code" href="classpkgAcqAuxFile.xhtml">pkgAcqAuxFile</a>();</div>
<div class="line"><a name="l01210"></a><span class="lineno"> 1210</span>&#160;};</div>
<div class="line"><a name="l01211"></a><span class="lineno"> 1211</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l01214"></a><span class="lineno"> 1214</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="aacquire_8h_xhtml"><div class="ttname"><a href="acquire_8h.xhtml">acquire.h</a></div></div>
<div class="ttc" id="aclassHashStringList_xhtml"><div class="ttname"><a href="classHashStringList.xhtml">HashStringList</a></div><div class="ttdef"><b>Definition:</b> hashes.h:65</div></div>
<div class="ttc" id="aclassHashes_xhtml"><div class="ttname"><a href="classHashes.xhtml">Hashes</a></div><div class="ttdef"><b>Definition:</b> hashes.h:170</div></div>
<div class="ttc" id="aclassIndexTarget_xhtml"><div class="ttname"><a href="classIndexTarget.xhtml">IndexTarget</a></div><div class="ttdoc">Information about an index file.</div><div class="ttdef"><b>Definition:</b> indexfile.h:39</div></div>
<div class="ttc" id="aclassIndexTarget_xhtml_aaf8eea5037c53d12d3f31ab9e032712c"><div class="ttname"><a href="classIndexTarget.xhtml#aaf8eea5037c53d12d3f31ab9e032712c">IndexTarget::URI</a></div><div class="ttdeci">std::string URI</div><div class="ttdoc">A URI from which the index file can be downloaded.</div><div class="ttdef"><b>Definition:</b> indexfile.h:42</div></div>
<div class="ttc" id="aclassURI_xhtml"><div class="ttname"><a href="classURI.xhtml">URI</a></div><div class="ttdef"><b>Definition:</b> strutl.h:193</div></div>
<div class="ttc" id="aclassWeakPointable_xhtml"><div class="ttname"><a href="classWeakPointable.xhtml">WeakPointable</a></div><div class="ttdef"><b>Definition:</b> weakptr.h:34</div></div>
<div class="ttc" id="aclassmetaIndex_xhtml"><div class="ttname"><a href="classmetaIndex.xhtml">metaIndex</a></div><div class="ttdef"><b>Definition:</b> metaindex.h:21</div></div>
<div class="ttc" id="aclasspkgAcqArchive_xhtml"><div class="ttname"><a href="classpkgAcqArchive.xhtml">pkgAcqArchive</a></div><div class="ttdoc">An item that is responsible for fetching a package file. {{{.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:944</div></div>
<div class="ttc" id="aclasspkgAcqArchive_xhtml_a048ee963fb5e948ec3599f22f6ad53ec"><div class="ttname"><a href="classpkgAcqArchive.xhtml#a048ee963fb5e948ec3599f22f6ad53ec">pkgAcqArchive::Recs</a></div><div class="ttdeci">pkgRecords * Recs</div><div class="ttdoc">A package records object, used to look up the file corresponding to each version of the package.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:962</div></div>
<div class="ttc" id="aclasspkgAcqArchive_xhtml_a0975e7488587b7ba9f8a7a92d2c7ef58"><div class="ttname"><a href="classpkgAcqArchive.xhtml#a0975e7488587b7ba9f8a7a92d2c7ef58">pkgAcqArchive::Version</a></div><div class="ttdeci">pkgCache::VerIterator Version</div><div class="ttdoc">The package version being fetched.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:952</div></div>
<div class="ttc" id="aclasspkgAcqArchive_xhtml_a224b67941df4d54b46be8dd05390428f"><div class="ttname"><a href="classpkgAcqArchive.xhtml#a224b67941df4d54b46be8dd05390428f">pkgAcqArchive::Trusted</a></div><div class="ttdeci">bool Trusted</div><div class="ttdoc">true if this version file is being downloaded from a trusted source.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:972</div></div>
<div class="ttc" id="aclasspkgAcqArchive_xhtml_a661aca9bffbae2b69b13c0d87e6150bc"><div class="ttname"><a href="classpkgAcqArchive.xhtml#a661aca9bffbae2b69b13c0d87e6150bc">pkgAcqArchive::StoreFilename</a></div><div class="ttdeci">std::string &amp; StoreFilename</div><div class="ttdoc">A location in which the actual filename of the package should be stored.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:967</div></div>
<div class="ttc" id="aclasspkgAcqArchive_xhtml_ae1a860799a1e38f21c90468010b59106"><div class="ttname"><a href="classpkgAcqArchive.xhtml#ae1a860799a1e38f21c90468010b59106">pkgAcqArchive::Sources</a></div><div class="ttdeci">pkgSourceList * Sources</div><div class="ttdoc">The list of sources from which to pick archives to download this package from.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:957</div></div>
<div class="ttc" id="aclasspkgAcqAuxFile_xhtml"><div class="ttname"><a href="classpkgAcqAuxFile.xhtml">pkgAcqAuxFile</a></div><div class="ttdef"><b>Definition:</b> acquire-item.h:1194</div></div>
<div class="ttc" id="aclasspkgAcqBaseIndex_xhtml"><div class="ttname"><a href="classpkgAcqBaseIndex.xhtml">pkgAcqBaseIndex</a></div><div class="ttdoc">Common base class for all classes that deal with fetching indexes {{{.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:597</div></div>
<div class="ttc" id="aclasspkgAcqChangelog_1_1Private_xhtml"><div class="ttname"><a href="classpkgAcqChangelog_1_1Private.xhtml">pkgAcqChangelog::Private</a></div><div class="ttdef"><b>Definition:</b> acquire-item.cc:3591</div></div>
<div class="ttc" id="aclasspkgAcqChangelog_xhtml"><div class="ttname"><a href="classpkgAcqChangelog.xhtml">pkgAcqChangelog</a></div><div class="ttdoc">Retrieve the changelog for the given version {{{.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:1022</div></div>
<div class="ttc" id="aclasspkgAcqDiffIndex_xhtml"><div class="ttname"><a href="classpkgAcqDiffIndex.xhtml">pkgAcqDiffIndex</a></div><div class="ttdoc">An item that is responsible for fetching an index file of {{{ package list diffs and starting the pac...</div><div class="ttdef"><b>Definition:</b> acquire-item.h:707</div></div>
<div class="ttc" id="aclasspkgAcqDiffIndex_xhtml_acdf3472c9b75f32dae88032d42d1cb6c"><div class="ttname"><a href="classpkgAcqDiffIndex.xhtml#acdf3472c9b75f32dae88032d42d1cb6c">pkgAcqDiffIndex::Debug</a></div><div class="ttdeci">bool Debug</div><div class="ttdoc">If true, debugging information will be written to std::clog.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:715</div></div>
<div class="ttc" id="aclasspkgAcqFile_xhtml"><div class="ttname"><a href="classpkgAcqFile.xhtml">pkgAcqFile</a></div><div class="ttdoc">Retrieve an arbitrary file to the current directory. {{{.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:1138</div></div>
<div class="ttc" id="aclasspkgAcqIndexDiffs_xhtml"><div class="ttname"><a href="classpkgAcqIndexDiffs.xhtml">pkgAcqIndexDiffs</a></div><div class="ttdoc">An item that is responsible for fetching server-merge patches {{{ that need to be applied to a given ...</div><div class="ttdef"><b>Definition:</b> acquire-item.h:848</div></div>
<div class="ttc" id="aclasspkgAcqIndexDiffs_xhtml_a6822b4355d68d4683938302c3c4bee8b"><div class="ttname"><a href="classpkgAcqIndexDiffs.xhtml#a6822b4355d68d4683938302c3c4bee8b">pkgAcqIndexDiffs::available_patches</a></div><div class="ttdeci">std::vector&lt; DiffInfo &gt; available_patches</div><div class="ttdef"><b>Definition:</b> acquire-item.h:890</div></div>
<div class="ttc" id="aclasspkgAcqIndexDiffs_xhtml_ab2898413cf073f60c8ea280c811c3edf"><div class="ttname"><a href="classpkgAcqIndexDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edf">pkgAcqIndexDiffs::DiffState</a></div><div class="ttdeci">DiffState</div><div class="ttdef"><b>Definition:</b> acquire-item.h:894</div></div>
<div class="ttc" id="aclasspkgAcqIndexDiffs_xhtml_ab2898413cf073f60c8ea280c811c3edfaec3dbb53054bff15ce3c49882de26f84"><div class="ttname"><a href="classpkgAcqIndexDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfaec3dbb53054bff15ce3c49882de26f84">pkgAcqIndexDiffs::StateFetchDiff</a></div><div class="ttdeci">@ StateFetchDiff</div><div class="ttdoc">The diff is currently being fetched.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:896</div></div>
<div class="ttc" id="aclasspkgAcqIndexDiffs_xhtml_acdf3472c9b75f32dae88032d42d1cb6c"><div class="ttname"><a href="classpkgAcqIndexDiffs.xhtml#acdf3472c9b75f32dae88032d42d1cb6c">pkgAcqIndexDiffs::Debug</a></div><div class="ttdeci">bool Debug</div><div class="ttdoc">If true, debugging output will be written to std::clog.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:880</div></div>
<div class="ttc" id="aclasspkgAcqIndexMergeDiffs_xhtml"><div class="ttname"><a href="classpkgAcqIndexMergeDiffs.xhtml">pkgAcqIndexMergeDiffs</a></div><div class="ttdoc">An item that is responsible for fetching client-merge patches {{{ that need to be applied to a given ...</div><div class="ttdef"><b>Definition:</b> acquire-item.h:773</div></div>
<div class="ttc" id="aclasspkgAcqIndexMergeDiffs_xhtml_a43e66dcd95669139a8d0c05d42397c81"><div class="ttname"><a href="classpkgAcqIndexMergeDiffs.xhtml#a43e66dcd95669139a8d0c05d42397c81">pkgAcqIndexMergeDiffs::allPatches</a></div><div class="ttdeci">std::vector&lt; pkgAcqIndexMergeDiffs * &gt; const  *const allPatches</div><div class="ttdoc">list of all download items for the patches</div><div class="ttdef"><b>Definition:</b> acquire-item.h:785</div></div>
<div class="ttc" id="aclasspkgAcqIndexMergeDiffs_xhtml_ab2898413cf073f60c8ea280c811c3edf"><div class="ttname"><a href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edf">pkgAcqIndexMergeDiffs::DiffState</a></div><div class="ttdeci">DiffState</div><div class="ttdef"><b>Definition:</b> acquire-item.h:789</div></div>
<div class="ttc" id="aclasspkgAcqIndexMergeDiffs_xhtml_ab2898413cf073f60c8ea280c811c3edfa85e95bc535755d0bcc1421d7daa90f0e"><div class="ttname"><a href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfa85e95bc535755d0bcc1421d7daa90f0e">pkgAcqIndexMergeDiffs::StateApplyDiff</a></div><div class="ttdeci">@ StateApplyDiff</div><div class="ttdoc">The diff is currently being applied.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:794</div></div>
<div class="ttc" id="aclasspkgAcqIndexMergeDiffs_xhtml_ab2898413cf073f60c8ea280c811c3edfaec3dbb53054bff15ce3c49882de26f84"><div class="ttname"><a href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfaec3dbb53054bff15ce3c49882de26f84">pkgAcqIndexMergeDiffs::StateFetchDiff</a></div><div class="ttdeci">@ StateFetchDiff</div><div class="ttdoc">The diff is currently being fetched.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:791</div></div>
<div class="ttc" id="aclasspkgAcqIndexMergeDiffs_xhtml_ab2898413cf073f60c8ea280c811c3edfaf07070e01a800f071bf4ed1ca3a1de4b"><div class="ttname"><a href="classpkgAcqIndexMergeDiffs.xhtml#ab2898413cf073f60c8ea280c811c3edfaf07070e01a800f071bf4ed1ca3a1de4b">pkgAcqIndexMergeDiffs::StateDoneDiff</a></div><div class="ttdeci">@ StateDoneDiff</div><div class="ttdoc">the work with this diff is done</div><div class="ttdef"><b>Definition:</b> acquire-item.h:797</div></div>
<div class="ttc" id="aclasspkgAcqIndexMergeDiffs_xhtml_acdf3472c9b75f32dae88032d42d1cb6c"><div class="ttname"><a href="classpkgAcqIndexMergeDiffs.xhtml#acdf3472c9b75f32dae88032d42d1cb6c">pkgAcqIndexMergeDiffs::Debug</a></div><div class="ttdeci">bool Debug</div><div class="ttdoc">If true, debugging output will be written to std::clog.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:779</div></div>
<div class="ttc" id="aclasspkgAcqIndex_xhtml"><div class="ttname"><a href="classpkgAcqIndex.xhtml">pkgAcqIndex</a></div><div class="ttdoc">An acquire item that is responsible for fetching an index {{{ file (e.g., Packages or Sources).</div><div class="ttdef"><b>Definition:</b> acquire-item.h:618</div></div>
<div class="ttc" id="aclasspkgAcqIndex_xhtml_a1c12d98c41d5085614aeedf706f56252"><div class="ttname"><a href="classpkgAcqIndex.xhtml#a1c12d98c41d5085614aeedf706f56252">pkgAcqIndex::CompressionExtensions</a></div><div class="ttdeci">std::string CompressionExtensions</div><div class="ttdoc">The compression-related file extensions that are being added to the downloaded file one by one if fir...</div><div class="ttdef"><b>Definition:</b> acquire-item.h:650</div></div>
<div class="ttc" id="aclasspkgAcqIndex_xhtml_a44a93ecc4c1d0d8cd86f7b27b0eab978"><div class="ttname"><a href="classpkgAcqIndex.xhtml#a44a93ecc4c1d0d8cd86f7b27b0eab978">pkgAcqIndex::InitByHashIfNeeded</a></div><div class="ttdeci">void InitByHashIfNeeded()</div><div class="ttdoc">Do the changes needed to fetch via AptByHash (if needed)</div></div>
<div class="ttc" id="aclasspkgAcqIndex_xhtml_a7265e165b5a13836e2c1ee3aca2e1ace"><div class="ttname"><a href="classpkgAcqIndex.xhtml#a7265e165b5a13836e2c1ee3aca2e1ace">pkgAcqIndex::CurrentCompressionExtension</a></div><div class="ttdeci">std::string CurrentCompressionExtension</div><div class="ttdoc">The actual compression extension currently used.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:653</div></div>
<div class="ttc" id="aclasspkgAcqIndex_xhtml_a7951e6695ecd10e5210b0afd0844b91e"><div class="ttname"><a href="classpkgAcqIndex.xhtml#a7951e6695ecd10e5210b0afd0844b91e">pkgAcqIndex::AllStages</a></div><div class="ttdeci">AllStages</div><div class="ttdoc">The stages the method goes through.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:628</div></div>
<div class="ttc" id="aclasspkgAcqIndex_xhtml_ad80ed9a66c7fda95887cdf6274d35f9c"><div class="ttname"><a href="classpkgAcqIndex.xhtml#ad80ed9a66c7fda95887cdf6274d35f9c">pkgAcqIndex::EraseFileName</a></div><div class="ttdeci">std::string EraseFileName</div><div class="ttdoc">If set, this partially downloaded file will be removed when the download completes.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:645</div></div>
<div class="ttc" id="aclasspkgAcqMetaBase_xhtml"><div class="ttname"><a href="classpkgAcqMetaBase.xhtml">pkgAcqMetaBase</a></div><div class="ttdoc">the manager of a transaction</div><div class="ttdef"><b>Definition:</b> acquire-item.h:404</div></div>
<div class="ttc" id="aclasspkgAcqMetaBase_xhtml_a443405c4d5dd2d2473f185ee7d6a838b"><div class="ttname"><a href="classpkgAcqMetaBase.xhtml#a443405c4d5dd2d2473f185ee7d6a838b">pkgAcqMetaBase::AuthPass</a></div><div class="ttdeci">bool AuthPass</div><div class="ttdoc">If true, the index's signature is currently being verified.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:411</div></div>
<div class="ttc" id="aclasspkgAcqMetaClearSig_xhtml"><div class="ttname"><a href="classpkgAcqMetaClearSig.xhtml">pkgAcqMetaClearSig</a></div><div class="ttdoc">An item responsible for downloading clearsigned metaindexes {{{.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:560</div></div>
<div class="ttc" id="aclasspkgAcqMetaClearSig_xhtml_a55cc31522b67f17e71ffbb97b984c563"><div class="ttname"><a href="classpkgAcqMetaClearSig.xhtml#a55cc31522b67f17e71ffbb97b984c563">pkgAcqMetaClearSig::MetaIndexParser</a></div><div class="ttdeci">metaIndex * MetaIndexParser</div><div class="ttdoc">A package-system-specific parser for the meta-index file.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:566</div></div>
<div class="ttc" id="aclasspkgAcqMetaIndex_xhtml"><div class="ttname"><a href="classpkgAcqMetaIndex.xhtml">pkgAcqMetaIndex</a></div><div class="ttdoc">An item that is responsible for downloading the meta-index {{{ file (i.e., Release) itself and verify...</div><div class="ttdef"><b>Definition:</b> acquire-item.h:497</div></div>
<div class="ttc" id="aclasspkgAcqMetaIndex_xhtml_a7400ba10f25420ecbc3cae71f9f12047"><div class="ttname"><a href="classpkgAcqMetaIndex.xhtml#a7400ba10f25420ecbc3cae71f9f12047">pkgAcqMetaIndex::Init</a></div><div class="ttdeci">void Init(std::string const &amp;URIDesc, std::string const &amp;ShortDesc)</div><div class="ttdoc">delayed constructor</div></div>
<div class="ttc" id="aclasspkgAcqMetaSig_xhtml"><div class="ttname"><a href="classpkgAcqMetaSig.xhtml">pkgAcqMetaSig</a></div><div class="ttdoc">An acquire item that downloads the detached signature {{{ of a meta-index (Release) file,...</div><div class="ttdef"><b>Definition:</b> acquire-item.h:530</div></div>
<div class="ttc" id="aclasspkgAcqTransactionItem_xhtml"><div class="ttname"><a href="classpkgAcqTransactionItem.xhtml">pkgAcqTransactionItem</a></div><div class="ttdoc">baseclass for the indexes files to manage them all together</div><div class="ttdef"><b>Definition:</b> acquire-item.h:366</div></div>
<div class="ttc" id="aclasspkgAcqTransactionItem_xhtml_a485640aedbea8b648c06cdb378e3aa1f"><div class="ttname"><a href="classpkgAcqTransactionItem.xhtml#a485640aedbea8b648c06cdb378e3aa1f">pkgAcqTransactionItem::TransactionManager</a></div><div class="ttdeci">pkgAcqMetaClearSig *const TransactionManager</div><div class="ttdoc">TransactionManager.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:380</div></div>
<div class="ttc" id="aclasspkgAcqTransactionItem_xhtml_ac344f6df305106606f3dff2c9231bb6a"><div class="ttname"><a href="classpkgAcqTransactionItem.xhtml#ac344f6df305106606f3dff2c9231bb6a">pkgAcqTransactionItem::PartialFile</a></div><div class="ttdeci">std::string PartialFile</div><div class="ttdoc">storge name until a transaction is finished</div><div class="ttdef"><b>Definition:</b> acquire-item.h:377</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml"><div class="ttname"><a href="classpkgAcquire.xhtml">pkgAcquire</a></div><div class="ttdoc">Represents the process by which a pkgAcquire object should retrieve a file or a collection of files.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:59</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a1136af95870160bb254473a2f7e59a86"><div class="ttname"><a href="classpkgAcquire.xhtml#a1136af95870160bb254473a2f7e59a86">pkgAcquire::HashesRequired</a></div><div class="ttdeci">virtual bool HashesRequired() const</div><div class="ttdef"><b>Definition:</b> acquire-item.h:270</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a140b713d7815b8dd427cc87c2df56585"><div class="ttname"><a href="classpkgAcquire.xhtml#a140b713d7815b8dd427cc87c2df56585">pkgAcquire::RenameOnError</a></div><div class="ttdeci">bool RenameOnError(RenameOnErrorState const state)</div><div class="ttdoc">Rename failed file and set error.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a14b95e9dfd9a18f94878cdf849c60053"><div class="ttname"><a href="classpkgAcquire.xhtml#a14b95e9dfd9a18f94878cdf849c60053">pkgAcquire::Priority</a></div><div class="ttdeci">int APT_HIDDEN Priority()</div><div class="ttdoc">The priority of the item, used for queuing.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a16cbb205286be182faec2cbc0434eef2"><div class="ttname"><a href="classpkgAcquire.xhtml#a16cbb205286be182faec2cbc0434eef2">pkgAcquire::VerifyDone</a></div><div class="ttdeci">virtual bool VerifyDone(std::string const &amp;Message, pkgAcquire::MethodConfig const *const Cnf)</div><div class="ttdoc">Invoked by the acquire worker to check if the successfully fetched object is also the objected we wan...</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a17d459e7612a763c8eb2aa4aae9a6418"><div class="ttname"><a href="classpkgAcquire.xhtml#a17d459e7612a763c8eb2aa4aae9a6418">pkgAcquire::Done</a></div><div class="ttdeci">virtual void Done(std::string const &amp;Message, HashStringList const &amp;Hashes, pkgAcquire::MethodConfig const *const Cnf)</div><div class="ttdoc">Invoked by the acquire worker when the object was fetched successfully.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a1d1d5538b9875279b01b81e1ef494601"><div class="ttname"><a href="classpkgAcquire.xhtml#a1d1d5538b9875279b01b81e1ef494601">pkgAcquire::QueueCounter</a></div><div class="ttdeci">unsigned int QueueCounter</div><div class="ttdoc">The number of fetch queues into which this item has been inserted.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:138</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a237fd00f8b6cfdd3cdcf1815846149e0"><div class="ttname"><a href="classpkgAcquire.xhtml#a237fd00f8b6cfdd3cdcf1815846149e0">pkgAcquire::HashSum</a></div><div class="ttdeci">std::string HashSum() const</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a2977f974805071d438df8dd73292fe72"><div class="ttname"><a href="classpkgAcquire.xhtml#a2977f974805071d438df8dd73292fe72">pkgAcquire::Finished</a></div><div class="ttdeci">virtual void Finished()</div><div class="ttdoc">Invoked by the worker when the download is completely done.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a29c0cb60fa0c1e5f67d911bed92f2006"><div class="ttname"><a href="classpkgAcquire.xhtml#a29c0cb60fa0c1e5f67d911bed92f2006">pkgAcquire::MethodConfig</a></div><div class="ttdeci">MethodConfig()</div><div class="ttdoc">Set up the default method parameters.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a2b86900df4f7c4f7fc44f4c2bc888827"><div class="ttname"><a href="classpkgAcquire.xhtml#a2b86900df4f7c4f7fc44f4c2bc888827">pkgAcquire::PartialSize</a></div><div class="ttdeci">unsigned long long PartialSize</div><div class="ttdoc">How much of the object was already fetched.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:99</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a2cf4b8b42d2691df4d19f456bad87327"><div class="ttname"><a href="classpkgAcquire.xhtml#a2cf4b8b42d2691df4d19f456bad87327">pkgAcquire::Retries</a></div><div class="ttdeci">unsigned int Retries</div><div class="ttdoc">Number of retries.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:156</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a3796f802e2bbb94ea4d215acb092e1de"><div class="ttname"><a href="classpkgAcquire.xhtml#a3796f802e2bbb94ea4d215acb092e1de">pkgAcquire::QueueURI</a></div><div class="ttdeci">virtual bool QueueURI(ItemDesc &amp;Item)</div><div class="ttdoc">Insert this item into its owner's queue.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a3bd3f16c6fa3134500f50f0bf8fd4ecd"><div class="ttname"><a href="classpkgAcquire.xhtml#a3bd3f16c6fa3134500f50f0bf8fd4ecd">pkgAcquire::Start</a></div><div class="ttdeci">virtual void Start(std::string const &amp;Message, unsigned long long const Size)</div><div class="ttdoc">Invoked when the worker starts to fetch this object.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a4bef8db29346252205b0a9be3c530739"><div class="ttname"><a href="classpkgAcquire.xhtml#a4bef8db29346252205b0a9be3c530739">pkgAcquire::ExpectedAdditionalItems</a></div><div class="ttdeci">unsigned int ExpectedAdditionalItems</div><div class="ttdoc">The number of additional fetch items that are expected once this item is done.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:148</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a634f2accefd6f56896af45cedbebb08d"><div class="ttname"><a href="classpkgAcquire.xhtml#a634f2accefd6f56896af45cedbebb08d">pkgAcquire::ActiveSubprocess</a></div><div class="ttdeci">std::string ActiveSubprocess</div><div class="ttdoc">contains the name of the subprocess that is operating on this object (for instance,...</div><div class="ttdef"><b>Definition:</b> acquire-item.h:104</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a63a8c90526aa28ea8a9c2458a53846bc"><div class="ttname"><a href="classpkgAcquire.xhtml#a63a8c90526aa28ea8a9c2458a53846bc">pkgAcquire::Desc</a></div><div class="ttdeci">pkgAcquire::ItemDesc Desc</div><div class="ttdoc">The item that is currently being downloaded.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:309</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a65c34bf145cef32f615c0fd7be757a36"><div class="ttname"><a href="classpkgAcquire.xhtml#a65c34bf145cef32f615c0fd7be757a36">pkgAcquire::Custom600Headers</a></div><div class="ttdeci">virtual std::string Custom600Headers() const</div><div class="ttdoc">Custom headers to be sent to the fetch process.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a717924cd0aecc1908058a6ed7ffd31f3"><div class="ttname"><a href="classpkgAcquire.xhtml#a717924cd0aecc1908058a6ed7ffd31f3">pkgAcquire::Dequeue</a></div><div class="ttdeci">void Dequeue()</div><div class="ttdoc">Remove this item from its owner's queue.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a73dc08e4fcad28172942d233f825e391"><div class="ttname"><a href="classpkgAcquire.xhtml#a73dc08e4fcad28172942d233f825e391">pkgAcquire::~Item</a></div><div class="ttdeci">virtual ~Item()</div><div class="ttdoc">Remove this item from its owner's queue by invoking pkgAcquire::Remove.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a7787c3dcef8c503fb513569a9fdec68d"><div class="ttname"><a href="classpkgAcquire.xhtml#a7787c3dcef8c503fb513569a9fdec68d">pkgAcquire::Rename</a></div><div class="ttdeci">bool Rename(std::string const &amp;From, std::string const &amp;To)</div><div class="ttdoc">Rename a file without modifying its timestamp.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a7fc877a36248a6101304994352d1ad87"><div class="ttname"><a href="classpkgAcquire.xhtml#a7fc877a36248a6101304994352d1ad87">pkgAcquire::ID</a></div><div class="ttdeci">unsigned long ID</div><div class="ttdoc">A client-supplied unique identifier.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:113</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a8798e6e4055734c7f1e234ef4acd9371"><div class="ttname"><a href="classpkgAcquire.xhtml#a8798e6e4055734c7f1e234ef4acd9371">pkgAcquire::Failed</a></div><div class="ttdeci">virtual void Failed(std::string const &amp;Message, pkgAcquire::MethodConfig const *const Cnf)</div><div class="ttdoc">Invoked by the acquire worker when the object couldn't be fetched.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a8798fd49b6306cde3810ff5744d8bfc2"><div class="ttname"><a href="classpkgAcquire.xhtml#a8798fd49b6306cde3810ff5744d8bfc2">pkgAcquire::FileSize</a></div><div class="ttdeci">unsigned long long FileSize</div><div class="ttdoc">The size of the object to fetch.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:96</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a886f6c17d366793eb6202ba2482372f5"><div class="ttname"><a href="classpkgAcquire.xhtml#a886f6c17d366793eb6202ba2482372f5">pkgAcquire::Complete</a></div><div class="ttdeci">bool Complete</div><div class="ttdoc">If true, the entire object has been successfully fetched.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:119</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a89dc1a987d2902d03b28100d3427d129"><div class="ttname"><a href="classpkgAcquire.xhtml#a89dc1a987d2902d03b28100d3427d129">pkgAcquire::ShortDesc</a></div><div class="ttdeci">virtual std::string ShortDesc() const</div><div class="ttdoc">Short item description.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a908a8a85047dd5a135a84be0f3bc1baa"><div class="ttname"><a href="classpkgAcquire.xhtml#a908a8a85047dd5a135a84be0f3bc1baa">pkgAcquire::GetExpectedHashes</a></div><div class="ttdeci">virtual HashStringList GetExpectedHashes() const =0</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a98d3c89be817752144bb35823e365fec"><div class="ttname"><a href="classpkgAcquire.xhtml#a98d3c89be817752144bb35823e365fec">pkgAcquire::Local</a></div><div class="ttdeci">bool Local</div><div class="ttdoc">If true, the URI of this object is &quot;local&quot;.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:126</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_a9ed94159619166b2e0aed2d88be5c875"><div class="ttname"><a href="classpkgAcquire.xhtml#a9ed94159619166b2e0aed2d88be5c875">pkgAcquire::GetFinalFilename</a></div><div class="ttdeci">virtual std::string GetFinalFilename() const</div><div class="ttdoc">Get the full pathname of the final file for the current URI.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_aa391d1c541349a2c9d0968ef8660b45e"><div class="ttname"><a href="classpkgAcquire.xhtml#aa391d1c541349a2c9d0968ef8660b45e">pkgAcquire::Item</a></div><div class="ttdeci">Item(pkgAcquire *const Owner)</div><div class="ttdoc">Initialize an item.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_ab2638de684977037618d65aa009384b1"><div class="ttname"><a href="classpkgAcquire.xhtml#ab2638de684977037618d65aa009384b1">pkgAcquire::ErrorText</a></div><div class="ttdeci">std::string ErrorText</div><div class="ttdoc">Contains a textual description of the error encountered if ItemState is StatError or StatAuthError.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:93</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_ab4b5e2afff64c51303682cea9243f098"><div class="ttname"><a href="classpkgAcquire.xhtml#ab4b5e2afff64c51303682cea9243f098">pkgAcquire::DestFile</a></div><div class="ttdeci">std::string DestFile</div><div class="ttdoc">The name of the file into which the retrieved object will be written.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:153</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_abbd5b67ba93cd4d1d0d19ad5a37704a5"><div class="ttname"><a href="classpkgAcquire.xhtml#abbd5b67ba93cd4d1d0d19ad5a37704a5">pkgAcquire::IsTrusted</a></div><div class="ttdeci">virtual bool IsTrusted() const</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_abd4abbf0fe1f8b5299675b590315b4b9"><div class="ttname"><a href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9">pkgAcquire::ItemState</a></div><div class="ttdeci">ItemState</div><div class="ttdoc">The current status of this item.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:64</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_abd4abbf0fe1f8b5299675b590315b4b9a19728efb594f55c57218604ad77b25db"><div class="ttname"><a href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a19728efb594f55c57218604ad77b25db">pkgAcquire::StatAuthError</a></div><div class="ttdeci">@ StatAuthError</div><div class="ttdoc">The item was downloaded but its authenticity could not be verified.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:82</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_abd4abbf0fe1f8b5299675b590315b4b9a2438768d0d80b2bcbf37ffa6bae5d445"><div class="ttname"><a href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a2438768d0d80b2bcbf37ffa6bae5d445">pkgAcquire::StatFetching</a></div><div class="ttdeci">@ StatFetching</div><div class="ttdoc">The item is currently being downloaded.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:69</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_abd4abbf0fe1f8b5299675b590315b4b9a29a70e77eba9ee9773d3e6ac26348820"><div class="ttname"><a href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a29a70e77eba9ee9773d3e6ac26348820">pkgAcquire::StatTransientNetworkError</a></div><div class="ttdeci">@ StatTransientNetworkError</div><div class="ttdoc">The item was could not be downloaded because of a transient network error (e.g. network down)</div><div class="ttdef"><b>Definition:</b> acquire-item.h:87</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_abd4abbf0fe1f8b5299675b590315b4b9a8523989e15c68262bb5469f61fbe72ba"><div class="ttname"><a href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a8523989e15c68262bb5469f61fbe72ba">pkgAcquire::StatError</a></div><div class="ttdeci">@ StatError</div><div class="ttdoc">An error was encountered while downloading this item.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:77</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_abd4abbf0fe1f8b5299675b590315b4b9a875850b5de48d7a0ae71c47fbbef4832"><div class="ttname"><a href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9a875850b5de48d7a0ae71c47fbbef4832">pkgAcquire::StatDone</a></div><div class="ttdeci">@ StatDone</div><div class="ttdoc">The item has been successfully downloaded.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:72</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_abd4abbf0fe1f8b5299675b590315b4b9aafe4203baf90d29ba26cdca204795329"><div class="ttname"><a href="classpkgAcquire.xhtml#abd4abbf0fe1f8b5299675b590315b4b9aafe4203baf90d29ba26cdca204795329">pkgAcquire::StatIdle</a></div><div class="ttdeci">@ StatIdle</div><div class="ttdoc">The item is waiting to be downloaded.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:66</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_ac0b2d9156c461297e38e9f3fdf2771b3"><div class="ttname"><a href="classpkgAcquire.xhtml#ac0b2d9156c461297e38e9f3fdf2771b3">pkgAcquire::Owner</a></div><div class="ttdeci">pkgAcquire *const Owner</div><div class="ttdoc">The acquire object with which this item is associated.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:306</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_ac0cf8a483d82d1372c6f7d499937860c"><div class="ttname"><a href="classpkgAcquire.xhtml#ac0cf8a483d82d1372c6f7d499937860c">pkgAcquire::Worker</a></div><div class="ttdeci">Worker(Queue *OwnerQ, MethodConfig *Config, pkgAcquireStatus *Log)</div><div class="ttdoc">Create a new Worker to download files.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_ad340ff53c2faad023e3f11627e91c5b6"><div class="ttname"><a href="classpkgAcquire.xhtml#ad340ff53c2faad023e3f11627e91c5b6">pkgAcquire::DescURI</a></div><div class="ttdeci">virtual std::string DescURI() const =0</div><div class="ttdoc">A &quot;descriptive&quot; URI-like string.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_aeeb2ad33090ed27447bfe86ff8d9d883"><div class="ttname"><a href="classpkgAcquire.xhtml#aeeb2ad33090ed27447bfe86ff8d9d883">pkgAcquire::SetActiveSubprocess</a></div><div class="ttdeci">void SetActiveSubprocess(std::string const &amp;subprocess)</div><div class="ttdoc">Set the name of the current active subprocess.</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml_af5b29a075a3faef3bc2b34663801a256"><div class="ttname"><a href="classpkgAcquire.xhtml#af5b29a075a3faef3bc2b34663801a256">pkgAcquire::GetOwner</a></div><div class="ttdeci">pkgAcquire * GetOwner() const</div></div>
<div class="ttc" id="aclasspkgCache_xhtml"><div class="ttname"><a href="classpkgCache.xhtml">pkgCache</a></div><div class="ttdef"><b>Definition:</b> cacheiterators.h:48</div></div>
<div class="ttc" id="aclasspkgRecords_xhtml"><div class="ttname"><a href="classpkgRecords.xhtml">pkgRecords</a></div><div class="ttdef"><b>Definition:</b> pkgrecords.h:27</div></div>
<div class="ttc" id="aclasspkgSourceList_xhtml"><div class="ttname"><a href="classpkgSourceList.xhtml">pkgSourceList</a></div><div class="ttdef"><b>Definition:</b> sourcelist.h:43</div></div>
<div class="ttc" id="apkgcache_8h_xhtml"><div class="ttname"><a href="pkgcache_8h.xhtml">pkgcache.h</a></div><div class="ttdoc">pkgCache - Structure definitions for the cache file</div></div>
<div class="ttc" id="astructDiffInfo_xhtml"><div class="ttname"><a href="structDiffInfo.xhtml">DiffInfo</a></div><div class="ttdef"><b>Definition:</b> acquire-item.h:683</div></div>
<div class="ttc" id="astructDiffInfo_xhtml_a7c9600a12cf494a1aee76dbb2145bf2a"><div class="ttname"><a href="structDiffInfo.xhtml#a7c9600a12cf494a1aee76dbb2145bf2a">DiffInfo::patch_hashes</a></div><div class="ttdeci">HashStringList patch_hashes</div><div class="ttdef"><b>Definition:</b> acquire-item.h:691</div></div>
<div class="ttc" id="astructDiffInfo_xhtml_ac1eb3374af4b79a77973d029cb72064c"><div class="ttname"><a href="structDiffInfo.xhtml#ac1eb3374af4b79a77973d029cb72064c">DiffInfo::result_hashes</a></div><div class="ttdeci">HashStringList result_hashes</div><div class="ttdef"><b>Definition:</b> acquire-item.h:688</div></div>
<div class="ttc" id="astructDiffInfo_xhtml_ac861382f56ae24a448cb50c62c688844"><div class="ttname"><a href="structDiffInfo.xhtml#ac861382f56ae24a448cb50c62c688844">DiffInfo::download_hashes</a></div><div class="ttdeci">HashStringList download_hashes</div><div class="ttdef"><b>Definition:</b> acquire-item.h:694</div></div>
<div class="ttc" id="astructDiffInfo_xhtml_aefc35c7944eed319c89bc1b399f0eb67"><div class="ttname"><a href="structDiffInfo.xhtml#aefc35c7944eed319c89bc1b399f0eb67">DiffInfo::file</a></div><div class="ttdeci">std::string file</div><div class="ttdef"><b>Definition:</b> acquire-item.h:685</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
