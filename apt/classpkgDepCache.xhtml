<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: pkgDepCache Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#nested-classes">Classes</a> &#124;
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pro-methods">Protected Member Functions</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classpkgDepCache-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">pkgDepCache Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Inheritance diagram for pkgDepCache:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classpkgDepCache__inherit__graph.svg" width="123" height="112"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<div class="dynheader">
Collaboration diagram for pkgDepCache:</div>
<div class="dyncontent">
<div class="center"><div class="zoom"><iframe scrolling="no" frameborder="0" src="classpkgDepCache__coll__graph.svg" width="100%" height="600"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe></div>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="nested-classes"></a>
Classes</h2></td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache_1_1ActionGroup.xhtml">ActionGroup</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Represents an active action group.  <a href="classpkgDepCache_1_1ActionGroup.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache_1_1DefaultRootSetFunc.xhtml">DefaultRootSetFunc</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns <b>true</b> for packages matching a regular expression in APT::NeverAutoRemove.  <a href="classpkgDepCache_1_1DefaultRootSetFunc.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache_1_1InRootSetFunc.xhtml">InRootSetFunc</a></td></tr>
<tr class="memdesc:"><td class="mdescLeft">&#160;</td><td class="mdescRight">An arbitrary predicate on packages.  <a href="classpkgDepCache_1_1InRootSetFunc.xhtml#details">More...</a><br /></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">class &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache_1_1Policy.xhtml">Policy</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgDepCache_1_1Private.xhtml">Private</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:"><td class="memItemLeft" align="right" valign="top">struct &#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgDepCache_1_1StateCache.xhtml">StateCache</a></td></tr>
<tr class="separator:"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a1b38062fc80c3e4a6fa163aafb400dd6"><td class="memItemLeft" align="right" valign="top"><a id="a1b38062fc80c3e4a6fa163aafb400dd6"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>DepFlags</b> { <br />
&#160;&#160;<b>DepNow</b> = (1 &lt;&lt; 0)
, <b>DepInstall</b> = (1 &lt;&lt; 1)
, <b>DepCVer</b> = (1 &lt;&lt; 2)
, <b>DepGNow</b> = (1 &lt;&lt; 3)
, <br />
&#160;&#160;<b>DepGInstall</b> = (1 &lt;&lt; 4)
, <b>DepGCVer</b> = (1 &lt;&lt; 5)
<br />
 }</td></tr>
<tr class="separator:a1b38062fc80c3e4a6fa163aafb400dd6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aae3bbb52473d6744212e522f9f92341e"><td class="memItemLeft" align="right" valign="top"><a id="aae3bbb52473d6744212e522f9f92341e"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>DepStateFlags</b> { <br />
&#160;&#160;<b>DepNowPolicy</b> = (1 &lt;&lt; 0)
, <b>DepNowMin</b> = (1 &lt;&lt; 1)
, <b>DepInstPolicy</b> = (1 &lt;&lt; 2)
, <b>DepInstMin</b> = (1 &lt;&lt; 3)
, <br />
&#160;&#160;<b>DepCandPolicy</b> = (1 &lt;&lt; 4)
, <b>DepCandMin</b> = (1 &lt;&lt; 5)
<br />
 }</td></tr>
<tr class="separator:aae3bbb52473d6744212e522f9f92341e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a41058517d1970a6d41e034b051462ff9"><td class="memItemLeft" align="right" valign="top"><a id="a41058517d1970a6d41e034b051462ff9"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>InternalFlags</b> { <b>AutoKept</b> = (1 &lt;&lt; 0)
, <b>Purge</b> = (1 &lt;&lt; 1)
, <b>ReInstall</b> = (1 &lt;&lt; 2)
, <b>Protected</b> = (1 &lt;&lt; 3)
 }</td></tr>
<tr class="separator:a41058517d1970a6d41e034b051462ff9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f6182cb77f470b4361a8e3200c160b6"><td class="memItemLeft" align="right" valign="top"><a id="a7f6182cb77f470b4361a8e3200c160b6"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>VersionTypes</b> { <b>NowVersion</b>
, <b>InstallVersion</b>
, <b>CandidateVersion</b>
 }</td></tr>
<tr class="separator:a7f6182cb77f470b4361a8e3200c160b6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afff756af58613cfc57beb46b34bb282c"><td class="memItemLeft" align="right" valign="top"><a id="afff756af58613cfc57beb46b34bb282c"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>ModeList</b> { <b>ModeDelete</b> = 0
, <b>ModeKeep</b> = 1
, <b>ModeInstall</b> = 2
, <b>ModeGarbage</b> = 3
 }</td></tr>
<tr class="separator:afff756af58613cfc57beb46b34bb282c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a3ec0051a89777102d929dcc8921cf529"><td class="memItemLeft" align="right" valign="top"><a id="a3ec0051a89777102d929dcc8921cf529"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>BuildGroupOrs</b> (VerIterator const &amp;V)</td></tr>
<tr class="separator:a3ec0051a89777102d929dcc8921cf529"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa74244a9e08ffbbe9fd7c37cf9b9d27a"><td class="memItemLeft" align="right" valign="top"><a id="aa74244a9e08ffbbe9fd7c37cf9b9d27a"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>UpdateVerState</b> (PkgIterator const &amp;Pkg)</td></tr>
<tr class="separator:aa74244a9e08ffbbe9fd7c37cf9b9d27a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a08cfc55b07758c6a3419691c47800471"><td class="memItemLeft" align="right" valign="top"><a id="a08cfc55b07758c6a3419691c47800471"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>operator pkgCache &amp;</b> ()</td></tr>
<tr class="separator:a08cfc55b07758c6a3419691c47800471"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af5a108652a9ac34318c144fae4b2cffb"><td class="memItemLeft" align="right" valign="top"><a id="af5a108652a9ac34318c144fae4b2cffb"></a>
<a class="el" href="structpkgCache_1_1Header.xhtml">Header</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>Head</b> ()</td></tr>
<tr class="separator:af5a108652a9ac34318c144fae4b2cffb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af208c0af741d8ee6f4fc34132f88cfbe"><td class="memItemLeft" align="right" valign="top"><a id="af208c0af741d8ee6f4fc34132f88cfbe"></a>
GrpIterator&#160;</td><td class="memItemRight" valign="bottom"><b>GrpBegin</b> ()</td></tr>
<tr class="separator:af208c0af741d8ee6f4fc34132f88cfbe"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab23bcc37bffca9923a6a7caa18fb42a5"><td class="memItemLeft" align="right" valign="top"><a id="ab23bcc37bffca9923a6a7caa18fb42a5"></a>
PkgIterator&#160;</td><td class="memItemRight" valign="bottom"><b>PkgBegin</b> ()</td></tr>
<tr class="separator:ab23bcc37bffca9923a6a7caa18fb42a5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a518dc2ce35b2c373fc3822fec929cb03"><td class="memItemLeft" align="right" valign="top"><a id="a518dc2ce35b2c373fc3822fec929cb03"></a>
GrpIterator&#160;</td><td class="memItemRight" valign="bottom"><b>FindGrp</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> Name)</td></tr>
<tr class="separator:a518dc2ce35b2c373fc3822fec929cb03"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1418d7e3528b230c9422f67f57b7d892"><td class="memItemLeft" align="right" valign="top"><a id="a1418d7e3528b230c9422f67f57b7d892"></a>
PkgIterator&#160;</td><td class="memItemRight" valign="bottom"><b>FindPkg</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> Name)</td></tr>
<tr class="separator:a1418d7e3528b230c9422f67f57b7d892"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a53f96643efe6f024a652c72f4635bd86"><td class="memItemLeft" align="right" valign="top"><a id="a53f96643efe6f024a652c72f4635bd86"></a>
PkgIterator&#160;</td><td class="memItemRight" valign="bottom"><b>FindPkg</b> (<a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> Name, <a class="el" href="classAPT_1_1StringView.xhtml">APT::StringView</a> Arch)</td></tr>
<tr class="separator:a53f96643efe6f024a652c72f4635bd86"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab7db5f7135c4de2154b90ce5c4c326af"><td class="memItemLeft" align="right" valign="top"><a id="ab7db5f7135c4de2154b90ce5c4c326af"></a>
<a class="el" href="classpkgCache.xhtml">pkgCache</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetCache</b> ()</td></tr>
<tr class="separator:ab7db5f7135c4de2154b90ce5c4c326af"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc2087c8b2d0be34d37331e0856eaf92"><td class="memItemLeft" align="right" valign="top"><a id="afc2087c8b2d0be34d37331e0856eaf92"></a>
<a class="el" href="classpkgVersioningSystem.xhtml">pkgVersioningSystem</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>VS</b> ()</td></tr>
<tr class="separator:afc2087c8b2d0be34d37331e0856eaf92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae2261898d8af34565fb1077519c6bc4f"><td class="memItemLeft" align="right" valign="top"><a id="ae2261898d8af34565fb1077519c6bc4f"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsImportantDep</b> (DepIterator <a class="el" href="structpkgCache_1_1Dep.xhtml">Dep</a>) const</td></tr>
<tr class="separator:ae2261898d8af34565fb1077519c6bc4f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bc06b5b49530d68d2401cd91a096da7"><td class="memItemLeft" align="right" valign="top"><a id="a2bc06b5b49530d68d2401cd91a096da7"></a>
<a class="el" href="classpkgDepCache_1_1Policy.xhtml">Policy</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>GetPolicy</b> ()</td></tr>
<tr class="separator:a2bc06b5b49530d68d2401cd91a096da7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3a4f0f44c166d7439ddf605e087515d"><td class="memItemLeft" align="right" valign="top"><a id="ac3a4f0f44c166d7439ddf605e087515d"></a>
<a class="el" href="structpkgDepCache_1_1StateCache.xhtml">StateCache</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (PkgIterator const &amp;I)</td></tr>
<tr class="separator:ac3a4f0f44c166d7439ddf605e087515d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6e354cde0410ac735668514a15f994f4"><td class="memItemLeft" align="right" valign="top"><a id="a6e354cde0410ac735668514a15f994f4"></a>
<a class="el" href="structpkgDepCache_1_1StateCache.xhtml">StateCache</a> &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (PkgIterator const &amp;I) const</td></tr>
<tr class="separator:a6e354cde0410ac735668514a15f994f4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a77d9224d8c8a82dff82b15c2fe78706b"><td class="memItemLeft" align="right" valign="top"><a id="a77d9224d8c8a82dff82b15c2fe78706b"></a>
unsigned char &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (DepIterator const &amp;I)</td></tr>
<tr class="separator:a77d9224d8c8a82dff82b15c2fe78706b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a504f274f0e1c917500b35db0645f6761"><td class="memItemLeft" align="right" valign="top"><a id="a504f274f0e1c917500b35db0645f6761"></a>
unsigned char const  &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>operator[]</b> (DepIterator const &amp;I) const</td></tr>
<tr class="separator:a504f274f0e1c917500b35db0645f6761"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1ab9378572dc74fc8088fd690d494570"><td class="memItemLeft" align="right" valign="top">virtual <a class="el" href="classpkgDepCache_1_1InRootSetFunc.xhtml">InRootSetFunc</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#a1ab9378572dc74fc8088fd690d494570">GetRootSetFunc</a> ()</td></tr>
<tr class="separator:a1ab9378572dc74fc8088fd690d494570"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9e7e1878a84ec16698318b2023645144"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classpkgDepCache_1_1InRootSetFunc.xhtml">InRootSetFunc</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#a9e7e1878a84ec16698318b2023645144">GetCachedRootSetFunc</a> () APT_HIDDEN</td></tr>
<tr class="separator:a9e7e1878a84ec16698318b2023645144"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af3287419f765a35b0f1f25e449167718"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#af3287419f765a35b0f1f25e449167718">MarkFollowsRecommends</a> ()</td></tr>
<tr class="separator:af3287419f765a35b0f1f25e449167718"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9890f74f3e35a54ac7d4f3b5ab00aeb2"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#a9890f74f3e35a54ac7d4f3b5ab00aeb2">MarkFollowsSuggests</a> ()</td></tr>
<tr class="separator:a9890f74f3e35a54ac7d4f3b5ab00aeb2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac23028ed7e8f73b492717b077b3b52e8"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#ac23028ed7e8f73b492717b077b3b52e8">MarkAndSweep</a> (<a class="el" href="classpkgDepCache_1_1InRootSetFunc.xhtml">InRootSetFunc</a> &amp;rootFunc)</td></tr>
<tr class="memdesc:ac23028ed7e8f73b492717b077b3b52e8"><td class="mdescLeft">&#160;</td><td class="mdescRight">Update the Marked and Garbage fields of all packages.  <a href="classpkgDepCache.xhtml#ac23028ed7e8f73b492717b077b3b52e8">More...</a><br /></td></tr>
<tr class="separator:ac23028ed7e8f73b492717b077b3b52e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abfce9e49e56a627fee33de9c8495cf0c"><td class="memItemLeft" align="right" valign="top"><a id="abfce9e49e56a627fee33de9c8495cf0c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>MarkAndSweep</b> ()</td></tr>
<tr class="separator:abfce9e49e56a627fee33de9c8495cf0c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-methods"></a>
Protected Member Functions</h2></td></tr>
<tr class="memitem:abbae381f323745a55820001cad4863ba"><td class="memItemLeft" align="right" valign="top"><a id="abbae381f323745a55820001cad4863ba"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>CheckDep</b> (DepIterator const &amp;<a class="el" href="structpkgCache_1_1Dep.xhtml">Dep</a>, int const Type, PkgIterator &amp;Res)</td></tr>
<tr class="separator:abbae381f323745a55820001cad4863ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a361a9799d44d5eb3e6315319106cf6b5"><td class="memItemLeft" align="right" valign="top"><a id="a361a9799d44d5eb3e6315319106cf6b5"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>CheckDep</b> (DepIterator const &amp;<a class="el" href="structpkgCache_1_1Dep.xhtml">Dep</a>, int const Type)</td></tr>
<tr class="separator:a361a9799d44d5eb3e6315319106cf6b5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af581119f9100bf135e0df6f3a99664a8"><td class="memItemLeft" align="right" valign="top"><a id="af581119f9100bf135e0df6f3a99664a8"></a>
unsigned char&#160;</td><td class="memItemRight" valign="bottom"><b>DependencyState</b> (DepIterator const &amp;D)</td></tr>
<tr class="separator:af581119f9100bf135e0df6f3a99664a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac638f27713ea4038c74c990642e599f0"><td class="memItemLeft" align="right" valign="top"><a id="ac638f27713ea4038c74c990642e599f0"></a>
unsigned char&#160;</td><td class="memItemRight" valign="bottom"><b>VersionState</b> (DepIterator D, unsigned char const Check, unsigned char const SetMin, unsigned char const SetPolicy) const</td></tr>
<tr class="separator:ac638f27713ea4038c74c990642e599f0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a817157c618c0f2b7d02eb0561bc84721"><td class="memItemLeft" align="right" valign="top"><a id="a817157c618c0f2b7d02eb0561bc84721"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Update</b> (DepIterator <a class="el" href="structpkgCache_1_1Dep.xhtml">Dep</a>)</td></tr>
<tr class="separator:a817157c618c0f2b7d02eb0561bc84721"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac924a556145ff26389501a737781fde1"><td class="memItemLeft" align="right" valign="top"><a id="ac924a556145ff26389501a737781fde1"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Update</b> (PkgIterator const &amp;P)</td></tr>
<tr class="separator:ac924a556145ff26389501a737781fde1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6f758ac05cf7541f1e903eed00a3a6e6"><td class="memItemLeft" align="right" valign="top"><a id="a6f758ac05cf7541f1e903eed00a3a6e6"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AddSizes</b> (const PkgIterator &amp;Pkg, bool const Invert=false)</td></tr>
<tr class="separator:a6f758ac05cf7541f1e903eed00a3a6e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2e6d82c083a82abcb6f636d90f3fbe98"><td class="memItemLeft" align="right" valign="top"><a id="a2e6d82c083a82abcb6f636d90f3fbe98"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveSizes</b> (const PkgIterator &amp;Pkg)</td></tr>
<tr class="separator:a2e6d82c083a82abcb6f636d90f3fbe98"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae86dfb81731b0fda8fbf590b54c146b9"><td class="memItemLeft" align="right" valign="top"><a id="ae86dfb81731b0fda8fbf590b54c146b9"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>AddStates</b> (const PkgIterator &amp;Pkg, bool const Invert=false)</td></tr>
<tr class="separator:ae86dfb81731b0fda8fbf590b54c146b9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a14c83982265b4ce13066e9cd899ae5f7"><td class="memItemLeft" align="right" valign="top"><a id="a14c83982265b4ce13066e9cd899ae5f7"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>RemoveStates</b> (const PkgIterator &amp;Pkg)</td></tr>
<tr class="separator:a14c83982265b4ce13066e9cd899ae5f7"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:a200f99ff6c297b73a2e9302d95ca7a87"><td class="memItemLeft" align="right" valign="top"><a id="a200f99ff6c297b73a2e9302d95ca7a87"></a>
<a class="el" href="classpkgCache.xhtml">pkgCache</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>Cache</b></td></tr>
<tr class="separator:a200f99ff6c297b73a2e9302d95ca7a87"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ae98129877cbf5e3d35c8ab71c8c08b64"><td class="memItemLeft" align="right" valign="top"><a id="ae98129877cbf5e3d35c8ab71c8c08b64"></a>
<a class="el" href="structpkgDepCache_1_1StateCache.xhtml">StateCache</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>PkgState</b></td></tr>
<tr class="separator:ae98129877cbf5e3d35c8ab71c8c08b64"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24ef796239e9921fddc2974bf1a708ce"><td class="memItemLeft" align="right" valign="top"><a id="a24ef796239e9921fddc2974bf1a708ce"></a>
unsigned char *&#160;</td><td class="memItemRight" valign="bottom"><b>DepState</b></td></tr>
<tr class="separator:a24ef796239e9921fddc2974bf1a708ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab49a20f20f37cf4879e2ee750220e285"><td class="memItemLeft" align="right" valign="top">signed long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#ab49a20f20f37cf4879e2ee750220e285">iUsrSize</a></td></tr>
<tr class="separator:ab49a20f20f37cf4879e2ee750220e285"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3d3b83546b872ad372361b470d463f45"><td class="memItemLeft" align="right" valign="top">unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#a3d3b83546b872ad372361b470d463f45">iDownloadSize</a></td></tr>
<tr class="separator:a3d3b83546b872ad372361b470d463f45"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1c054b91eda75206627bd305dc8835c1"><td class="memItemLeft" align="right" valign="top"><a id="a1c054b91eda75206627bd305dc8835c1"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>iInstCount</b></td></tr>
<tr class="separator:a1c054b91eda75206627bd305dc8835c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a01d253ba70446abb3a1b77ee5c6a58e4"><td class="memItemLeft" align="right" valign="top"><a id="a01d253ba70446abb3a1b77ee5c6a58e4"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>iDelCount</b></td></tr>
<tr class="separator:a01d253ba70446abb3a1b77ee5c6a58e4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21161319dbfeb59d74566240a5cd4772"><td class="memItemLeft" align="right" valign="top"><a id="a21161319dbfeb59d74566240a5cd4772"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>iKeepCount</b></td></tr>
<tr class="separator:a21161319dbfeb59d74566240a5cd4772"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87327598883af09e1ebfa55e5fbece07"><td class="memItemLeft" align="right" valign="top"><a id="a87327598883af09e1ebfa55e5fbece07"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>iBrokenCount</b></td></tr>
<tr class="separator:a87327598883af09e1ebfa55e5fbece07"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a058cf6e58db72a8f93cf2a34c79c3466"><td class="memItemLeft" align="right" valign="top"><a id="a058cf6e58db72a8f93cf2a34c79c3466"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>iPolicyBrokenCount</b></td></tr>
<tr class="separator:a058cf6e58db72a8f93cf2a34c79c3466"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a3904a62c84d87614d6393e5b7cea51b4"><td class="memItemLeft" align="right" valign="top"><a id="a3904a62c84d87614d6393e5b7cea51b4"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>iBadCount</b></td></tr>
<tr class="separator:a3904a62c84d87614d6393e5b7cea51b4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a18028515af60951416c0c7db1f45bb5c"><td class="memItemLeft" align="right" valign="top"><a id="a18028515af60951416c0c7db1f45bb5c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>DebugMarker</b></td></tr>
<tr class="separator:a18028515af60951416c0c7db1f45bb5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aca4bf3af34238db029bcb2536a46ef23"><td class="memItemLeft" align="right" valign="top"><a id="aca4bf3af34238db029bcb2536a46ef23"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>DebugAutoInstall</b></td></tr>
<tr class="separator:aca4bf3af34238db029bcb2536a46ef23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad1835f63551e4cb11499603226fb3ee2"><td class="memItemLeft" align="right" valign="top"><a id="ad1835f63551e4cb11499603226fb3ee2"></a>
<a class="el" href="classpkgDepCache_1_1Policy.xhtml">Policy</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>delLocalPolicy</b></td></tr>
<tr class="separator:ad1835f63551e4cb11499603226fb3ee2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5c2aa77488fc2914352b7a6cf9becff"><td class="memItemLeft" align="right" valign="top"><a id="ab5c2aa77488fc2914352b7a6cf9becff"></a>
<a class="el" href="classpkgDepCache_1_1Policy.xhtml">Policy</a> *&#160;</td><td class="memItemRight" valign="bottom"><b>LocalPolicy</b></td></tr>
<tr class="separator:ab5c2aa77488fc2914352b7a6cf9becff"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a5228b26b7cff7de52d288c7989b26d46"><td class="memItemLeft" align="right" valign="top"><a id="a5228b26b7cff7de52d288c7989b26d46"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>ActionGroup</b></td></tr>
<tr class="separator:a5228b26b7cff7de52d288c7989b26d46"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader">State Manipulators</h2></td></tr>
<tr class="memitem:a2eb1021952d387cdb68ab2771f4d2d91"><td class="memItemLeft" align="right" valign="top"><a id="a2eb1021952d387cdb68ab2771f4d2d91"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>MarkKeep</b> (PkgIterator const &amp;Pkg, bool Soft=false, bool FromUser=true, unsigned long Depth=0)</td></tr>
<tr class="separator:a2eb1021952d387cdb68ab2771f4d2d91"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac984518664a8bdfefdd8f8ed6dff993d"><td class="memItemLeft" align="right" valign="top"><a id="ac984518664a8bdfefdd8f8ed6dff993d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>MarkDelete</b> (PkgIterator const &amp;Pkg, bool MarkPurge=false, unsigned long Depth=0, bool FromUser=true)</td></tr>
<tr class="separator:ac984518664a8bdfefdd8f8ed6dff993d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aab6b1c53f7766ad618b80ebee701b60d"><td class="memItemLeft" align="right" valign="top"><a id="aab6b1c53f7766ad618b80ebee701b60d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>MarkInstall</b> (PkgIterator const &amp;Pkg, bool AutoInst=true, unsigned long Depth=0, bool FromUser=true, bool ForceImportantDeps=false)</td></tr>
<tr class="separator:aab6b1c53f7766ad618b80ebee701b60d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a783fde482496fd35f35ec9ea4153b497"><td class="memItemLeft" align="right" valign="top"><a id="a783fde482496fd35f35ec9ea4153b497"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>MarkProtected</b> (PkgIterator const &amp;Pkg)</td></tr>
<tr class="separator:a783fde482496fd35f35ec9ea4153b497"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a56a53877725646f2cb1f4b7268f3feab"><td class="memItemLeft" align="right" valign="top"><a id="a56a53877725646f2cb1f4b7268f3feab"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetReInstall</b> (PkgIterator const &amp;Pkg, bool To)</td></tr>
<tr class="separator:a56a53877725646f2cb1f4b7268f3feab"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6295cc8647b4a3ca95ac71cb7d11cf5e"><td class="memItemLeft" align="right" valign="top">pkgCache::VerIterator&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#a6295cc8647b4a3ca95ac71cb7d11cf5e">GetCandidateVersion</a> (pkgCache::PkgIterator const &amp;Pkg)</td></tr>
<tr class="separator:a6295cc8647b4a3ca95ac71cb7d11cf5e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88c149d44447f7a56da1412631ea4d85"><td class="memItemLeft" align="right" valign="top"><a id="a88c149d44447f7a56da1412631ea4d85"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetCandidateVersion</b> (VerIterator TargetVer)</td></tr>
<tr class="separator:a88c149d44447f7a56da1412631ea4d85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aadeec91272816d10f774eaf5cbae7f23"><td class="memItemLeft" align="right" valign="top"><a id="aadeec91272816d10f774eaf5cbae7f23"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>SetCandidateRelease</b> (pkgCache::VerIterator TargetVer, std::string const &amp;TargetRel)</td></tr>
<tr class="separator:aadeec91272816d10f774eaf5cbae7f23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a878855a1fdfa710a75c1251d33b0a32d"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#a878855a1fdfa710a75c1251d33b0a32d">SetCandidateRelease</a> (pkgCache::VerIterator TargetVer, std::string const &amp;TargetRel, std::list&lt; std::pair&lt; pkgCache::VerIterator, pkgCache::VerIterator &gt; &gt; &amp;Changed)</td></tr>
<tr class="separator:a878855a1fdfa710a75c1251d33b0a32d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a88a05f968ff34a58f71a896ad15dea4d"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#a88a05f968ff34a58f71a896ad15dea4d">MarkAuto</a> (const PkgIterator &amp;Pkg, bool Auto)</td></tr>
<tr class="separator:a88a05f968ff34a58f71a896ad15dea4d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5fdeb68216c5ff24d05181afa44e9e4b"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#a5fdeb68216c5ff24d05181afa44e9e4b">IsInstallOk</a> (const PkgIterator &amp;Pkg, bool AutoInst=true, unsigned long Depth=0, bool FromUser=true)</td></tr>
<tr class="separator:a5fdeb68216c5ff24d05181afa44e9e4b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9889a8e869ac184b4366c8bfb1846225"><td class="memItemLeft" align="right" valign="top">virtual bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classpkgDepCache.xhtml#a9889a8e869ac184b4366c8bfb1846225">IsDeleteOk</a> (const PkgIterator &amp;Pkg, bool MarkPurge=false, unsigned long Depth=0, bool FromUser=true)</td></tr>
<tr class="separator:a9889a8e869ac184b4366c8bfb1846225"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab179ed3510a37dde013846f61a9caeec"><td class="memItemLeft" align="right" valign="top"><a id="ab179ed3510a37dde013846f61a9caeec"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>readStateFile</b> (<a class="el" href="classOpProgress.xhtml">OpProgress</a> *const prog)</td></tr>
<tr class="separator:ab179ed3510a37dde013846f61a9caeec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af4fea2e51b675dfc7e3edbe0c21e57f8"><td class="memItemLeft" align="right" valign="top"><a id="af4fea2e51b675dfc7e3edbe0c21e57f8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>writeStateFile</b> (<a class="el" href="classOpProgress.xhtml">OpProgress</a> *const prog, bool const InstalledOnly=true)</td></tr>
<tr class="separator:af4fea2e51b675dfc7e3edbe0c21e57f8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5bb66e6baed11c3718622746a36d4ef3"><td class="memItemLeft" align="right" valign="top"><a id="a5bb66e6baed11c3718622746a36d4ef3"></a>
signed long long&#160;</td><td class="memItemRight" valign="bottom"><b>UsrSize</b> ()</td></tr>
<tr class="separator:a5bb66e6baed11c3718622746a36d4ef3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a68f76ea8b9dd781f14b749e6c1621542"><td class="memItemLeft" align="right" valign="top"><a id="a68f76ea8b9dd781f14b749e6c1621542"></a>
unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><b>DebSize</b> ()</td></tr>
<tr class="separator:a68f76ea8b9dd781f14b749e6c1621542"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aac06eaa702ffb7d36454dee784906c94"><td class="memItemLeft" align="right" valign="top"><a id="aac06eaa702ffb7d36454dee784906c94"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>DelCount</b> ()</td></tr>
<tr class="separator:aac06eaa702ffb7d36454dee784906c94"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a24f8a5c28993e10a0df0f5752062eaf6"><td class="memItemLeft" align="right" valign="top"><a id="a24f8a5c28993e10a0df0f5752062eaf6"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>KeepCount</b> ()</td></tr>
<tr class="separator:a24f8a5c28993e10a0df0f5752062eaf6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a92742197b4afece4f856191aad8decb5"><td class="memItemLeft" align="right" valign="top"><a id="a92742197b4afece4f856191aad8decb5"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>InstCount</b> ()</td></tr>
<tr class="separator:a92742197b4afece4f856191aad8decb5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac669d690954abec7015a70f29ce08498"><td class="memItemLeft" align="right" valign="top"><a id="ac669d690954abec7015a70f29ce08498"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>BrokenCount</b> ()</td></tr>
<tr class="separator:ac669d690954abec7015a70f29ce08498"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adc24611b2720f0d732a9ebfe2ac80fa1"><td class="memItemLeft" align="right" valign="top"><a id="adc24611b2720f0d732a9ebfe2ac80fa1"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>PolicyBrokenCount</b> ()</td></tr>
<tr class="separator:adc24611b2720f0d732a9ebfe2ac80fa1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8178d0cf40a3f313404647583783ced4"><td class="memItemLeft" align="right" valign="top"><a id="a8178d0cf40a3f313404647583783ced4"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>BadCount</b> ()</td></tr>
<tr class="separator:a8178d0cf40a3f313404647583783ced4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac753af33d3a476b03fc5ce92076c2b85"><td class="memItemLeft" align="right" valign="top"><a id="ac753af33d3a476b03fc5ce92076c2b85"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Init</b> (<a class="el" href="classOpProgress.xhtml">OpProgress</a> *const Prog)</td></tr>
<tr class="separator:ac753af33d3a476b03fc5ce92076c2b85"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a44a7d07fbf49ebcc0a9595bb0ef5b8cc"><td class="memItemLeft" align="right" valign="top"><a id="a44a7d07fbf49ebcc0a9595bb0ef5b8cc"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Update</b> (<a class="el" href="classOpProgress.xhtml">OpProgress</a> *const Prog=0)</td></tr>
<tr class="separator:a44a7d07fbf49ebcc0a9595bb0ef5b8cc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a570f4e559f605150f59f81ed48d1f42a"><td class="memItemLeft" align="right" valign="top"><a id="a570f4e559f605150f59f81ed48d1f42a"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>pkgDepCache</b> (<a class="el" href="classpkgCache.xhtml">pkgCache</a> *const Cache, <a class="el" href="classpkgDepCache_1_1Policy.xhtml">Policy</a> *const Plcy=0)</td></tr>
<tr class="separator:a570f4e559f605150f59f81ed48d1f42a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a90f88bc9cd8a048dbd01481071a42dcc"><td class="memItemLeft" align="right" valign="top"><a id="a90f88bc9cd8a048dbd01481071a42dcc"></a>
virtual&#160;</td><td class="memItemRight" valign="bottom"><b>~pkgDepCache</b> ()</td></tr>
<tr class="separator:a90f88bc9cd8a048dbd01481071a42dcc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9675c6f11f47bea1724deefd95670dfc"><td class="memItemLeft" align="right" valign="top"><a id="a9675c6f11f47bea1724deefd95670dfc"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>CheckConsistency</b> (char const *const msgtag=&quot;&quot;)</td></tr>
<tr class="separator:a9675c6f11f47bea1724deefd95670dfc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acb83b979a162d65281763929ee7e00a9"><td class="memItemLeft" align="right" valign="top"><a id="acb83b979a162d65281763929ee7e00a9"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstallOkMultiArchSameVersionSynced</b> (PkgIterator const &amp;Pkg, bool const AutoInst, unsigned long const Depth, bool const FromUser)</td></tr>
<tr class="separator:acb83b979a162d65281763929ee7e00a9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a97b8293e74fff6f9a5ea2d816e0302e6"><td class="memItemLeft" align="right" valign="top"><a id="a97b8293e74fff6f9a5ea2d816e0302e6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsInstallOkDependenciesSatisfiableByCandidates</b> (PkgIterator const &amp;Pkg, bool const AutoInst, unsigned long const Depth, bool const FromUser)</td></tr>
<tr class="separator:a97b8293e74fff6f9a5ea2d816e0302e6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd45f526ddb6a5cb1c437232a2b10584"><td class="memItemLeft" align="right" valign="top"><a id="acd45f526ddb6a5cb1c437232a2b10584"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsDeleteOkProtectInstallRequests</b> (PkgIterator const &amp;Pkg, bool const rPurge, unsigned long const Depth, bool const FromUser)</td></tr>
<tr class="separator:acd45f526ddb6a5cb1c437232a2b10584"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="inherited"></a>
Additional Inherited Members</h2></td></tr>
<tr class="inherit_header pro_types_classpkgCache_1_1Namespace"><td colspan="2" onclick="javascript:toggleInherit('pro_types_classpkgCache_1_1Namespace')"><img src="closed.png" alt="-"/>&#160;Protected Types inherited from <a class="el" href="classpkgCache_1_1Namespace.xhtml">pkgCache&lt; Str, Itr &gt;::Namespace</a></td></tr>
<tr class="memitem:ae81da2a031acdefccb48a27e7470c2a1 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="ae81da2a031acdefccb48a27e7470c2a1"></a>
typedef pkgCache::GrpIterator&#160;</td><td class="memItemRight" valign="bottom"><b>GrpIterator</b></td></tr>
<tr class="separator:ae81da2a031acdefccb48a27e7470c2a1 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9ad5af2a8fa2d8b81603d90fd34b6129 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="a9ad5af2a8fa2d8b81603d90fd34b6129"></a>
typedef pkgCache::PkgIterator&#160;</td><td class="memItemRight" valign="bottom"><b>PkgIterator</b></td></tr>
<tr class="separator:a9ad5af2a8fa2d8b81603d90fd34b6129 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab64c9bacccaa7738461bdb238c3dcac3 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="ab64c9bacccaa7738461bdb238c3dcac3"></a>
typedef pkgCache::VerIterator&#160;</td><td class="memItemRight" valign="bottom"><b>VerIterator</b></td></tr>
<tr class="separator:ab64c9bacccaa7738461bdb238c3dcac3 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a6cdf5898ef298fabc1ebd101473946d0 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="a6cdf5898ef298fabc1ebd101473946d0"></a>
typedef pkgCache::DescIterator&#160;</td><td class="memItemRight" valign="bottom"><b>DescIterator</b></td></tr>
<tr class="separator:a6cdf5898ef298fabc1ebd101473946d0 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac87e5dd3b8b2e754f9cc66c8aeee4bf7 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="ac87e5dd3b8b2e754f9cc66c8aeee4bf7"></a>
typedef pkgCache::DepIterator&#160;</td><td class="memItemRight" valign="bottom"><b>DepIterator</b></td></tr>
<tr class="separator:ac87e5dd3b8b2e754f9cc66c8aeee4bf7 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a83ffc5e1a16b9c12d3400cdbbb229711 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="a83ffc5e1a16b9c12d3400cdbbb229711"></a>
typedef pkgCache::PrvIterator&#160;</td><td class="memItemRight" valign="bottom"><b>PrvIterator</b></td></tr>
<tr class="separator:a83ffc5e1a16b9c12d3400cdbbb229711 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afaac5ce1ffa368f9f0de468b0e08c659 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="afaac5ce1ffa368f9f0de468b0e08c659"></a>
typedef pkgCache::RlsFileIterator&#160;</td><td class="memItemRight" valign="bottom"><b>RlsFileIterator</b></td></tr>
<tr class="separator:afaac5ce1ffa368f9f0de468b0e08c659 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac373cca2f5b58c27892a031b44f318d8 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="ac373cca2f5b58c27892a031b44f318d8"></a>
typedef pkgCache::PkgFileIterator&#160;</td><td class="memItemRight" valign="bottom"><b>PkgFileIterator</b></td></tr>
<tr class="separator:ac373cca2f5b58c27892a031b44f318d8 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a48d2e69bfa9befc06957ee7083c31726 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="a48d2e69bfa9befc06957ee7083c31726"></a>
typedef pkgCache::VerFileIterator&#160;</td><td class="memItemRight" valign="bottom"><b>VerFileIterator</b></td></tr>
<tr class="separator:a48d2e69bfa9befc06957ee7083c31726 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acd8fc75b6801b7750de88007ce5bead8 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="acd8fc75b6801b7750de88007ce5bead8"></a>
typedef <a class="el" href="structpkgCache_1_1Version.xhtml">pkgCache::Version</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Version</b></td></tr>
<tr class="separator:acd8fc75b6801b7750de88007ce5bead8 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a10afddb154f24ab4c8c22044b150c191 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="a10afddb154f24ab4c8c22044b150c191"></a>
typedef <a class="el" href="structpkgCache_1_1Description.xhtml">pkgCache::Description</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Description</b></td></tr>
<tr class="separator:a10afddb154f24ab4c8c22044b150c191 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1e2df1fb1124515534ab29a88b56113f inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="a1e2df1fb1124515534ab29a88b56113f"></a>
typedef <a class="el" href="structpkgCache_1_1Package.xhtml">pkgCache::Package</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Package</b></td></tr>
<tr class="separator:a1e2df1fb1124515534ab29a88b56113f inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a293d4384c0d1c9ee01c7d38d53f039ff inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="a293d4384c0d1c9ee01c7d38d53f039ff"></a>
typedef <a class="el" href="structpkgCache_1_1Header.xhtml">pkgCache::Header</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Header</b></td></tr>
<tr class="separator:a293d4384c0d1c9ee01c7d38d53f039ff inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a20e7224d7d01eb91ed0e976a8a7fadd8 inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="a20e7224d7d01eb91ed0e976a8a7fadd8"></a>
typedef <a class="el" href="structpkgCache_1_1Dep.xhtml">pkgCache::Dep</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Dep</b></td></tr>
<tr class="separator:a20e7224d7d01eb91ed0e976a8a7fadd8 inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a420dd7f197a332128fe46458833d915a inherit pro_types_classpkgCache_1_1Namespace"><td class="memItemLeft" align="right" valign="top"><a id="a420dd7f197a332128fe46458833d915a"></a>
typedef <a class="el" href="structpkgCache_1_1Flag.xhtml">pkgCache::Flag</a>&#160;</td><td class="memItemRight" valign="bottom"><b>Flag</b></td></tr>
<tr class="separator:a420dd7f197a332128fe46458833d915a inherit pro_types_classpkgCache_1_1Namespace"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="a9e7e1878a84ec16698318b2023645144"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9e7e1878a84ec16698318b2023645144">&#9670;&nbsp;</a></span>GetCachedRootSetFunc()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classpkgDepCache_1_1InRootSetFunc.xhtml">pkgDepCache::InRootSetFunc</a> * GetCachedRootSetFunc </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>This should return const really - do not delete. </p>

<p class="reference">References <a class="el" href="classpkgDepCache.xhtml#a1ab9378572dc74fc8088fd690d494570">GetRootSetFunc()</a>.</p>

</div>
</div>
<a id="a6295cc8647b4a3ca95ac71cb7d11cf5e"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a6295cc8647b4a3ca95ac71cb7d11cf5e">&#9670;&nbsp;</a></span>GetCandidateVersion()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">pkgCache::VerIterator GetCandidateVersion </td>
          <td>(</td>
          <td class="paramtype">pkgCache::PkgIterator const &amp;&#160;</td>
          <td class="paramname"><em>Pkg</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>'the' candidate version of a package</dd></dl>
<p>The version returned is the version previously set explicitly via SetCandidate* methods like #SetCandidateVersion or if there wasn't one set the version as chosen via #Policy.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Pkg</td><td>is the package to return the candidate for </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">Referenced by <a class="el" href="classpkgProblemResolver.xhtml#a4e1bfb762b1ddbf737d74663852aeafa">pkgProblemResolver::ResolveInternal()</a>.</p>

</div>
</div>
<a id="a1ab9378572dc74fc8088fd690d494570"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1ab9378572dc74fc8088fd690d494570">&#9670;&nbsp;</a></span>GetRootSetFunc()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classpkgDepCache_1_1InRootSetFunc.xhtml">pkgDepCache::InRootSetFunc</a> * GetRootSetFunc </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd>A function identifying packages in the root set other than manually installed packages and essential packages, or <b>NULL</b> if an error occurs.</dd></dl>
<dl class="todo"><dt><b><a class="el" href="todo.xhtml#_todo000050">Todo:</a></b></dt><dd>Is this the best place for this function? Perhaps the settings for mark-and-sweep should be stored in a single external class? </dd></dl>

<p class="reference">References <a class="el" href="classConfiguration_1_1MatchAgainstConfig.xhtml#a57e69cf53e03833fe7c1937301f7d848">Configuration::MatchAgainstConfig::wasConstructedSuccessfully()</a>.</p>

<p class="reference">Referenced by <a class="el" href="classpkgDepCache.xhtml#a9e7e1878a84ec16698318b2023645144">GetCachedRootSetFunc()</a>.</p>

</div>
</div>
<a id="a9889a8e869ac184b4366c8bfb1846225"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9889a8e869ac184b4366c8bfb1846225">&#9670;&nbsp;</a></span>IsDeleteOk()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsDeleteOk </td>
          <td>(</td>
          <td class="paramtype">const PkgIterator &amp;&#160;</td>
          <td class="paramname"><em>Pkg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>MarkPurge</em> = <code>false</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>Depth</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>FromUser</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd><b>true</b> if it's OK for MarkDelete to remove the given package.</dd></dl>
<p>The default implementation simply calls all IsDeleteOk* method mentioned below, see also <a class="el" href="classpkgDepCache.xhtml#a5fdeb68216c5ff24d05181afa44e9e4b">IsInstallOk</a>.</p>
<p>The parameters are the same as in the calling MarkDelete: </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Pkg</td><td>the package that MarkDelete wants to remove. </td></tr>
    <tr><td class="paramname">MarkPurge</td><td>should we purge instead of "only" remove? </td></tr>
    <tr><td class="paramname">Depth</td><td>recursive deep of this Marker call </td></tr>
    <tr><td class="paramname">FromUser</td><td>was the remove requested by the user? </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a5fdeb68216c5ff24d05181afa44e9e4b"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5fdeb68216c5ff24d05181afa44e9e4b">&#9670;&nbsp;</a></span>IsInstallOk()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool IsInstallOk </td>
          <td>(</td>
          <td class="paramtype">const PkgIterator &amp;&#160;</td>
          <td class="paramname"><em>Pkg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>AutoInst</em> = <code>true</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&#160;</td>
          <td class="paramname"><em>Depth</em> = <code>0</code>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>FromUser</em> = <code>true</code>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd><b>true</b> if it's OK for MarkInstall to install the given package.</dd></dl>
<p>The default implementation simply calls all IsInstallOk* method mentioned below.</p>
<p>Overriding implementations should use the hold-state-flag to cache results from previous checks of this package - if possible.</p>
<p>The parameters are the same as in the calling MarkInstall: </p><dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">Pkg</td><td>the package that MarkInstall wants to install. </td></tr>
    <tr><td class="paramname">AutoInst</td><td>install this and all its dependencies </td></tr>
    <tr><td class="paramname">Depth</td><td>recursive deep of this Marker call </td></tr>
    <tr><td class="paramname">FromUser</td><td>was the install requested by the user? </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="ac23028ed7e8f73b492717b077b3b52e8"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ac23028ed7e8f73b492717b077b3b52e8">&#9670;&nbsp;</a></span>MarkAndSweep()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool MarkAndSweep </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="classpkgDepCache_1_1InRootSetFunc.xhtml">InRootSetFunc</a> &amp;&#160;</td>
          <td class="paramname"><em>rootFunc</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Update the Marked and Garbage fields of all packages. </p>
<p>This routine is implicitly invoked after all state manipulators and when an <a class="el" href="classpkgDepCache_1_1ActionGroup.xhtml" title="Represents an active action group.">ActionGroup</a> is destroyed. It invokes the private MarkRequired() and Sweep() to do its dirty work.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">rootFunc</td><td>A predicate that returns <b>true</b> for packages that should be added to the root set. </td></tr>
  </table>
  </dd>
</dl>

<p class="reference">References <a class="el" href="classpkgDepCache.xhtml#ac23028ed7e8f73b492717b077b3b52e8">MarkAndSweep()</a>.</p>

<p class="reference">Referenced by <a class="el" href="classpkgDepCache.xhtml#ac23028ed7e8f73b492717b077b3b52e8">MarkAndSweep()</a>.</p>

</div>
</div>
<a id="a88a05f968ff34a58f71a896ad15dea4d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a88a05f968ff34a58f71a896ad15dea4d">&#9670;&nbsp;</a></span>MarkAuto()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void MarkAuto </td>
          <td>(</td>
          <td class="paramtype">const PkgIterator &amp;&#160;</td>
          <td class="paramname"><em>Pkg</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>Auto</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the "is automatically installed" flag of Pkg. </p>

</div>
</div>
<a id="af3287419f765a35b0f1f25e449167718"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af3287419f765a35b0f1f25e449167718">&#9670;&nbsp;</a></span>MarkFollowsRecommends()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool MarkFollowsRecommends </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd><b>true</b> if the garbage collector should follow recommendations. </dd></dl>

</div>
</div>
<a id="a9890f74f3e35a54ac7d4f3b5ab00aeb2"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a9890f74f3e35a54ac7d4f3b5ab00aeb2">&#9670;&nbsp;</a></span>MarkFollowsSuggests()</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">bool MarkFollowsSuggests </td>
          <td>(</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">virtual</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<dl class="section return"><dt>Returns</dt><dd><b>true</b> if the garbage collector should follow suggestions. </dd></dl>

</div>
</div>
<a id="a878855a1fdfa710a75c1251d33b0a32d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a878855a1fdfa710a75c1251d33b0a32d">&#9670;&nbsp;</a></span>SetCandidateRelease()</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool SetCandidateRelease </td>
          <td>(</td>
          <td class="paramtype">pkgCache::VerIterator&#160;</td>
          <td class="paramname"><em>TargetVer</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::string const &amp;&#160;</td>
          <td class="paramname"><em>TargetRel</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">std::list&lt; std::pair&lt; pkgCache::VerIterator, pkgCache::VerIterator &gt; &gt; &amp;&#160;</td>
          <td class="paramname"><em>Changed</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>Set the candidate version for dependencies too if needed.</p>
<p>Sets not only the candidate version as SetCandidateVersion does, but walks also down the dependency tree and checks if it is required to set the candidate of the dependency to a version from the given release, too.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramdir"></td><td class="paramname">TargetVer</td><td>new candidate version of the package </td></tr>
    <tr><td class="paramdir"></td><td class="paramname">TargetRel</td><td>try to switch to this release if needed </td></tr>
    <tr><td class="paramdir">[out]</td><td class="paramname">Changed</td><td>a list of pairs consisting of the <b>old</b> version of the changed package and the version which required the switch of this dependency </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>true</b> if the switch was successful, <b>false</b> otherwise </dd></dl>

<p class="reference">References <a class="el" href="structpkgCache_1_1Dep.xhtml#aa3b0f58e581c41bc31d4b96cc4281ad6a5d66935f41f1e80990e8bf3349074fe1">pkgCache&lt; Str, Itr &gt;::Dep::Or</a>.</p>

</div>
</div>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="a3d3b83546b872ad372361b470d463f45"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3d3b83546b872ad372361b470d463f45">&#9670;&nbsp;</a></span>iDownloadSize</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long long iDownloadSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Stores how much we need to download to get the packages </p>

</div>
</div>
<a id="ab49a20f20f37cf4879e2ee750220e285"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab49a20f20f37cf4879e2ee750220e285">&#9670;&nbsp;</a></span>iUsrSize</h2>

<div class="memitem">
<div class="memproto">
<table class="mlabels">
  <tr>
  <td class="mlabels-left">
      <table class="memname">
        <tr>
          <td class="memname">signed long long iUsrSize</td>
        </tr>
      </table>
  </td>
  <td class="mlabels-right">
<span class="mlabels"><span class="mlabel">protected</span></span>  </td>
  </tr>
</table>
</div><div class="memdoc">
<p>Stores the space changes after installation </p>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>apt-pkg/<a class="el" href="depcache_8h_source.xhtml">depcache.h</a></li>
<li>apt-pkg/depcache.cc</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
