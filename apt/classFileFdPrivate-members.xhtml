<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">FileFdPrivate Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>, including all inherited members.</p>
<table class="directory">
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>buffer</b> (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>BufferedWriteFileFdPrivate</b> (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">friend</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>compressed_fd</b> (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>compressor</b> (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>compressor_pid</b> (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>filefd</b> (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FileFdPrivate</b>(FileFd *const pfilefd) (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">explicit</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>get_compressor</b>() const (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>get_is_pipe</b>() const (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>get_openmode</b>() const (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>get_seekpos</b>() const (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>InternalAlwaysAutoClose</b>() const (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>InternalClose</b>(std::string const &amp;FileName)=0 (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>InternalFlush</b>() (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>InternalOpen</b>(int const iFd, unsigned int const Mode)=0 (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>InternalRead</b>(void *To, unsigned long long Size) (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>InternalReadError</b>() (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>InternalReadLine</b>(char *To, unsigned long long Size) (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>InternalSeek</b>(unsigned long long const To) (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>InternalSize</b>() (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>InternalSkip</b>(unsigned long long Over) (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>InternalStream</b>() const (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>InternalTell</b>() (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>InternalTruncate</b>(unsigned long long const) (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>InternalUnbufferedRead</b>(void *const To, unsigned long long const Size)=0 (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>InternalWrite</b>(void const *const From, unsigned long long const Size)=0 (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">pure virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>InternalWriteError</b>() (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>is_pipe</b> (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>openmode</b> (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>seekpos</b> (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">protected</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>set_compressor</b>(APT::Configuration::Compressor const &amp;compressor) (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>set_is_pipe</b>(bool is_pipe) (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>set_openmode</b>(unsigned int openmode) (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>set_seekpos</b>(unsigned long long seekpos) (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>~FileFdPrivate</b>() (defined in <a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a>)</td><td class="entry"><a class="el" href="classFileFdPrivate.xhtml">FileFdPrivate</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
</table></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
