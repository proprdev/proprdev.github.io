<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: Member List</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><b>APT</b></li><li class="navelem"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">VersionContainer&lt; Container &gt; Member List</div>  </div>
</div><!--header-->
<div class="contents">

<p>This is the complete list of members for <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>, including all inherited members.</p>
<table class="directory">
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>allocator_type</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>begin</b>() const (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>begin</b>() (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>clear</b>() APT_OVERRIDE (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>const_iterator</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>const_pointer</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>const_reference</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>const_reverse_iterator</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>difference_type</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>empty</b>() const APT_OVERRIDE (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>end</b>() const (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>end</b>() (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>erase</b>(iterator pos) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>erase</b>(iterator first, iterator last) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>erase</b>(iterator i) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>erase</b>(iterator first, iterator last) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>find</b>(pkgCache::VerIterator const &amp;V) const (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml#a8b74a6499b06bd45bf19c1e51a6ee05f">FromCommandLine</a>(pkgCacheFile &amp;Cache, const char **cmdline, CacheSetHelper::VerSelector const fallback, CacheSetHelper &amp;helper)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromCommandLine</b>(pkgCacheFile &amp;Cache, const char **cmdline, CacheSetHelper::VerSelector const fallback) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromCommandLine</b>(pkgCacheFile &amp;Cache, const char **cmdline) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromCommandLine</b>(VersionContainerInterface *const vci, pkgCacheFile &amp;Cache, const char **cmdline, CacheSetHelper::VerSelector const fallback, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromDependency</b>(pkgCacheFile &amp;Cache, pkgCache::DepIterator const &amp;D, CacheSetHelper::VerSelector const selector, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromDependency</b>(pkgCacheFile &amp;Cache, pkgCache::DepIterator const &amp;D, CacheSetHelper::VerSelector const selector) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromDependency</b>(pkgCacheFile &amp;Cache, pkgCache::DepIterator const &amp;D) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromDependency</b>(VersionContainerInterface *const vci, pkgCacheFile &amp;Cache, pkgCache::DepIterator const &amp;D, CacheSetHelper::VerSelector const selector, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromModifierCommandLine</b>(unsigned short &amp;modID, VersionContainerInterface *const vci, pkgCacheFile &amp;Cache, const char *cmdline, std::list&lt; Modifier &gt; const &amp;mods, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml#a036ab51c0003589736f1a08ee7c3df88">FromPackage</a>(pkgCacheFile &amp;Cache, pkgCache::PkgIterator const &amp;P, CacheSetHelper::VerSelector const fallback, CacheSetHelper &amp;helper)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromPackage</b>(pkgCacheFile &amp;Cache, pkgCache::PkgIterator const &amp;P, CacheSetHelper::VerSelector const fallback) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromPackage</b>(pkgCacheFile &amp;Cache, pkgCache::PkgIterator const &amp;P) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromPackage</b>(VersionContainerInterface *const vci, pkgCacheFile &amp;Cache, pkgCache::PkgIterator const &amp;P, CacheSetHelper::VerSelector const fallback, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromPattern</b>(VersionContainerInterface *const vci, pkgCacheFile &amp;Cache, std::string pkg, CacheSetHelper::VerSelector const fallback, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromString</b>(pkgCacheFile &amp;Cache, std::string const &amp;pkg, CacheSetHelper::VerSelector const fallback, CacheSetHelper &amp;helper, bool const) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromString</b>(pkgCacheFile &amp;Cache, std::string pkg, CacheSetHelper::VerSelector const fallback) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>FromString</b>(pkgCacheFile &amp;Cache, std::string pkg) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>FromString</b>(VersionContainerInterface *const vci, pkgCacheFile &amp;Cache, std::string pkg, CacheSetHelper::VerSelector const fallback, CacheSetHelper &amp;helper, bool const onlyFromName=false) (defined in <a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"><span class="mlabel">static</span></td></tr>
  <tr><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml#ad72b2ad28b64331bc20ffba661055b74">getCandidateVer</a>(pkgCacheFile &amp;Cache, pkgCache::PkgIterator const &amp;Pkg, CacheSetHelper &amp;helper)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"><span class="mlabel">protected</span><span class="mlabel">static</span></td></tr>
  <tr class="even"><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml#abe59577170692445fe117d9994cda13e">getInstalledVer</a>(pkgCacheFile &amp;Cache, pkgCache::PkgIterator const &amp;Pkg, CacheSetHelper &amp;helper)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"><span class="mlabel">protected</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>GroupedFromCommandLine</b>(pkgCacheFile &amp;Cache, const char **cmdline, std::list&lt; Modifier &gt; const &amp;mods, unsigned short const fallback, CacheSetHelper &amp;helper) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>GroupedFromCommandLine</b>(pkgCacheFile &amp;Cache, const char **cmdline, std::list&lt; Modifier &gt; const &amp;mods, unsigned short const fallback) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">static</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert</b>(pkgCache::VerIterator const &amp;V) APT_OVERRIDE (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert</b>(VersionContainer&lt; Cont &gt; const &amp;vercont) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert</b>(const_iterator begin, const_iterator end) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert</b>(VersionContainer&lt; Cont &gt; const &amp;vercont) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert</b>(VersionContainer&lt; Cont &gt; const &amp;vercont) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert</b>(VersionContainer&lt; Cont &gt; const &amp;vercont) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert</b>(pkgCache::VerIterator const &amp;V) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert</b>(pkgCache::VerIterator const &amp;V) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert</b>(pkgCache::VerIterator const &amp;V) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert</b>(const_iterator begin, const_iterator end) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>insert</b>(const_iterator begin, const_iterator end) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>insert</b>(const_iterator begin, const_iterator end) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>iterator</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>operator=</b>(VersionContainerInterface const &amp;other) (defined in <a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>pointer</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>push_back</b>(const value_type &amp;P) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>rbegin</b>() const (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>rbegin</b>() (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>reference</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>rend</b>() const (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>rend</b>() (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>reverse_iterator</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>size</b>() const APT_OVERRIDE (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span><span class="mlabel">virtual</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>size_type</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml#a69c38fbe3f8b17f1c1a213102dd3e7a3">sort</a>(Compare)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>sort</b>(Compare Comp) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>sort</b>(Compare Comp) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>sort</b>(Compare Comp) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>value_type</b> typedef (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>VersionContainer</b>() (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>VersionContainer</b>(Itr first, Itr last) (defined in <a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainer.xhtml">VersionContainer&lt; Container &gt;</a></td><td class="entry"><span class="mlabel">inline</span></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>VersionContainerInterface</b>() (defined in <a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0"><td class="entry"><b>VersionContainerInterface</b>(VersionContainerInterface const &amp;other) (defined in <a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"></td></tr>
  <tr bgcolor="#f0f0f0" class="even"><td class="entry"><b>~VersionContainerInterface</b>() (defined in <a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a>)</td><td class="entry"><a class="el" href="classAPT_1_1VersionContainerInterface.xhtml">VersionContainerInterface</a></td><td class="entry"><span class="mlabel">virtual</span></td></tr>
</table></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
