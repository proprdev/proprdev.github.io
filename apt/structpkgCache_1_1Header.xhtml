<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: pkgCache&lt; Str, Itr &gt;::Header Struct Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="classpkgCache.xhtml">pkgCache</a></li><li class="navelem"><a class="el" href="structpkgCache_1_1Header.xhtml">Header</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-attribs">Public Attributes</a> &#124;
<a href="structpkgCache_1_1Header-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">pkgCache&lt; Str, Itr &gt;::Header Struct Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Collaboration diagram for pkgCache&lt; Str, Itr &gt;::Header:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="structpkgCache_1_1Header__coll__graph.svg" width="470" height="238"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:a05125b868492fe88337495ac21a4e5ba"><td class="memItemLeft" align="right" valign="top"><a id="a05125b868492fe88337495ac21a4e5ba"></a>
uint32_t&#160;</td><td class="memItemRight" valign="bottom"><b>GetHashTableSize</b> () const</td></tr>
<tr class="separator:a05125b868492fe88337495ac21a4e5ba"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5cfa23e67f1881a7e8b1d82cecc9fd76"><td class="memItemLeft" align="right" valign="top"><a id="a5cfa23e67f1881a7e8b1d82cecc9fd76"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetHashTableSize</b> (unsigned int const sz)</td></tr>
<tr class="separator:a5cfa23e67f1881a7e8b1d82cecc9fd76"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a43a30c0402e7b6e2f7d7898f34dc9cd1"><td class="memItemLeft" align="right" valign="top"><a id="a43a30c0402e7b6e2f7d7898f34dc9cd1"></a>
<a class="el" href="classmap__pointer.xhtml">map_stringitem_t</a>&#160;</td><td class="memItemRight" valign="bottom"><b>GetArchitectures</b> () const</td></tr>
<tr class="separator:a43a30c0402e7b6e2f7d7898f34dc9cd1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab6bce38e5ab5dee8c4ebbbe125a23f7f"><td class="memItemLeft" align="right" valign="top"><a id="ab6bce38e5ab5dee8c4ebbbe125a23f7f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetArchitectures</b> (<a class="el" href="classmap__pointer.xhtml">map_stringitem_t</a> const idx)</td></tr>
<tr class="separator:ab6bce38e5ab5dee8c4ebbbe125a23f7f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a37cee98c045c31c189234df9319edd45"><td class="memItemLeft" align="right" valign="top"><a id="a37cee98c045c31c189234df9319edd45"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>CheckSizes</b> (<a class="el" href="structpkgCache_1_1Header.xhtml">Header</a> &amp;Against) const APT_PURE</td></tr>
<tr class="separator:a37cee98c045c31c189234df9319edd45"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-attribs"></a>
Public Attributes</h2></td></tr>
<tr class="memitem:a3e66eca7759c572008f1619166f39e92"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#a3e66eca7759c572008f1619166f39e92">Signature</a></td></tr>
<tr class="memdesc:a3e66eca7759c572008f1619166f39e92"><td class="mdescLeft">&#160;</td><td class="mdescRight">Signature information.  <a href="structpkgCache_1_1Header.xhtml#a3e66eca7759c572008f1619166f39e92">More...</a><br /></td></tr>
<tr class="separator:a3e66eca7759c572008f1619166f39e92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a313de0d482cf80098fb20ec52fcde6de"><td class="memItemLeft" align="right" valign="top">map_number_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#a313de0d482cf80098fb20ec52fcde6de">MajorVersion</a></td></tr>
<tr class="separator:a313de0d482cf80098fb20ec52fcde6de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aefa25565685720d7d934ae7066272480"><td class="memItemLeft" align="right" valign="top"><a id="aefa25565685720d7d934ae7066272480"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>MinorVersion</b></td></tr>
<tr class="separator:aefa25565685720d7d934ae7066272480"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afe520d20f313629f90bcee509ed7ba66"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#afe520d20f313629f90bcee509ed7ba66">Dirty</a></td></tr>
<tr class="memdesc:afe520d20f313629f90bcee509ed7ba66"><td class="mdescLeft">&#160;</td><td class="mdescRight">indicates if the cache should be erased  <a href="structpkgCache_1_1Header.xhtml#afe520d20f313629f90bcee509ed7ba66">More...</a><br /></td></tr>
<tr class="separator:afe520d20f313629f90bcee509ed7ba66"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8f0c4e38daed372c4c0f68cee6cf563a"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#a8f0c4e38daed372c4c0f68cee6cf563a">HeaderSz</a></td></tr>
<tr class="memdesc:a8f0c4e38daed372c4c0f68cee6cf563a"><td class="mdescLeft">&#160;</td><td class="mdescRight">Size of structure values.  <a href="structpkgCache_1_1Header.xhtml#a8f0c4e38daed372c4c0f68cee6cf563a">More...</a><br /></td></tr>
<tr class="separator:a8f0c4e38daed372c4c0f68cee6cf563a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4fe4546e8f9c7ce62537e3c97304c20c"><td class="memItemLeft" align="right" valign="top"><a id="a4fe4546e8f9c7ce62537e3c97304c20c"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>GroupSz</b></td></tr>
<tr class="separator:a4fe4546e8f9c7ce62537e3c97304c20c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bdb3b10d9b31852e1c7826fd116e48f"><td class="memItemLeft" align="right" valign="top"><a id="a2bdb3b10d9b31852e1c7826fd116e48f"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>PackageSz</b></td></tr>
<tr class="separator:a2bdb3b10d9b31852e1c7826fd116e48f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a606e3eb402c63fc8796eba69a837b11c"><td class="memItemLeft" align="right" valign="top"><a id="a606e3eb402c63fc8796eba69a837b11c"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>ReleaseFileSz</b></td></tr>
<tr class="separator:a606e3eb402c63fc8796eba69a837b11c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7d380067054b83029279b9eb1e617946"><td class="memItemLeft" align="right" valign="top"><a id="a7d380067054b83029279b9eb1e617946"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>PackageFileSz</b></td></tr>
<tr class="separator:a7d380067054b83029279b9eb1e617946"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a834695b232802fd7e08ba16824a14fe4"><td class="memItemLeft" align="right" valign="top"><a id="a834695b232802fd7e08ba16824a14fe4"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>VersionSz</b></td></tr>
<tr class="separator:a834695b232802fd7e08ba16824a14fe4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a84638fa7d8416c270d703cfad0b28411"><td class="memItemLeft" align="right" valign="top"><a id="a84638fa7d8416c270d703cfad0b28411"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>DescriptionSz</b></td></tr>
<tr class="separator:a84638fa7d8416c270d703cfad0b28411"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad981770b5f4b24c396030d97ff412199"><td class="memItemLeft" align="right" valign="top"><a id="ad981770b5f4b24c396030d97ff412199"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>DependencySz</b></td></tr>
<tr class="separator:ad981770b5f4b24c396030d97ff412199"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab79e3294f194f0cec315cec6e74510df"><td class="memItemLeft" align="right" valign="top"><a id="ab79e3294f194f0cec315cec6e74510df"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>DependencyDataSz</b></td></tr>
<tr class="separator:ab79e3294f194f0cec315cec6e74510df"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8d8214130a6c355766e87221d569c2c8"><td class="memItemLeft" align="right" valign="top"><a id="a8d8214130a6c355766e87221d569c2c8"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>ProvidesSz</b></td></tr>
<tr class="separator:a8d8214130a6c355766e87221d569c2c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9df0f7ef88b91b5bb228925d6721983b"><td class="memItemLeft" align="right" valign="top"><a id="a9df0f7ef88b91b5bb228925d6721983b"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>VerFileSz</b></td></tr>
<tr class="separator:a9df0f7ef88b91b5bb228925d6721983b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2fbff3e3cf2ecb878457ea57b3f890d1"><td class="memItemLeft" align="right" valign="top"><a id="a2fbff3e3cf2ecb878457ea57b3f890d1"></a>
map_number_t&#160;</td><td class="memItemRight" valign="bottom"><b>DescFileSz</b></td></tr>
<tr class="separator:a2fbff3e3cf2ecb878457ea57b3f890d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af0fcbba8db90d528d92e97cf674f10ce"><td class="memItemLeft" align="right" valign="top">map_id_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#af0fcbba8db90d528d92e97cf674f10ce">GroupCount</a></td></tr>
<tr class="memdesc:af0fcbba8db90d528d92e97cf674f10ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">Structure counts.  <a href="structpkgCache_1_1Header.xhtml#af0fcbba8db90d528d92e97cf674f10ce">More...</a><br /></td></tr>
<tr class="separator:af0fcbba8db90d528d92e97cf674f10ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abd1170a7fd3f4af210b9d92dcc80e298"><td class="memItemLeft" align="right" valign="top"><a id="abd1170a7fd3f4af210b9d92dcc80e298"></a>
map_id_t&#160;</td><td class="memItemRight" valign="bottom"><b>PackageCount</b></td></tr>
<tr class="separator:abd1170a7fd3f4af210b9d92dcc80e298"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa8dc560d39c6737129dc4481e0f3740b"><td class="memItemLeft" align="right" valign="top"><a id="aa8dc560d39c6737129dc4481e0f3740b"></a>
map_id_t&#160;</td><td class="memItemRight" valign="bottom"><b>VersionCount</b></td></tr>
<tr class="separator:aa8dc560d39c6737129dc4481e0f3740b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ee02063dd7314f03f123f6a2bf054bd"><td class="memItemLeft" align="right" valign="top"><a id="a7ee02063dd7314f03f123f6a2bf054bd"></a>
map_id_t&#160;</td><td class="memItemRight" valign="bottom"><b>DescriptionCount</b></td></tr>
<tr class="separator:a7ee02063dd7314f03f123f6a2bf054bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef98df21bb50219626d9c6c8dc103d5a"><td class="memItemLeft" align="right" valign="top"><a id="aef98df21bb50219626d9c6c8dc103d5a"></a>
map_id_t&#160;</td><td class="memItemRight" valign="bottom"><b>DependsCount</b></td></tr>
<tr class="separator:aef98df21bb50219626d9c6c8dc103d5a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a23ad8eb2923f156edd3bfd87d71d52bd"><td class="memItemLeft" align="right" valign="top"><a id="a23ad8eb2923f156edd3bfd87d71d52bd"></a>
map_id_t&#160;</td><td class="memItemRight" valign="bottom"><b>DependsDataCount</b></td></tr>
<tr class="separator:a23ad8eb2923f156edd3bfd87d71d52bd"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a76db33b65a0b242f4f86759778eee7d5"><td class="memItemLeft" align="right" valign="top"><a id="a76db33b65a0b242f4f86759778eee7d5"></a>
map_fileid_t&#160;</td><td class="memItemRight" valign="bottom"><b>ReleaseFileCount</b></td></tr>
<tr class="separator:a76db33b65a0b242f4f86759778eee7d5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:adddd34a9dd5c2b0f522145e0e46a8347"><td class="memItemLeft" align="right" valign="top"><a id="adddd34a9dd5c2b0f522145e0e46a8347"></a>
map_fileid_t&#160;</td><td class="memItemRight" valign="bottom"><b>PackageFileCount</b></td></tr>
<tr class="separator:adddd34a9dd5c2b0f522145e0e46a8347"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac629cf829c418fefa05be5d3277309a1"><td class="memItemLeft" align="right" valign="top"><a id="ac629cf829c418fefa05be5d3277309a1"></a>
map_fileid_t&#160;</td><td class="memItemRight" valign="bottom"><b>VerFileCount</b></td></tr>
<tr class="separator:ac629cf829c418fefa05be5d3277309a1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5590cb903de5fd83880090a9e968e057"><td class="memItemLeft" align="right" valign="top"><a id="a5590cb903de5fd83880090a9e968e057"></a>
map_fileid_t&#160;</td><td class="memItemRight" valign="bottom"><b>DescFileCount</b></td></tr>
<tr class="separator:a5590cb903de5fd83880090a9e968e057"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a17c127f86e3293193aca891430e1ac"><td class="memItemLeft" align="right" valign="top"><a id="a0a17c127f86e3293193aca891430e1ac"></a>
map_id_t&#160;</td><td class="memItemRight" valign="bottom"><b>ProvidesCount</b></td></tr>
<tr class="separator:a0a17c127f86e3293193aca891430e1ac"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afc1c2062b5abe17ba6bb468d2779ce3d"><td class="memItemLeft" align="right" valign="top"><a class="el" href="classmap__pointer.xhtml">map_pointer</a>&lt; <a class="el" href="structpkgCache_1_1PackageFile.xhtml">PackageFile</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#afc1c2062b5abe17ba6bb468d2779ce3d">FileList</a></td></tr>
<tr class="memdesc:afc1c2062b5abe17ba6bb468d2779ce3d"><td class="mdescLeft">&#160;</td><td class="mdescRight">index of the first <a class="el" href="structpkgCache_1_1PackageFile.xhtml" title="stores information about the files used to generate the cache">PackageFile</a> structure  <a href="structpkgCache_1_1Header.xhtml#afc1c2062b5abe17ba6bb468d2779ce3d">More...</a><br /></td></tr>
<tr class="separator:afc1c2062b5abe17ba6bb468d2779ce3d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:abb0eea307c71391feee38236c19c80d7"><td class="memItemLeft" align="right" valign="top"><a id="abb0eea307c71391feee38236c19c80d7"></a>
<a class="el" href="classmap__pointer.xhtml">map_pointer</a>&lt; <a class="el" href="structpkgCache_1_1ReleaseFile.xhtml">ReleaseFile</a> &gt;&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#abb0eea307c71391feee38236c19c80d7">RlsFileList</a></td></tr>
<tr class="memdesc:abb0eea307c71391feee38236c19c80d7"><td class="mdescLeft">&#160;</td><td class="mdescRight">index of the first <a class="el" href="structpkgCache_1_1ReleaseFile.xhtml" title="stores information about the release files used to generate the cache">ReleaseFile</a> structure <br /></td></tr>
<tr class="separator:abb0eea307c71391feee38236c19c80d7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a98d903aa4a1dca28dbb0be4f1a6305ce"><td class="memItemLeft" align="right" valign="top"><a id="a98d903aa4a1dca28dbb0be4f1a6305ce"></a>
<a class="el" href="classmap__pointer.xhtml">map_stringitem_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#a98d903aa4a1dca28dbb0be4f1a6305ce">VerSysName</a></td></tr>
<tr class="memdesc:a98d903aa4a1dca28dbb0be4f1a6305ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">String representing the version system used. <br /></td></tr>
<tr class="separator:a98d903aa4a1dca28dbb0be4f1a6305ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad49a689db1a176139914c00a977b0c6a"><td class="memItemLeft" align="right" valign="top"><a id="ad49a689db1a176139914c00a977b0c6a"></a>
<a class="el" href="classmap__pointer.xhtml">map_stringitem_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#ad49a689db1a176139914c00a977b0c6a">Architecture</a></td></tr>
<tr class="memdesc:ad49a689db1a176139914c00a977b0c6a"><td class="mdescLeft">&#160;</td><td class="mdescRight">native architecture the cache was built against <br /></td></tr>
<tr class="separator:ad49a689db1a176139914c00a977b0c6a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:acbfeb61a50052347aa9098222b3a2188"><td class="memItemLeft" align="right" valign="top"><a id="acbfeb61a50052347aa9098222b3a2188"></a>
<a class="el" href="classmap__pointer.xhtml">map_stringitem_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#acbfeb61a50052347aa9098222b3a2188">Architectures</a></td></tr>
<tr class="memdesc:acbfeb61a50052347aa9098222b3a2188"><td class="mdescLeft">&#160;</td><td class="mdescRight">all architectures the cache was built against <br /></td></tr>
<tr class="separator:acbfeb61a50052347aa9098222b3a2188"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9a3d45459fb30f4be1f62677a89bb3ce"><td class="memItemLeft" align="right" valign="top"><a id="a9a3d45459fb30f4be1f62677a89bb3ce"></a>
map_filesize_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#a9a3d45459fb30f4be1f62677a89bb3ce">MaxVerFileSize</a></td></tr>
<tr class="memdesc:a9a3d45459fb30f4be1f62677a89bb3ce"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum size of a raw entry from the original <a class="el" href="structpkgCache_1_1Package.xhtml" title="contains information for a single unique package">Package</a> file. <br /></td></tr>
<tr class="separator:a9a3d45459fb30f4be1f62677a89bb3ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aba689f27b44726122951c9238bfd2d5c"><td class="memItemLeft" align="right" valign="top"><a id="aba689f27b44726122951c9238bfd2d5c"></a>
map_filesize_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#aba689f27b44726122951c9238bfd2d5c">MaxDescFileSize</a></td></tr>
<tr class="memdesc:aba689f27b44726122951c9238bfd2d5c"><td class="mdescLeft">&#160;</td><td class="mdescRight">The maximum size of a raw entry from the original Translation file. <br /></td></tr>
<tr class="separator:aba689f27b44726122951c9238bfd2d5c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5871637d03a8d4b1de56a7a56ca84e61"><td class="memItemLeft" align="right" valign="top"><a class="el" href="structDynamicMMap_1_1Pool.xhtml">DynamicMMap::Pool</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#a5871637d03a8d4b1de56a7a56ca84e61">Pools</a> [2 *12]</td></tr>
<tr class="memdesc:a5871637d03a8d4b1de56a7a56ca84e61"><td class="mdescLeft">&#160;</td><td class="mdescRight">The Pool structures manage the allocation pools that the generator uses.  <a href="structpkgCache_1_1Header.xhtml#a5871637d03a8d4b1de56a7a56ca84e61">More...</a><br /></td></tr>
<tr class="separator:a5871637d03a8d4b1de56a7a56ca84e61"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a0a033bc9af4224a91f464dbacee94e23"><td class="memItemLeft" align="right" valign="top">uint32_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#a0a033bc9af4224a91f464dbacee94e23">HashTableSize</a></td></tr>
<tr class="memdesc:a0a033bc9af4224a91f464dbacee94e23"><td class="mdescLeft">&#160;</td><td class="mdescRight">hash tables providing rapid group/package name lookup  <a href="structpkgCache_1_1Header.xhtml#a0a033bc9af4224a91f464dbacee94e23">More...</a><br /></td></tr>
<tr class="separator:a0a033bc9af4224a91f464dbacee94e23"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7ca39a3e2c2d639eaae7229c53bbb735"><td class="memItemLeft" align="right" valign="top"><a id="a7ca39a3e2c2d639eaae7229c53bbb735"></a>
map_filesize_small_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="structpkgCache_1_1Header.xhtml#a7ca39a3e2c2d639eaae7229c53bbb735">CacheFileSize</a></td></tr>
<tr class="memdesc:a7ca39a3e2c2d639eaae7229c53bbb735"><td class="mdescLeft">&#160;</td><td class="mdescRight">Hash of the file (TODO: Rename) <br /></td></tr>
<tr class="separator:a7ca39a3e2c2d639eaae7229c53bbb735"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Data Documentation</h2>
<a id="afe520d20f313629f90bcee509ed7ba66"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afe520d20f313629f90bcee509ed7ba66">&#9670;&nbsp;</a></span>Dirty</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool Dirty</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>indicates if the cache should be erased </p>
<p>Dirty is true if the cache file was opened for reading, the client expects to have written things to it and have not fully synced it. The file should be erased and rebuilt if it is true. </p>

</div>
</div>
<a id="afc1c2062b5abe17ba6bb468d2779ce3d"></a>
<h2 class="memtitle"><span class="permalink"><a href="#afc1c2062b5abe17ba6bb468d2779ce3d">&#9670;&nbsp;</a></span>FileList</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="classmap__pointer.xhtml">map_pointer</a>&lt;<a class="el" href="structpkgCache_1_1PackageFile.xhtml">PackageFile</a>&gt; FileList</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>index of the first <a class="el" href="structpkgCache_1_1PackageFile.xhtml" title="stores information about the files used to generate the cache">PackageFile</a> structure </p>
<p>The <a class="el" href="structpkgCache_1_1PackageFile.xhtml" title="stores information about the files used to generate the cache">PackageFile</a> structures are singly linked lists that represent all package files that have been merged into the cache. </p>

</div>
</div>
<a id="af0fcbba8db90d528d92e97cf674f10ce"></a>
<h2 class="memtitle"><span class="permalink"><a href="#af0fcbba8db90d528d92e97cf674f10ce">&#9670;&nbsp;</a></span>GroupCount</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">map_id_t GroupCount</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Structure counts. </p>
<p>These indicate the number of each structure contained in the cache. PackageCount is especially useful for generating user state structures. See Package::Id for more info. </p>

</div>
</div>
<a id="a0a033bc9af4224a91f464dbacee94e23"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a0a033bc9af4224a91f464dbacee94e23">&#9670;&nbsp;</a></span>HashTableSize</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t HashTableSize</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>hash tables providing rapid group/package name lookup </p>
<p>Each group/package name is inserted into a hash table using pkgCache::Hash(const &amp;string) By iterating over each entry in the hash table it is possible to iterate over the entire list of packages. Hash Collisions are handled with a singly linked list of packages based at the hash item. The linked list contains only packages that match the hashing function. In the PkgHashTable is it possible that multiple packages have the same name - these packages are stored as a sequence in the list. The size of both tables is the same. </p>

</div>
</div>
<a id="a8f0c4e38daed372c4c0f68cee6cf563a"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a8f0c4e38daed372c4c0f68cee6cf563a">&#9670;&nbsp;</a></span>HeaderSz</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t HeaderSz</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Size of structure values. </p>
<p>All *Sz variables contains the sizeof() that particular structure. It is used as an extra consistency check on the structure of the file.</p>
<p>If any of the size values do not exactly match what the client expects then the client should refuse the load the file. </p>

</div>
</div>
<a id="a313de0d482cf80098fb20ec52fcde6de"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a313de0d482cf80098fb20ec52fcde6de">&#9670;&nbsp;</a></span>MajorVersion</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">map_number_t MajorVersion</td>
        </tr>
      </table>
</div><div class="memdoc">
<p>These contain the version of the cache file </p>

</div>
</div>
<a id="a5871637d03a8d4b1de56a7a56ca84e61"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a5871637d03a8d4b1de56a7a56ca84e61">&#9670;&nbsp;</a></span>Pools</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="structDynamicMMap_1_1Pool.xhtml">DynamicMMap::Pool</a> Pools[2 *12]</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>The Pool structures manage the allocation pools that the generator uses. </p>
<p>Start indicates the first byte of the pool, Count is the number of objects remaining in the pool and ItemSize is the structure size (alignment factor) of the pool. An ItemSize of 0 indicates the pool is empty. There should be twice the number of pools as there are non-private structure types. The generator stores this information so future additions can make use of any unused pool blocks. </p>

</div>
</div>
<a id="a3e66eca7759c572008f1619166f39e92"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a3e66eca7759c572008f1619166f39e92">&#9670;&nbsp;</a></span>Signature</h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint32_t Signature</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Signature information. </p>
<p>This must contain the hex value 0x98FE76DC which is designed to verify that the system loading the image has the same byte order and byte size as the system saving the image </p>

</div>
</div>
<hr/>The documentation for this struct was generated from the following files:<ul>
<li>apt-pkg/<a class="el" href="pkgcache_8h_source.xhtml">pkgcache.h</a></li>
<li>apt-pkg/pkgcache.cc</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
