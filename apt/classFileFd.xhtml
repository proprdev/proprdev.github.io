<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: FileFd Class Reference</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
</div><!-- top -->
<div class="header">
  <div class="summary">
<a href="#pub-types">Public Types</a> &#124;
<a href="#pub-methods">Public Member Functions</a> &#124;
<a href="#pub-static-methods">Static Public Member Functions</a> &#124;
<a href="#pro-types">Protected Types</a> &#124;
<a href="#pro-attribs">Protected Attributes</a> &#124;
<a href="#friends">Friends</a> &#124;
<a href="classFileFd-members.xhtml">List of all members</a>  </div>
  <div class="headertitle">
<div class="title">FileFd Class Reference</div>  </div>
</div><!--header-->
<div class="contents">
<div class="dynheader">
Collaboration diagram for FileFd:</div>
<div class="dyncontent">
<div class="center"><iframe scrolling="no" frameborder="0" src="classFileFd__coll__graph.svg" width="223" height="218"><p><b>This browser is not able to show SVG: try Firefox, Chrome, Safari, or Opera instead.</b></p></iframe>
</div>
<center><span class="legend">[<a href="graph_legend.xhtml">legend</a>]</span></center></div>
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-types"></a>
Public Types</h2></td></tr>
<tr class="memitem:a3a70f8b621474c9885f80fe709e2dca2"><td class="memItemLeft" align="right" valign="top"><a id="a3a70f8b621474c9885f80fe709e2dca2"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>OpenMode</b> { <br />
&#160;&#160;<b>ReadOnly</b> = (1 &lt;&lt; 0)
, <b>WriteOnly</b> = (1 &lt;&lt; 1)
, <b>ReadWrite</b> = ReadOnly | WriteOnly
, <b>Create</b> = (1 &lt;&lt; 2)
, <br />
&#160;&#160;<b>Exclusive</b> = (1 &lt;&lt; 3)
, <b>Atomic</b> = Exclusive | (1 &lt;&lt; 4)
, <b>Empty</b> = (1 &lt;&lt; 5)
, <b>BufferedWrite</b> = (1 &lt;&lt; 6)
, <br />
&#160;&#160;<b>WriteEmpty</b> = ReadWrite | Create | Empty
, <b>WriteExists</b> = ReadWrite
, <b>WriteAny</b> = ReadWrite | Create
, <b>WriteTemp</b> = ReadWrite | Create | Exclusive
, <br />
&#160;&#160;<b>ReadOnlyGzip</b>
, <b>WriteAtomic</b> = ReadWrite | Create | Atomic
<br />
 }</td></tr>
<tr class="separator:a3a70f8b621474c9885f80fe709e2dca2"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a2bf2456a6ff4fe8c1a16a847e1b1dd95"><td class="memItemLeft" align="right" valign="top"><a id="a2bf2456a6ff4fe8c1a16a847e1b1dd95"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>CompressMode</b> { <br />
&#160;&#160;<b>Auto</b> = 'A'
, <b>None</b> = 'N'
, <b>Extension</b> = 'E'
, <b>Gzip</b> = 'G'
, <br />
&#160;&#160;<b>Bzip2</b> = 'B'
, <b>Lzma</b> = 'L'
, <b>Xz</b> = 'X'
, <b>Lz4</b> = '4'
, <br />
&#160;&#160;<b>Zstd</b> = 'Z'
<br />
 }</td></tr>
<tr class="separator:a2bf2456a6ff4fe8c1a16a847e1b1dd95"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-methods"></a>
Public Member Functions</h2></td></tr>
<tr class="memitem:acc1df883c5d1e2881c25e1beb7f40202"><td class="memItemLeft" align="right" valign="top"><a id="acc1df883c5d1e2881c25e1beb7f40202"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Read</b> (void *To, unsigned long long Size, bool AllowEof)</td></tr>
<tr class="separator:acc1df883c5d1e2881c25e1beb7f40202"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a533e66bc902c528c0710a477c886b9a3"><td class="memItemLeft" align="right" valign="top"><a id="a533e66bc902c528c0710a477c886b9a3"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Read</b> (void *To, unsigned long long Size, unsigned long long *Actual=0)</td></tr>
<tr class="separator:a533e66bc902c528c0710a477c886b9a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab38ee7facb05c4733b5e27ee15f9c6e5"><td class="memItemLeft" align="right" valign="top">char *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFileFd.xhtml#ab38ee7facb05c4733b5e27ee15f9c6e5">ReadLine</a> (char *To, unsigned long long const Size)</td></tr>
<tr class="separator:ab38ee7facb05c4733b5e27ee15f9c6e5"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cafc52c77b6eaff6d383e979d55a2a4"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="classFileFd.xhtml#a1cafc52c77b6eaff6d383e979d55a2a4">ReadLine</a> (std::string &amp;To)</td></tr>
<tr class="separator:a1cafc52c77b6eaff6d383e979d55a2a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a4da7f21f19bf1845c431403863efb2c1"><td class="memItemLeft" align="right" valign="top"><a id="a4da7f21f19bf1845c431403863efb2c1"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Flush</b> ()</td></tr>
<tr class="separator:a4da7f21f19bf1845c431403863efb2c1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bc53dcd0f697a3584fb5ee40f236ccc"><td class="memItemLeft" align="right" valign="top"><a id="a7bc53dcd0f697a3584fb5ee40f236ccc"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Write</b> (const void *From, unsigned long long Size)</td></tr>
<tr class="separator:a7bc53dcd0f697a3584fb5ee40f236ccc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f475414ba8b8b863a2e9e9eea0c720d"><td class="memItemLeft" align="right" valign="top"><a id="a7f475414ba8b8b863a2e9e9eea0c720d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Seek</b> (unsigned long long To)</td></tr>
<tr class="separator:a7f475414ba8b8b863a2e9e9eea0c720d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1cd68ef7ac85a03816110b883d0f716d"><td class="memItemLeft" align="right" valign="top"><a id="a1cd68ef7ac85a03816110b883d0f716d"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Skip</b> (unsigned long long To)</td></tr>
<tr class="separator:a1cd68ef7ac85a03816110b883d0f716d"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8c2631a696f6ac7d39e7d909cd4956a6"><td class="memItemLeft" align="right" valign="top"><a id="a8c2631a696f6ac7d39e7d909cd4956a6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Truncate</b> (unsigned long long To)</td></tr>
<tr class="separator:a8c2631a696f6ac7d39e7d909cd4956a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7bf212ea2604e780ef1e68ec06827b34"><td class="memItemLeft" align="right" valign="top"><a id="a7bf212ea2604e780ef1e68ec06827b34"></a>
unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><b>Tell</b> ()</td></tr>
<tr class="separator:a7bf212ea2604e780ef1e68ec06827b34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aed932b1aeb338009c8390f5322ac228a"><td class="memItemLeft" align="right" valign="top"><a id="aed932b1aeb338009c8390f5322ac228a"></a>
unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><b>Size</b> ()</td></tr>
<tr class="separator:aed932b1aeb338009c8390f5322ac228a"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49f682f3c92761067ce1829a78d21909"><td class="memItemLeft" align="right" valign="top"><a id="a49f682f3c92761067ce1829a78d21909"></a>
unsigned long long&#160;</td><td class="memItemRight" valign="bottom"><b>FileSize</b> ()</td></tr>
<tr class="separator:a49f682f3c92761067ce1829a78d21909"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac3ef41c2b15c1d57fd9bcf913ccc5aa0"><td class="memItemLeft" align="right" valign="top"><a id="ac3ef41c2b15c1d57fd9bcf913ccc5aa0"></a>
time_t&#160;</td><td class="memItemRight" valign="bottom"><b>ModificationTime</b> ()</td></tr>
<tr class="separator:ac3ef41c2b15c1d57fd9bcf913ccc5aa0"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab4cbaf5ecc4c187b22a8261f8d45b5a6"><td class="memItemLeft" align="right" valign="top"><a id="ab4cbaf5ecc4c187b22a8261f8d45b5a6"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Open</b> (std::string FileName, unsigned int const Mode, CompressMode Compress, unsigned long const AccessMode=0666)</td></tr>
<tr class="separator:ab4cbaf5ecc4c187b22a8261f8d45b5a6"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af72054db5e4c69e74d57439aa75929ec"><td class="memItemLeft" align="right" valign="top"><a id="af72054db5e4c69e74d57439aa75929ec"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Open</b> (std::string FileName, unsigned int const Mode, <a class="el" href="structAPT_1_1Configuration_1_1Compressor.xhtml">APT::Configuration::Compressor</a> const &amp;compressor, unsigned long const AccessMode=0666)</td></tr>
<tr class="separator:af72054db5e4c69e74d57439aa75929ec"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac20edf3834e6d21547244677e9c4731c"><td class="memItemLeft" align="right" valign="top"><a id="ac20edf3834e6d21547244677e9c4731c"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Open</b> (std::string const &amp;FileName, unsigned int const Mode, unsigned long const AccessMode=0666)</td></tr>
<tr class="separator:ac20edf3834e6d21547244677e9c4731c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a06cdd9982425e1924a8601182ed9ab88"><td class="memItemLeft" align="right" valign="top"><a id="a06cdd9982425e1924a8601182ed9ab88"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>OpenDescriptor</b> (int Fd, unsigned int const Mode, CompressMode Compress, bool AutoClose=false)</td></tr>
<tr class="separator:a06cdd9982425e1924a8601182ed9ab88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1da39c4012d04d006a7bd0a07b22b3c8"><td class="memItemLeft" align="right" valign="top"><a id="a1da39c4012d04d006a7bd0a07b22b3c8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>OpenDescriptor</b> (int Fd, unsigned int const Mode, <a class="el" href="structAPT_1_1Configuration_1_1Compressor.xhtml">APT::Configuration::Compressor</a> const &amp;compressor, bool AutoClose=false)</td></tr>
<tr class="separator:a1da39c4012d04d006a7bd0a07b22b3c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad9a41d7782c99ce88e44c874965454a8"><td class="memItemLeft" align="right" valign="top"><a id="ad9a41d7782c99ce88e44c874965454a8"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>OpenDescriptor</b> (int Fd, unsigned int const Mode, bool AutoClose=false)</td></tr>
<tr class="separator:ad9a41d7782c99ce88e44c874965454a8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aef7e3d18ef267f23f64ad397fa359cc1"><td class="memItemLeft" align="right" valign="top"><a id="aef7e3d18ef267f23f64ad397fa359cc1"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Close</b> ()</td></tr>
<tr class="separator:aef7e3d18ef267f23f64ad397fa359cc1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a071d010e76ac762ffab420fcf90656a4"><td class="memItemLeft" align="right" valign="top"><a id="a071d010e76ac762ffab420fcf90656a4"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Sync</b> ()</td></tr>
<tr class="separator:a071d010e76ac762ffab420fcf90656a4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac100e6a92976247aa28eaeea810018d1"><td class="memItemLeft" align="right" valign="top"><a id="ac100e6a92976247aa28eaeea810018d1"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>Fd</b> ()</td></tr>
<tr class="separator:ac100e6a92976247aa28eaeea810018d1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a447843c42b0eb8b762097bce70468a77"><td class="memItemLeft" align="right" valign="top"><a id="a447843c42b0eb8b762097bce70468a77"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>Fd</b> (int fd)</td></tr>
<tr class="separator:a447843c42b0eb8b762097bce70468a77"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1822528b9d87e3897acff000f0ef4629"><td class="memItemLeft" align="right" valign="top"><a id="a1822528b9d87e3897acff000f0ef4629"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsOpen</b> ()</td></tr>
<tr class="separator:a1822528b9d87e3897acff000f0ef4629"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:aa09ac85e9653ed2208a6365c36dd3e28"><td class="memItemLeft" align="right" valign="top"><a id="aa09ac85e9653ed2208a6365c36dd3e28"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Failed</b> ()</td></tr>
<tr class="separator:aa09ac85e9653ed2208a6365c36dd3e28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a9df6dc5d9567d755018a22373a27315f"><td class="memItemLeft" align="right" valign="top"><a id="a9df6dc5d9567d755018a22373a27315f"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>EraseOnFailure</b> ()</td></tr>
<tr class="separator:a9df6dc5d9567d755018a22373a27315f"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a8808458007a65049c7d06dc97a957d13"><td class="memItemLeft" align="right" valign="top"><a id="a8808458007a65049c7d06dc97a957d13"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>OpFail</b> ()</td></tr>
<tr class="separator:a8808458007a65049c7d06dc97a957d13"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab44d5d527208dc2d4d7efd3e12277aa7"><td class="memItemLeft" align="right" valign="top"><a id="ab44d5d527208dc2d4d7efd3e12277aa7"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>Eof</b> ()</td></tr>
<tr class="separator:ab44d5d527208dc2d4d7efd3e12277aa7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a87d9479c04906ff821f1267f31487066"><td class="memItemLeft" align="right" valign="top"><a id="a87d9479c04906ff821f1267f31487066"></a>
bool&#160;</td><td class="memItemRight" valign="bottom"><b>IsCompressed</b> ()</td></tr>
<tr class="separator:a87d9479c04906ff821f1267f31487066"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:af92f87c82d1e15a9d059e27fab9fe0bf"><td class="memItemLeft" align="right" valign="top"><a id="af92f87c82d1e15a9d059e27fab9fe0bf"></a>
std::string &amp;&#160;</td><td class="memItemRight" valign="bottom"><b>Name</b> ()</td></tr>
<tr class="separator:af92f87c82d1e15a9d059e27fab9fe0bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a5f0c28d01fa86c4ad7750dd82c451b8b"><td class="memItemLeft" align="right" valign="top"><a id="a5f0c28d01fa86c4ad7750dd82c451b8b"></a>
void&#160;</td><td class="memItemRight" valign="bottom"><b>SetFileName</b> (std::string const &amp;name)</td></tr>
<tr class="separator:a5f0c28d01fa86c4ad7750dd82c451b8b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a1b797e01c474e474b194139358e412de"><td class="memItemLeft" align="right" valign="top"><a id="a1b797e01c474e474b194139358e412de"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>FileFd</b> (std::string FileName, unsigned int const Mode, unsigned long AccessMode=0666)</td></tr>
<tr class="separator:a1b797e01c474e474b194139358e412de"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab16e3fc1127991e37f083268e2cc7c29"><td class="memItemLeft" align="right" valign="top"><a id="ab16e3fc1127991e37f083268e2cc7c29"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>FileFd</b> (std::string FileName, unsigned int const Mode, CompressMode Compress, unsigned long AccessMode=0666)</td></tr>
<tr class="separator:ab16e3fc1127991e37f083268e2cc7c29"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a26e246da293f081191c5bfd3e951ecbc"><td class="memItemLeft" align="right" valign="top"><a id="a26e246da293f081191c5bfd3e951ecbc"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>FileFd</b> (int const Fd, unsigned int const Mode=ReadWrite, CompressMode Compress=None)</td></tr>
<tr class="separator:a26e246da293f081191c5bfd3e951ecbc"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ac88979222cd2d9bdbbfe9b44dfab0db0"><td class="memItemLeft" align="right" valign="top"><a id="ac88979222cd2d9bdbbfe9b44dfab0db0"></a>
&#160;</td><td class="memItemRight" valign="bottom"><b>FileFd</b> (int const Fd, bool const AutoClose)</td></tr>
<tr class="separator:ac88979222cd2d9bdbbfe9b44dfab0db0"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pub-static-methods"></a>
Static Public Member Functions</h2></td></tr>
<tr class="memitem:a9f9b68f1ef90a257f393d4e7b13c58bf"><td class="memItemLeft" align="right" valign="top"><a id="a9f9b68f1ef90a257f393d4e7b13c58bf"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>Read</b> (int const Fd, void *To, unsigned long long Size, unsigned long long *const Actual=0)</td></tr>
<tr class="separator:a9f9b68f1ef90a257f393d4e7b13c58bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab32516d45a4f858edf6a0555e7802b71"><td class="memItemLeft" align="right" valign="top"><a id="ab32516d45a4f858edf6a0555e7802b71"></a>
static bool&#160;</td><td class="memItemRight" valign="bottom"><b>Write</b> (int Fd, const void *From, unsigned long long Size)</td></tr>
<tr class="separator:ab32516d45a4f858edf6a0555e7802b71"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-types"></a>
Protected Types</h2></td></tr>
<tr class="memitem:a4c195421e9d6c860751d6a015aecf5a3"><td class="memItemLeft" align="right" valign="top"><a id="a4c195421e9d6c860751d6a015aecf5a3"></a>enum &#160;</td><td class="memItemRight" valign="bottom"><b>LocalFlags</b> { <br />
&#160;&#160;<b>AutoClose</b> = (1&lt;&lt;0)
, <b>Fail</b> = (1&lt;&lt;1)
, <b>DelOnFail</b> = (1&lt;&lt;2)
, <b>HitEof</b> = (1&lt;&lt;3)
, <br />
&#160;&#160;<b>Replace</b> = (1&lt;&lt;4)
, <b>Compressed</b> = (1&lt;&lt;5)
<br />
 }</td></tr>
<tr class="separator:a4c195421e9d6c860751d6a015aecf5a3"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="pro-attribs"></a>
Protected Attributes</h2></td></tr>
<tr class="memitem:af5d4caeb119a4aa84f6b7ff10caa9665"><td class="memItemLeft" align="right" valign="top"><a id="af5d4caeb119a4aa84f6b7ff10caa9665"></a>
int&#160;</td><td class="memItemRight" valign="bottom"><b>iFd</b></td></tr>
<tr class="separator:af5d4caeb119a4aa84f6b7ff10caa9665"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a15eb852dd5568416ca012c6dcbff021b"><td class="memItemLeft" align="right" valign="top"><a id="a15eb852dd5568416ca012c6dcbff021b"></a>
unsigned long&#160;</td><td class="memItemRight" valign="bottom"><b>Flags</b></td></tr>
<tr class="separator:a15eb852dd5568416ca012c6dcbff021b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a21d40ee67459129a67fe0d8941c5b7c8"><td class="memItemLeft" align="right" valign="top"><a id="a21d40ee67459129a67fe0d8941c5b7c8"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>FileName</b></td></tr>
<tr class="separator:a21d40ee67459129a67fe0d8941c5b7c8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a49180629bb18774fa01525c47ab60e33"><td class="memItemLeft" align="right" valign="top"><a id="a49180629bb18774fa01525c47ab60e33"></a>
std::string&#160;</td><td class="memItemRight" valign="bottom"><b>TemporaryFileName</b></td></tr>
<tr class="separator:a49180629bb18774fa01525c47ab60e33"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="friends"></a>
Friends</h2></td></tr>
<tr class="memitem:a73e8e1e5d38fe68d6a63ce36766a1b40"><td class="memItemLeft" align="right" valign="top"><a id="a73e8e1e5d38fe68d6a63ce36766a1b40"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>FileFdPrivate</b></td></tr>
<tr class="separator:a73e8e1e5d38fe68d6a63ce36766a1b40"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a05b3aae9721b434b455304a92cb9db7b"><td class="memItemLeft" align="right" valign="top"><a id="a05b3aae9721b434b455304a92cb9db7b"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>GzipFileFdPrivate</b></td></tr>
<tr class="separator:a05b3aae9721b434b455304a92cb9db7b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ad4f124db4c32199ec5dcc6ed5e2abe00"><td class="memItemLeft" align="right" valign="top"><a id="ad4f124db4c32199ec5dcc6ed5e2abe00"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>Bz2FileFdPrivate</b></td></tr>
<tr class="separator:ad4f124db4c32199ec5dcc6ed5e2abe00"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:afb4783f6556c7a7e6bd1e2a60d928f34"><td class="memItemLeft" align="right" valign="top"><a id="afb4783f6556c7a7e6bd1e2a60d928f34"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>LzmaFileFdPrivate</b></td></tr>
<tr class="separator:afb4783f6556c7a7e6bd1e2a60d928f34"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a7f582a9ee48117e8f35a6ae4f39c2a44"><td class="memItemLeft" align="right" valign="top"><a id="a7f582a9ee48117e8f35a6ae4f39c2a44"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>Lz4FileFdPrivate</b></td></tr>
<tr class="separator:a7f582a9ee48117e8f35a6ae4f39c2a44"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a677e28d957acce0216104d4a82d915c7"><td class="memItemLeft" align="right" valign="top"><a id="a677e28d957acce0216104d4a82d915c7"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>ZstdFileFdPrivate</b></td></tr>
<tr class="separator:a677e28d957acce0216104d4a82d915c7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:a12a365b7cc93dea35fef7b9d963fc572"><td class="memItemLeft" align="right" valign="top"><a id="a12a365b7cc93dea35fef7b9d963fc572"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>DirectFileFdPrivate</b></td></tr>
<tr class="separator:a12a365b7cc93dea35fef7b9d963fc572"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ab5035ba4e8fcfe3d1b8de1567c41f822"><td class="memItemLeft" align="right" valign="top"><a id="ab5035ba4e8fcfe3d1b8de1567c41f822"></a>
class&#160;</td><td class="memItemRight" valign="bottom"><b>PipedFileFdPrivate</b></td></tr>
<tr class="separator:ab5035ba4e8fcfe3d1b8de1567c41f822"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<h2 class="groupheader">Member Function Documentation</h2>
<a id="ab38ee7facb05c4733b5e27ee15f9c6e5"></a>
<h2 class="memtitle"><span class="permalink"><a href="#ab38ee7facb05c4733b5e27ee15f9c6e5">&#9670;&nbsp;</a></span>ReadLine() <span class="overload">[1/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">char * ReadLine </td>
          <td>(</td>
          <td class="paramtype">char *&#160;</td>
          <td class="paramname"><em>To</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long long const&#160;</td>
          <td class="paramname"><em>Size</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>read a complete line or until buffer is full</p>
<p>The buffer will always be \0 terminated, so at most Size-1 characters are read. If the buffer holds a complete line the last character (before \0) will be the newline character \n otherwise the line was longer than the buffer.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">To</td><td>buffer which will hold the line </td></tr>
    <tr><td class="paramname">Size</td><td>of the buffer to fill </td></tr>
    <tr><td class="paramname"></td><td></td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a id="a1cafc52c77b6eaff6d383e979d55a2a4"></a>
<h2 class="memtitle"><span class="permalink"><a href="#a1cafc52c77b6eaff6d383e979d55a2a4">&#9670;&nbsp;</a></span>ReadLine() <span class="overload">[2/2]</span></h2>

<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool ReadLine </td>
          <td>(</td>
          <td class="paramtype">std::string &amp;&#160;</td>
          <td class="paramname"><em>To</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>read a complete line from the file</p>
<p>Similar to std::getline() the string does <b>not</b> include the newline, but just the content of the line as the newline is not needed to distinguish cases as for the other <a class="el" href="classFileFd.xhtml#ab38ee7facb05c4733b5e27ee15f9c6e5">ReadLine</a> method.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">To</td><td>string which will hold the line </td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd><b>true</b> if successful, otherwise <b>false</b> </dd></dl>

</div>
</div>
<hr/>The documentation for this class was generated from the following files:<ul>
<li>apt-pkg/contrib/<a class="el" href="fileutl_8h_source.xhtml">fileutl.h</a></li>
<li>apt-pkg/contrib/fileutl.cc</li>
</ul>
</div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
