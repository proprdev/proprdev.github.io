<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: apt-pkg/versionmatch.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_18f22d4be2ca84c350e120b6506056ca.xhtml">apt-pkg</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">versionmatch.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">// -*- mode: cpp; mode: fold -*-</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment">// Description                                                          /*{{{*/</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment">/* ######################################################################</span></div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment">   Version Matching</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment">   This module takes a matching string and a type and locates the version</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="comment">   record that satisfies the constraint described by the matching string.</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160;<span class="comment">     Version: 1.2*</span></div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160;<span class="comment">     Release: o=Debian,v=2.1*,c=main</span></div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="comment">     Release: v=2.1*</span></div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="comment">     Release: a=testing</span></div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="comment">     Release: n=squeeze</span></div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="comment">     Release: *</span></div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="comment">     Origin: ftp.debian.org</span></div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;<span class="comment">   Release may be a complex type that can specify matches for any of:</span></div>
<div class="line"><a name="l00019"></a><span class="lineno">   19</span>&#160;<span class="comment">      Version (v= with prefix)</span></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="comment">      Origin (o=)</span></div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="comment">      Archive (a=) eg, unstable, testing, stable</span></div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="comment">      Codename (n=) e.g. etch, lenny, squeeze, sid</span></div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="comment">      Label (l=)</span></div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="comment">      Component (c=)</span></div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="comment">      Binary Architecture (b=)</span></div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="comment">   If there are no equals signs in the string then it is scanned in short</span></div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="comment">   form - if it starts with a number it is Version otherwise it is an</span></div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;<span class="comment">   Archive or a Codename.</span></div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="comment">   Release may be a &#39;*&#39; to match all releases.</span></div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="comment"></span> </div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="comment">   ##################################################################### */</span></div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;                                                                        <span class="comment">/*}}}*/</span></div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">#ifndef PKGLIB_VERSIONMATCH_H</span></div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#define PKGLIB_VERSIONMATCH_H</span></div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160; </div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#include &lt;<a class="code" href="pkgcache_8h.xhtml">apt-pkg/pkgcache.h</a>&gt;</span></div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160; </div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160; </div>
<div class="line"><a name="l00042"></a><span class="lineno"><a class="line" href="classpkgVersionMatch.xhtml">   42</a></span>&#160;<span class="keyword">class </span>APT_PUBLIC <a class="code" href="classpkgVersionMatch.xhtml">pkgVersionMatch</a></div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;{</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;   <span class="comment">// Version Matching</span></div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;   std::string VerStr;</div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;   <span class="keywordtype">bool</span> VerPrefixMatch;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;   <span class="comment">// Release Matching</span></div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;   std::string RelVerStr;</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;   <span class="keywordtype">bool</span> RelVerPrefixMatch;</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;   std::string RelOrigin;</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;   std::string RelRelease;</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;   std::string RelCodename;</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;   std::string RelArchive;</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;   std::string RelLabel;</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;   std::string RelComponent;</div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;   std::string RelArchitecture;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;   <span class="keywordtype">bool</span> MatchAll;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160; </div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;   <span class="comment">// Origin Matching</span></div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;   std::string OrSite;</div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160; </div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160; </div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;   <span class="keyword">enum</span> MatchType {None = 0,Version,Release,Origin} Type;</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160; </div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;   <span class="keywordtype">bool</span> MatchVer(<span class="keyword">const</span> <span class="keywordtype">char</span> *A,std::string B,<span class="keywordtype">bool</span> Prefix) APT_PURE;</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;   <span class="keyword">static</span> <span class="keywordtype">bool</span> ExpressionMatches(<span class="keyword">const</span> <span class="keywordtype">char</span> *pattern, <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;   <span class="keyword">static</span> <span class="keywordtype">bool</span> ExpressionMatches(<span class="keyword">const</span> std::string&amp; pattern, <span class="keyword">const</span> <span class="keywordtype">char</span> *<span class="keywordtype">string</span>);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;   <span class="keywordtype">bool</span> FileMatch(pkgCache::PkgFileIterator File);</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160;   pkgCache::VerIterator Find(pkgCache::PkgIterator Pkg);</div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;   <span class="keywordtype">bool</span> VersionMatches(pkgCache::VerIterator Ver);</div>
<div class="line"><a name="l00073"></a><span class="lineno">   73</span>&#160; </div>
<div class="line"><a name="l00074"></a><span class="lineno">   74</span>&#160;   <a class="code" href="classpkgVersionMatch.xhtml">pkgVersionMatch</a>(std::string Data,MatchType Type);</div>
<div class="line"><a name="l00075"></a><span class="lineno">   75</span>&#160;};</div>
<div class="line"><a name="l00076"></a><span class="lineno">   76</span>&#160; </div>
<div class="line"><a name="l00077"></a><span class="lineno">   77</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="aclasspkgVersionMatch_xhtml"><div class="ttname"><a href="classpkgVersionMatch.xhtml">pkgVersionMatch</a></div><div class="ttdef"><b>Definition:</b> versionmatch.h:43</div></div>
<div class="ttc" id="apkgcache_8h_xhtml"><div class="ttname"><a href="pkgcache_8h.xhtml">pkgcache.h</a></div><div class="ttdoc">pkgCache - Structure definitions for the cache file</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
