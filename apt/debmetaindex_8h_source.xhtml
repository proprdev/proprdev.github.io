<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "https://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<meta name="generator" content="Doxygen 1.9.1"/>
<meta name="viewport" content="width=device-width, initial-scale=1"/>
<title>apt: apt-pkg/deb/debmetaindex.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="dynsections.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
</head>
<body>
<div id="top"><!-- do not remove this div, it is closed by doxygen! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td id="projectalign" style="padding-left: 0.5em;">
   <div id="projectname">apt
   &#160;<span id="projectnumber">2.2.3</span>
   </div>
   <div id="projectbrief">commandline package manager</div>
  </td>
 </tr>
 </tbody>
</table>
</div>
<!-- end header part -->
<!-- Generated by Doxygen 1.9.1 -->
<script type="text/javascript" src="menudata.js"></script>
<script type="text/javascript" src="menu.js"></script>
<script type="text/javascript">
/* @license magnet:?xt=urn:btih:cf05388f2679ee054f2beb29a391d25f4e673ac3&amp;dn=gpl-2.0.txt GPL-v2 */
$(function() {
  initMenu('',false,false,'search.php','Search');
});
/* @license-end */</script>
<div id="main-nav"></div>
<div id="nav-path" class="navpath">
  <ul>
<li class="navelem"><a class="el" href="dir_18f22d4be2ca84c350e120b6506056ca.xhtml">apt-pkg</a></li><li class="navelem"><a class="el" href="dir_b856b2b7784a7c6bda5cb12e6897d9ab.xhtml">deb</a></li>  </ul>
</div>
</div><!-- top -->
<div class="header">
  <div class="headertitle">
<div class="title">debmetaindex.h</div>  </div>
</div><!--header-->
<div class="contents">
<div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="preprocessor">#ifndef PKGLIB_DEBMETAINDEX_H</span></div>
<div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="preprocessor">#define PKGLIB_DEBMETAINDEX_H</span></div>
<div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160; </div>
<div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/macros.h&gt;</span></div>
<div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="preprocessor">#include &lt;apt-pkg/metaindex.h&gt;</span></div>
<div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160; </div>
<div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="preprocessor">#include &lt;map&gt;</span></div>
<div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;<span class="preprocessor">#include &lt;string&gt;</span></div>
<div class="line"><a name="l00009"></a><span class="lineno">    9</span>&#160;<span class="preprocessor">#include &lt;vector&gt;</span></div>
<div class="line"><a name="l00010"></a><span class="lineno">   10</span>&#160; </div>
<div class="line"><a name="l00011"></a><span class="lineno">   11</span>&#160; </div>
<div class="line"><a name="l00012"></a><span class="lineno">   12</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a>;</div>
<div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgIndexFile.xhtml">pkgIndexFile</a>;</div>
<div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="keyword">class </span><a class="code" href="classIndexTarget.xhtml">IndexTarget</a>;</div>
<div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;<span class="keyword">class </span><a class="code" href="classpkgCacheGenerator.xhtml">pkgCacheGenerator</a>;</div>
<div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="keyword">class </span><a class="code" href="classOpProgress.xhtml">OpProgress</a>;</div>
<div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="keyword">class </span><a class="code" href="classdebReleaseIndexPrivate.xhtml">debReleaseIndexPrivate</a>;</div>
<div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160; </div>
<div class="line"><a name="l00019"></a><span class="lineno"><a class="line" href="classdebReleaseIndex.xhtml">   19</a></span>&#160;<span class="keyword">class </span>APT_HIDDEN <a class="code" href="classdebReleaseIndex.xhtml">debReleaseIndex</a> : <span class="keyword">public</span> <a class="code" href="classmetaIndex.xhtml">metaIndex</a></div>
<div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;{</div>
<div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;   <a class="code" href="classdebReleaseIndexPrivate.xhtml">debReleaseIndexPrivate</a> * <span class="keyword">const</span> d;</div>
<div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160; </div>
<div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;   APT_HIDDEN <span class="keywordtype">bool</span> parseSumData(<span class="keyword">const</span> <span class="keywordtype">char</span> *&amp;Start, <span class="keyword">const</span> <span class="keywordtype">char</span> *End, std::string &amp;Name,</div>
<div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;                     std::string &amp;Hash, <span class="keywordtype">unsigned</span> <span class="keywordtype">long</span> <span class="keywordtype">long</span> &amp;Size);</div>
<div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;   <span class="keyword">public</span>:</div>
<div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160; </div>
<div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;   APT_HIDDEN std::string MetaIndexInfo(<span class="keyword">const</span> <span class="keywordtype">char</span> *Type) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;   APT_HIDDEN std::string MetaIndexFile(<span class="keyword">const</span> <span class="keywordtype">char</span> *Types) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;   APT_HIDDEN std::string MetaIndexURI(<span class="keyword">const</span> <span class="keywordtype">char</span> *Type) <span class="keyword">const</span>;</div>
<div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160; </div>
<div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;   <a class="code" href="classdebReleaseIndex.xhtml">debReleaseIndex</a>(std::string <span class="keyword">const</span> &amp;<a class="code" href="classURI.xhtml">URI</a>, std::string <span class="keyword">const</span> &amp;Dist, std::map&lt;std::string,std::string&gt; <span class="keyword">const</span> &amp;Options);</div>
<div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;   <a class="code" href="classdebReleaseIndex.xhtml">debReleaseIndex</a>(std::string <span class="keyword">const</span> &amp;<a class="code" href="classURI.xhtml">URI</a>, std::string <span class="keyword">const</span> &amp;Dist, <span class="keywordtype">bool</span> <span class="keyword">const</span> Trusted, std::map&lt;std::string,std::string&gt; <span class="keyword">const</span> &amp;Options);</div>
<div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;   <span class="keyword">virtual</span> ~<a class="code" href="classdebReleaseIndex.xhtml">debReleaseIndex</a>();</div>
<div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160; </div>
<div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;   <span class="keyword">virtual</span> std::string ArchiveURI(std::string <span class="keyword">const</span> &amp;File) <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> GetIndexes(<a class="code" href="classpkgAcquire.xhtml">pkgAcquire</a> *Owner, <span class="keywordtype">bool</span> <span class="keyword">const</span> &amp;GetAll=<span class="keyword">false</span>) APT_OVERRIDE;</div>
<div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;   <span class="keyword">virtual</span> std::vector&lt;IndexTarget&gt; GetIndexTargets() <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160; </div>
<div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;   <span class="keyword">virtual</span> std::string Describe() <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;   <span class="keyword">virtual</span> pkgCache::RlsFileIterator FindInCache(<a class="code" href="classpkgCache.xhtml">pkgCache</a> &amp;Cache, <span class="keywordtype">bool</span> <span class="keyword">const</span> ModifyCheck) <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Merge(<a class="code" href="classpkgCacheGenerator.xhtml">pkgCacheGenerator</a> &amp;Gen,<a class="code" href="classOpProgress.xhtml">OpProgress</a> *Prog) <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160; </div>
<div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> Load(std::string <span class="keyword">const</span> &amp;Filename, std::string * <span class="keyword">const</span> ErrorText) APT_OVERRIDE;</div>
<div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;   <span class="keyword">virtual</span> <a class="code" href="classmetaIndex.xhtml">metaIndex</a> * <a class="code" href="classmetaIndex.xhtml#a40b4c1b95dbb0140cc29d436a3980287">UnloadedClone</a>() <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160; </div>
<div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;   <span class="keyword">virtual</span> std::vector &lt;pkgIndexFile *&gt; *GetIndexFiles() APT_OVERRIDE;</div>
<div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160; </div>
<div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;   <span class="keywordtype">bool</span> SetTrusted(TriState <span class="keyword">const</span> Trusted);</div>
<div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;   <span class="keywordtype">bool</span> SetCheckValidUntil(TriState <span class="keyword">const</span> Trusted);</div>
<div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;   <span class="keywordtype">bool</span> SetValidUntilMin(time_t <span class="keyword">const</span> Valid);</div>
<div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;   <span class="keywordtype">bool</span> SetValidUntilMax(time_t <span class="keyword">const</span> Valid);</div>
<div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;   <span class="keywordtype">bool</span> SetCheckDate(TriState <span class="keyword">const</span> CheckDate);</div>
<div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;   <span class="keywordtype">bool</span> SetDateMaxFuture(time_t <span class="keyword">const</span> DateMaxFuture);</div>
<div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;   <span class="keywordtype">bool</span> SetSignedBy(std::string <span class="keyword">const</span> &amp;SignedBy);</div>
<div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;   std::map&lt;std::string, std::string&gt; GetReleaseOptions();</div>
<div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160; </div>
<div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;   <span class="keyword">virtual</span> <span class="keywordtype">bool</span> IsTrusted() <span class="keyword">const</span> APT_OVERRIDE;</div>
<div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;   <span class="keywordtype">bool</span> IsArchitectureSupported(std::string <span class="keyword">const</span> &amp;arch) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;   <span class="keywordtype">bool</span> IsArchitectureAllSupportedFor(<a class="code" href="classIndexTarget.xhtml">IndexTarget</a> <span class="keyword">const</span> &amp;target) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;   <span class="keywordtype">bool</span> HasSupportForComponent(std::string <span class="keyword">const</span> &amp;component) <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160; </div>
<div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;   APT_PURE time_t GetNotBefore() <span class="keyword">const override</span>;</div>
<div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160; </div>
<div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;   <span class="keywordtype">void</span> AddComponent(std::string <span class="keyword">const</span> &amp;sourcesEntry,</div>
<div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;         <span class="keywordtype">bool</span> <span class="keyword">const</span> isSrc, std::string <span class="keyword">const</span> &amp;Name,</div>
<div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;         std::vector&lt;std::string&gt; <span class="keyword">const</span> &amp;Targets,</div>
<div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;         std::vector&lt;std::string&gt; <span class="keyword">const</span> &amp;Architectures,</div>
<div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;         std::vector&lt;std::string&gt; Languages,</div>
<div class="line"><a name="l00069"></a><span class="lineno">   69</span>&#160;         <span class="keywordtype">bool</span> <span class="keyword">const</span> usePDiffs, std::string <span class="keyword">const</span> &amp;useByHash);</div>
<div class="line"><a name="l00070"></a><span class="lineno">   70</span>&#160;};</div>
<div class="line"><a name="l00071"></a><span class="lineno">   71</span>&#160; </div>
<div class="line"><a name="l00072"></a><span class="lineno">   72</span>&#160;<span class="preprocessor">#endif</span></div>
<div class="ttc" id="aclassIndexTarget_xhtml"><div class="ttname"><a href="classIndexTarget.xhtml">IndexTarget</a></div><div class="ttdoc">Information about an index file.</div><div class="ttdef"><b>Definition:</b> indexfile.h:39</div></div>
<div class="ttc" id="aclassOpProgress_xhtml"><div class="ttname"><a href="classOpProgress.xhtml">OpProgress</a></div><div class="ttdef"><b>Definition:</b> progress.h:30</div></div>
<div class="ttc" id="aclassURI_xhtml"><div class="ttname"><a href="classURI.xhtml">URI</a></div><div class="ttdef"><b>Definition:</b> strutl.h:193</div></div>
<div class="ttc" id="aclassdebReleaseIndexPrivate_xhtml"><div class="ttname"><a href="classdebReleaseIndexPrivate.xhtml">debReleaseIndexPrivate</a></div><div class="ttdef"><b>Definition:</b> debmetaindex.cc:83</div></div>
<div class="ttc" id="aclassdebReleaseIndex_xhtml"><div class="ttname"><a href="classdebReleaseIndex.xhtml">debReleaseIndex</a></div><div class="ttdef"><b>Definition:</b> debmetaindex.h:20</div></div>
<div class="ttc" id="aclassmetaIndex_xhtml"><div class="ttname"><a href="classmetaIndex.xhtml">metaIndex</a></div><div class="ttdef"><b>Definition:</b> metaindex.h:21</div></div>
<div class="ttc" id="aclassmetaIndex_xhtml_a40b4c1b95dbb0140cc29d436a3980287"><div class="ttname"><a href="classmetaIndex.xhtml#a40b4c1b95dbb0140cc29d436a3980287">metaIndex::UnloadedClone</a></div><div class="ttdeci">virtual metaIndex * UnloadedClone() const =0</div></div>
<div class="ttc" id="aclasspkgAcquire_xhtml"><div class="ttname"><a href="classpkgAcquire.xhtml">pkgAcquire</a></div><div class="ttdoc">Represents the process by which a pkgAcquire object should retrieve a file or a collection of files.</div><div class="ttdef"><b>Definition:</b> acquire-item.h:59</div></div>
<div class="ttc" id="aclasspkgCacheGenerator_xhtml"><div class="ttname"><a href="classpkgCacheGenerator.xhtml">pkgCacheGenerator</a></div><div class="ttdef"><b>Definition:</b> pkgcachegen.h:43</div></div>
<div class="ttc" id="aclasspkgCache_xhtml"><div class="ttname"><a href="classpkgCache.xhtml">pkgCache</a></div><div class="ttdef"><b>Definition:</b> cacheiterators.h:48</div></div>
<div class="ttc" id="aclasspkgIndexFile_xhtml"><div class="ttname"><a href="classpkgIndexFile.xhtml">pkgIndexFile</a></div><div class="ttdef"><b>Definition:</b> indexfile.h:102</div></div>
</div><!-- fragment --></div><!-- contents -->
<!-- start footer part -->
<hr class="footer"/><address class="footer"><small>
Generated by&#160;<a href="https://www.doxygen.org/index.html"><img class="footer" src="doxygen.svg" width="104" height="31" alt="doxygen"/></a> 1.9.1
</small></address>
</body>
</html>
